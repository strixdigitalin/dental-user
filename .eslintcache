[{"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\index.js":"1","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\reportWebVitals.js":"2","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\App.js":"3","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\application\\store\\index.js":"4","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\routes\\index.js":"5","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\theme\\index.js":"6","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\application\\reducers\\index.js":"7","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\infrastructure\\services\\index.js":"8","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\routes\\ProtectedRoutes.js":"9","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\Home.js":"10","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\About.js":"11","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\Time.js":"12","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\Contact.js":"13","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\TandC.js":"14","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\User\\TestPerfomance.js":"15","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\Login.js":"16","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\User\\PreviousTest.js":"17","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\User\\Result.js":"18","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\User\\Dashboard.js":"19","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\User\\Test.js":"20","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\User\\Practice.js":"21","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\User\\Explanation.js":"22","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\User\\FknTopics.js":"23","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\Signup.js":"24","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\Privacy-policy.js":"25","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\subscriptions\\Subscriptions.js":"26","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\component\\UI\\UiAlert.js":"27","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\application\\reducers\\authSlice.js":"28","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\application\\reducers\\explanationSlice.js":"29","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\application\\reducers\\questionSlice.js":"30","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\application\\reducers\\uiSlice.js":"31","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\application\\reducers\\testSlice.js":"32","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\infrastructure\\services\\authService.js":"33","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\infrastructure\\services\\questionService.js":"34","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\component\\Footer.js":"35","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\component\\Pricing.js":"36","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\component\\Navigations.js":"37","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\component\\UserFooter.js":"38","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\component\\UserNavigation.js":"39","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\infrastructure\\utils\\axios.js":"40","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\component\\QuestionProgress.js":"41","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\component\\DoughnutChart.js":"42","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\component\\ProgressBar.js":"43","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\index.js":"44","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\App.js":"45","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\reportWebVitals.js":"46","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\application\\store\\index.js":"47","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\theme\\index.js":"48","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\routes\\index.js":"49","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\application\\reducers\\index.js":"50","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\infrastructure\\services\\index.js":"51","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\routes\\ProtectedRoutes.js":"52","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\Time.js":"53","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\About.js":"54","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\Contact.js":"55","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\Login.js":"56","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\Home.js":"57","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\Signup.js":"58","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\User\\Practice.js":"59","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\TandC.js":"60","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\Privacy-policy.js":"61","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\User\\PreviousTest.js":"62","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\User\\Explanation.js":"63","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\User\\FknTopics.js":"64","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\User\\Test.js":"65","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\User\\Result.js":"66","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\User\\TestPerfomance.js":"67","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\subscriptions\\Subscriptions.js":"68","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\User\\Dashboard.js":"69","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\UI\\UiAlert.js":"70","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\application\\reducers\\uiSlice.js":"71","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\application\\reducers\\questionSlice.js":"72","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\application\\reducers\\explanationSlice.js":"73","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\application\\reducers\\authSlice.js":"74","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\application\\reducers\\testSlice.js":"75","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\infrastructure\\services\\authService.js":"76","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\infrastructure\\services\\questionService.js":"77","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\ProgressBar.js":"78","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\UserNavigation.js":"79","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\UserFooter.js":"80","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\QuestionProgress.js":"81","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\infrastructure\\utils\\axios.js":"82","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\DoughnutChart.js":"83","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\Navigations.js":"84","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\Footer.js":"85","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\Pricing.js":"86","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\PackageBox.js":"87","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\Constant.js":"88","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\PracticeTime.js":"89","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\index.js":"90","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\App.js":"91","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\reportWebVitals.js":"92","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\application\\store\\index.js":"93","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\theme\\index.js":"94","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\routes\\index.js":"95","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\application\\reducers\\index.js":"96","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\infrastructure\\services\\index.js":"97","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\routes\\ProtectedRoutes.js":"98","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\Contact.js":"99","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\Time.js":"100","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\Home.js":"101","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\TandC.js":"102","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\About.js":"103","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\User\\Dashboard.js":"104","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\User\\TestPerfomance.js":"105","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\Login.js":"106","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\User\\Result.js":"107","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\Signup.js":"108","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\User\\Practice.js":"109","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\subscriptions\\Subscriptions.js":"110","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\Privacy-policy.js":"111","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\User\\Explanation.js":"112","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\User\\PreviousTest.js":"113","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\User\\FknTopics.js":"114","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\User\\Test.js":"115","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\UI\\UiAlert.js":"116","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\application\\reducers\\explanationSlice.js":"117","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\infrastructure\\services\\authService.js":"118","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\infrastructure\\services\\questionService.js":"119","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\application\\reducers\\uiSlice.js":"120","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\application\\reducers\\testSlice.js":"121","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\application\\reducers\\questionSlice.js":"122","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\application\\reducers\\authSlice.js":"123","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\UserFooter.js":"124","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\UserNavigation.js":"125","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\PracticeTime.js":"126","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\infrastructure\\utils\\axios.js":"127","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\Constant.js":"128","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\QuestionProgress.js":"129","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\Footer.js":"130","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\Navigations.js":"131","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\PackageBox.js":"132","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\ProgressBar.js":"133","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\DoughnutChart.js":"134","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\Pricing.js":"135"},{"size":598,"mtime":1658476708535,"results":"136","hashOfConfig":"137"},{"size":375,"mtime":1658476708562,"results":"138","hashOfConfig":"137"},{"size":636,"mtime":1658476708485,"results":"139","hashOfConfig":"137"},{"size":1403,"mtime":1658476708673,"results":"140","hashOfConfig":"137"},{"size":3232,"mtime":1658476709648,"results":"141","hashOfConfig":"137"},{"size":824,"mtime":1658476709664,"results":"142","hashOfConfig":"137"},{"size":291,"mtime":1658476708616,"results":"143","hashOfConfig":"137"},{"size":198,"mtime":1658476708733,"results":"144","hashOfConfig":"137"},{"size":1655,"mtime":1658476709648,"results":"145","hashOfConfig":"137"},{"size":14812,"mtime":1658476709457,"results":"146","hashOfConfig":"137"},{"size":5422,"mtime":1658476709441,"results":"147","hashOfConfig":"137"},{"size":721,"mtime":1658476709504,"results":"148","hashOfConfig":"137"},{"size":4968,"mtime":1658476709441,"results":"149","hashOfConfig":"137"},{"size":30479,"mtime":1658476709504,"results":"150","hashOfConfig":"137"},{"size":5455,"mtime":1658476709631,"results":"151","hashOfConfig":"137"},{"size":6583,"mtime":1658476709457,"results":"152","hashOfConfig":"137"},{"size":4672,"mtime":1658476709599,"results":"153","hashOfConfig":"137"},{"size":7029,"mtime":1658568428363,"results":"154","hashOfConfig":"137"},{"size":10737,"mtime":1658478050496,"results":"155","hashOfConfig":"137"},{"size":7567,"mtime":1658600559660,"results":"156","hashOfConfig":"137"},{"size":15363,"mtime":1658478495633,"results":"157","hashOfConfig":"137"},{"size":4189,"mtime":1658476709557,"results":"158","hashOfConfig":"137"},{"size":7536,"mtime":1658476709572,"results":"159","hashOfConfig":"137"},{"size":9581,"mtime":1658476709488,"results":"160","hashOfConfig":"137"},{"size":29591,"mtime":1658476709473,"results":"161","hashOfConfig":"137"},{"size":7692,"mtime":1658476709526,"results":"162","hashOfConfig":"137"},{"size":814,"mtime":1658476709414,"results":"163","hashOfConfig":"137"},{"size":2603,"mtime":1658476708599,"results":"164","hashOfConfig":"137"},{"size":449,"mtime":1658476708599,"results":"165","hashOfConfig":"137"},{"size":2866,"mtime":1658476708640,"results":"166","hashOfConfig":"137"},{"size":1762,"mtime":1658476708647,"results":"167","hashOfConfig":"137"},{"size":7570,"mtime":1658600433108,"results":"168","hashOfConfig":"137"},{"size":152,"mtime":1658476708712,"results":"169","hashOfConfig":"137"},{"size":162,"mtime":1658476708746,"results":"170","hashOfConfig":"137"},{"size":4655,"mtime":1658476709346,"results":"171","hashOfConfig":"137"},{"size":5985,"mtime":1658476709378,"results":"172","hashOfConfig":"137"},{"size":6769,"mtime":1658476709357,"results":"173","hashOfConfig":"137"},{"size":363,"mtime":1658476709398,"results":"174","hashOfConfig":"137"},{"size":9175,"mtime":1658476709414,"results":"175","hashOfConfig":"137"},{"size":1812,"mtime":1658567634014,"results":"176","hashOfConfig":"137"},{"size":2023,"mtime":1658476709398,"results":"177","hashOfConfig":"137"},{"size":840,"mtime":1658476709329,"results":"178","hashOfConfig":"137"},{"size":676,"mtime":1658476709378,"results":"179","hashOfConfig":"137"},{"size":598,"mtime":1658823710059,"results":"180","hashOfConfig":"181"},{"size":829,"mtime":1659177061052,"results":"182","hashOfConfig":"181"},{"size":375,"mtime":1658823710207,"results":"183","hashOfConfig":"181"},{"size":1403,"mtime":1658823710044,"results":"184","hashOfConfig":"181"},{"size":824,"mtime":1658823710621,"results":"185","hashOfConfig":"181"},{"size":3232,"mtime":1658823710614,"results":"186","hashOfConfig":"181"},{"size":291,"mtime":1658823710001,"results":"187","hashOfConfig":"181"},{"size":198,"mtime":1658823710085,"results":"188","hashOfConfig":"181"},{"size":1655,"mtime":1658823710613,"results":"189","hashOfConfig":"181"},{"size":721,"mtime":1658823710555,"results":"190","hashOfConfig":"181"},{"size":5422,"mtime":1658823710480,"results":"191","hashOfConfig":"181"},{"size":4968,"mtime":1658823710543,"results":"192","hashOfConfig":"181"},{"size":6583,"mtime":1658823710548,"results":"193","hashOfConfig":"181"},{"size":14812,"mtime":1658823710547,"results":"194","hashOfConfig":"181"},{"size":9581,"mtime":1658823710551,"results":"195","hashOfConfig":"181"},{"size":18217,"mtime":1661252907449,"results":"196","hashOfConfig":"181"},{"size":30479,"mtime":1658823710553,"results":"197","hashOfConfig":"181"},{"size":29591,"mtime":1658823710550,"results":"198","hashOfConfig":"181"},{"size":5239,"mtime":1660846249287,"results":"199","hashOfConfig":"181"},{"size":6030,"mtime":1661285533903,"results":"200","hashOfConfig":"181"},{"size":7536,"mtime":1658823710571,"results":"201","hashOfConfig":"181"},{"size":17431,"mtime":1661291493319,"results":"202","hashOfConfig":"181"},{"size":8904,"mtime":1661165051078,"results":"203","hashOfConfig":"181"},{"size":5702,"mtime":1660842902168,"results":"204","hashOfConfig":"181"},{"size":7692,"mtime":1658823710609,"results":"205","hashOfConfig":"181"},{"size":10227,"mtime":1659779553145,"results":"206","hashOfConfig":"181"},{"size":814,"mtime":1658823710475,"results":"207","hashOfConfig":"181"},{"size":1762,"mtime":1658823710032,"results":"208","hashOfConfig":"181"},{"size":2866,"mtime":1658823710006,"results":"209","hashOfConfig":"181"},{"size":521,"mtime":1660821175850,"results":"210","hashOfConfig":"181"},{"size":2603,"mtime":1658823709995,"results":"211","hashOfConfig":"181"},{"size":7570,"mtime":1658823710022,"results":"212","hashOfConfig":"181"},{"size":152,"mtime":1658823710080,"results":"213","hashOfConfig":"181"},{"size":162,"mtime":1658823710111,"results":"214","hashOfConfig":"181"},{"size":676,"mtime":1658823710469,"results":"215","hashOfConfig":"181"},{"size":9273,"mtime":1661241484044,"results":"216","hashOfConfig":"181"},{"size":363,"mtime":1658823710476,"results":"217","hashOfConfig":"181"},{"size":2023,"mtime":1658823710472,"results":"218","hashOfConfig":"181"},{"size":1965,"mtime":1659328651198,"results":"219","hashOfConfig":"181"},{"size":840,"mtime":1658823710459,"results":"220","hashOfConfig":"181"},{"size":6769,"mtime":1658823710464,"results":"221","hashOfConfig":"181"},{"size":4655,"mtime":1658823710461,"results":"222","hashOfConfig":"181"},{"size":5985,"mtime":1658823710468,"results":"223","hashOfConfig":"181"},{"size":445,"mtime":1659280369358,"results":"224","hashOfConfig":"181"},{"size":372,"mtime":1661291493235,"results":"225","hashOfConfig":"181"},{"size":839,"mtime":1661291493297,"results":"226","hashOfConfig":"181"},{"size":598,"mtime":1665413654964,"results":"227","hashOfConfig":"228"},{"size":829,"mtime":1665413654951,"results":"229","hashOfConfig":"228"},{"size":375,"mtime":1665413654970,"results":"230","hashOfConfig":"228"},{"size":1403,"mtime":1665413654962,"results":"231","hashOfConfig":"228"},{"size":824,"mtime":1665413655043,"results":"232","hashOfConfig":"228"},{"size":3232,"mtime":1665413655041,"results":"233","hashOfConfig":"228"},{"size":291,"mtime":1665413654957,"results":"234","hashOfConfig":"228"},{"size":198,"mtime":1665413654967,"results":"235","hashOfConfig":"228"},{"size":1655,"mtime":1665413655040,"results":"236","hashOfConfig":"228"},{"size":4968,"mtime":1665413655027,"results":"237","hashOfConfig":"228"},{"size":721,"mtime":1665413655032,"results":"238","hashOfConfig":"228"},{"size":14812,"mtime":1665413655028,"results":"239","hashOfConfig":"228"},{"size":30479,"mtime":1665413655032,"results":"240","hashOfConfig":"228"},{"size":5422,"mtime":1665413655027,"results":"241","hashOfConfig":"228"},{"size":10227,"mtime":1665413655033,"results":"242","hashOfConfig":"228"},{"size":5702,"mtime":1665413655039,"results":"243","hashOfConfig":"228"},{"size":6583,"mtime":1665413655029,"results":"244","hashOfConfig":"228"},{"size":8904,"mtime":1665413655037,"results":"245","hashOfConfig":"228"},{"size":9581,"mtime":1665413655030,"results":"246","hashOfConfig":"228"},{"size":18266,"mtime":1665420010342,"results":"247","hashOfConfig":"228"},{"size":7692,"mtime":1665413655039,"results":"248","hashOfConfig":"228"},{"size":29591,"mtime":1665413655030,"results":"249","hashOfConfig":"228"},{"size":6030,"mtime":1665413655034,"results":"250","hashOfConfig":"228"},{"size":5239,"mtime":1665413655036,"results":"251","hashOfConfig":"228"},{"size":7536,"mtime":1665413655034,"results":"252","hashOfConfig":"228"},{"size":19822,"mtime":1665421884766,"results":"253","hashOfConfig":"228"},{"size":814,"mtime":1665413655023,"results":"254","hashOfConfig":"228"},{"size":521,"mtime":1665413654956,"results":"255","hashOfConfig":"228"},{"size":152,"mtime":1665413654966,"results":"256","hashOfConfig":"228"},{"size":162,"mtime":1665413654968,"results":"257","hashOfConfig":"228"},{"size":1762,"mtime":1665413654960,"results":"258","hashOfConfig":"228"},{"size":7570,"mtime":1665413654959,"results":"259","hashOfConfig":"228"},{"size":2866,"mtime":1665413654958,"results":"260","hashOfConfig":"228"},{"size":2603,"mtime":1665413654956,"results":"261","hashOfConfig":"228"},{"size":363,"mtime":1665413655025,"results":"262","hashOfConfig":"228"},{"size":9273,"mtime":1665413655026,"results":"263","hashOfConfig":"228"},{"size":839,"mtime":1665413655021,"results":"264","hashOfConfig":"228"},{"size":1965,"mtime":1665413654968,"results":"265","hashOfConfig":"228"},{"size":372,"mtime":1665413654971,"results":"266","hashOfConfig":"228"},{"size":2023,"mtime":1665413655023,"results":"267","hashOfConfig":"228"},{"size":4655,"mtime":1665413655018,"results":"268","hashOfConfig":"228"},{"size":6769,"mtime":1665413655018,"results":"269","hashOfConfig":"228"},{"size":580,"mtime":1665419975230,"results":"270","hashOfConfig":"228"},{"size":676,"mtime":1665413655022,"results":"271","hashOfConfig":"228"},{"size":840,"mtime":1665413655017,"results":"272","hashOfConfig":"228"},{"size":5985,"mtime":1665413655022,"results":"273","hashOfConfig":"228"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},"cp88bv",{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"276"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"276"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"276"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"276"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"276"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"276"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"276"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"276"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"276"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"276"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"276"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"276"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"276"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"276"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"276"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"276"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"276"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"276"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"276"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},"7606o6",{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"383"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"383"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"383"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"383"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"383"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"383"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"383"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"383"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"383"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"383"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"383"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"383"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"383"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"383"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"383"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"383"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"383"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"383"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"383"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7269qu",{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"523"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"523"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\index.js",[],["577","578"],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\reportWebVitals.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\App.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\application\\store\\index.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\routes\\index.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\theme\\index.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\application\\reducers\\index.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\infrastructure\\services\\index.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\routes\\ProtectedRoutes.js",["579","580","581"],"import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getAuth, getAuthUI } from \"../../application/reducers/authSlice\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport {\r\n  actions as uiActions,\r\n  ALERT_TYPES,\r\n} from \"../../application/reducers/uiSlice\";\r\n\r\nconst ProtectedRoute = ({ guard, component: Component, ...props }) => {\r\n  const auth = useSelector(getAuth);\r\n  // const refreshTokenUi = useSelector(getAuthUI.refreshToken);\r\n  const dispatch = useDispatch();\r\n\r\n  // if (refreshTokenUi.loading)\r\n  //   return (\r\n  //     <div\r\n  //       style={{\r\n  //         display: \"flex\",\r\n  //         width: \"100%\",\r\n  //         height: \"calc(100vh - 80px - 2rem)\",\r\n  //       }}\r\n  //     >\r\n  //       <CircularProgress\r\n  //         style={{ margin: \"auto\" }}\r\n  //         size=\"2.3rem\"\r\n  //         thickness={5}\r\n  //       />\r\n  //     </div>\r\n  //   );\r\n\r\n  if (guard && !auth.isAuth) {\r\n    dispatch(\r\n      uiActions.showAlert({\r\n        type: ALERT_TYPES.INFO,\r\n        message: \"Please login first to access it.\",\r\n      })\r\n    );\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  // if (role && role !== auth.role) {\r\n  //   dispatch(\r\n  //     uiActions.showAlert({\r\n  //       type: ALERT_TYPES.INFO,\r\n  //       message: \"You cannot access this route.\",\r\n  //     })\r\n  //   );\r\n  //   return <Redirect to={\"/login\"} />;\r\n  // }\r\n  else {\r\n    return (\r\n      <Route exact {...props}>\r\n        <Component />\r\n      </Route>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\Home.js",["582"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Grid, Container, Typography, Button, Box } from \"@mui/material\";\r\nimport PlayCircleIcon from \"@mui/icons-material/PlayCircle\";\r\nimport Pricing from \"../component/Pricing\";\r\nimport Navigation from \"../component/Navigations\";\r\nimport Footer from \"../component/Footer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    fontFamily: \"Playfair Display\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"56px\",\r\n    lineHeight: \"75px\",\r\n    textTransform: \"capitalize\",\r\n    color: \"#0B0E11\",\r\n    // \"&:hover\": {\r\n    // },\r\n    // [theme.breakpoints.down(500)]: {\r\n    // },\r\n  },\r\n  Qgrid: {\r\n    textAlign: \"center\",\r\n    height: \"auto\",\r\n    [theme.breakpoints.down(800)]: {\r\n      height: \"auto\",\r\n      padding: \"50px 10px\",\r\n    },\r\n  },\r\n  img: {\r\n    [theme.breakpoints.down(800)]: {\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  blobImg: {\r\n    width: \"100%\",\r\n    marginTop: \"-100px\",\r\n  },\r\n  button: {\r\n    background: \"red\",\r\n  },\r\n  flag_container: {\r\n    width: \"545px\",\r\n    height: \"216px\",\r\n    background: \"#FFF8F9\",\r\n    borderRadius: \"10px\",\r\n    margin: \"30px 0\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n  },\r\n  Biostatistics: {\r\n    display: \"flex\",\r\n    margin: \"100px 0\",\r\n    [theme.breakpoints.down(800)]: {\r\n      flexWrap: \"wrap\",\r\n    },\r\n  },\r\n  BioImg: {\r\n    [theme.breakpoints.down(800)]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <section\r\n        className=\"test\"\r\n        style={{ width: \"80%\", margin: \"50px auto 100px auto\" }}\r\n      >\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item lg={6} md={6} xs={12}>\r\n            <Typography\r\n              className={classes.title}\r\n              sx={{\r\n                fontFamily: \"Playfair Display\",\r\n                fontStyle: \"normal\",\r\n                fontWeight: \"bold\",\r\n                fontSize: \"56px\",\r\n                lineHeight: \"75px\",\r\n                textTransform: \"capitalize\",\r\n                color: \"#0B0E11\",\r\n              }}\r\n            >\r\n              Welcome to <span style={{ color: \"#E23012\" }}>Dental World </span>{\" \"}\r\n              Preparation with Confidence.\r\n            </Typography>\r\n            <br />\r\n            <br />\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{ padding: \"10px 30px\", background: \"#E23012\" }}\r\n                onClick={() => history.push(\"/about\")}\r\n              >\r\n                Learn More\r\n              </Button>\r\n              {/* <div style={{ display: \"flex\", marginLeft: \"30px\" }}>\r\n                <PlayCircleIcon />\r\n                <Typography>View Demo</Typography>\r\n              </div> */}\r\n            </Box>\r\n          </Grid>\r\n          <Grid item lg={6} md={6} xs={12}>\r\n            <img\r\n              src={require(\"../assets/home.png\").default}\r\n              alt=\"\"\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n      {/* <img src={require(\"../Assets/Blob.png\").default} alt=\"\" className={classes.blobImg} /> */}\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid\r\n          item\r\n          lg={6}\r\n          md={6}\r\n          xs={12}\r\n          sx={{ background: \"#FCD7C8\" }}\r\n          className={classes.Qgrid}\r\n        >\r\n          <img\r\n            src={require(\"../assets/hardworker.png\").default}\r\n            alt=\"\"\r\n            className={classes.img}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={6}\r\n          md={6}\r\n          xs={12}\r\n          sx={{ background: \"#000\" }}\r\n          className={classes.Qgrid}\r\n        >\r\n          <Container>\r\n            <Typography\r\n              sx={{\r\n                fontWeight: \"bold\",\r\n                fontSize: \"38px\",\r\n                lineHeight: \"137%\",\r\n                letterSpacing: \"0.05em\",\r\n                color: \"#FFFFFF\",\r\n                margin: \"50px 0\",\r\n              }}\r\n            >\r\n              PATHWAY TO INBDE SUCCESS\r\n            </Typography>\r\n            <Typography\r\n              sx={{\r\n                fontSize: \"16px\",\r\n                lineHeight: \"154%\",\r\n                letterSpacing: \"0.05em\",\r\n                color: \"#F9F9F9\",\r\n                margin: \"60px 0\",\r\n              }}\r\n            >\r\n              Welcome to D-world! A place where we take you to the best\r\n              preparation time for your INBDE examination. D(dental) world is a\r\n              professional and organized way of learning system. Designed to\r\n              guide you through dental knowledge and skills to succeed you as a\r\n              dental practitioner.\r\n              <br />\r\n              CHALLENGING QUESTIONS, IN DEPTH EXPLANATIONS, QUIZZES, PERFORMANCE\r\n              TRACKER are some of the exciting features that will take you\r\n              through the learning process at D-World.\r\n            </Typography>\r\n          </Container>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Key Features  */}\r\n      <Container maxWidth=\"xl\" sx={{ margin: \"100px 0\" }}>\r\n        <Typography\r\n          variant=\"h1\"\r\n          sx={{\r\n            fontSize: \"3rem\",\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n            color: \"#000\",\r\n          }}\r\n        >\r\n          WHAT IS INBDE?\r\n        </Typography>\r\n        <br />\r\n        <Typography\r\n          variant=\"body1\"\r\n          maxWidth=\"md\"\r\n          textAlign=\"center\"\r\n          sx={{\r\n            fontSize: \"1rem\",\r\n            textAlign: \"center\",\r\n            color: \"#7B7B7B\",\r\n            margin: \"0 auto 100px auto\",\r\n          }}\r\n        >\r\n          INBDE stands for Integrated National Board Dental Examination. It is\r\n          an integrated exam that merges content from clinical, biomedical, and\r\n          behavioral sciences in its evaluation of candidate dental cognitive\r\n          skills. This exam is to assist state boards of dentistry in evaluating\r\n          candidates for dental licensure. INBDE clinical content areas are\r\n          grouped into three components i.e, Diagnosis and Treatment Planning,\r\n          Oral Health Management and Practice & Profession. The total\r\n          administrative exam time of INBDE exam is 12 hours 30 minutes over a\r\n          period of one and a half day.\r\n        </Typography>\r\n        <div\r\n          className=\"key-feature\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            flexWrap: \"wrap\",\r\n          }}\r\n        >\r\n          {/* {new Array(3).fill(\"\").map((_, i) => (\r\n            <Box\r\n              style={{\r\n                textAlign: \"center\",\r\n                maxWidth: \"300px\",\r\n                margin: \"20px 0\",\r\n              }}\r\n            >\r\n              <img\r\n                src={require(\"../assets/keyfeature (2).png\").default}\r\n                alt=\"\"\r\n              />\r\n              <br />\r\n              <br />\r\n              <div>\r\n                <br />\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  sx={{ color: \"#7B7B7B\", fontSize: \"16px\" }}\r\n                >\r\n                  Lorem ipsum dolor sit amet, elit. Faucibus neque suscipit\r\n                  pretium lacus aliquam in aenean mauris non.\r\n                </Typography>\r\n              </div>\r\n            </Box>\r\n          ))} */}\r\n        </div>\r\n      </Container>\r\n      {/* Quality Is Our Obsession */}\r\n      <Container maxWidth=\"xl\">\r\n        <Typography\r\n          variant=\"h1\"\r\n          sx={{\r\n            fontSize: \"3rem\",\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n            color: \"#000\",\r\n          }}\r\n        >\r\n          D-WORLD FEATURES\r\n        </Typography>\r\n        <br />\r\n        <Typography\r\n          maxWidth=\"md\"\r\n          variant=\"body1\"\r\n          sx={{\r\n            fontSize: \"1rem\",\r\n            textAlign: \"center\",\r\n            color: \"#7B7B7B\",\r\n            margin: \"0 auto 70px auto\",\r\n          }}\r\n        >\r\n          CHALLENGING QUESTIONS, IN DEPTH EXPLANATIONS, QUIZZES, PERFORMANCE\r\n          TRACKER are some of the exciting features that will take you through\r\n          the learning process at D-World.\r\n        </Typography>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-evenly\",\r\n            flexWrap: \"wrap\",\r\n          }}\r\n        >\r\n          {Features.map((item) => (\r\n            <Box className={classes.flag_container}>\r\n              <div>\r\n                <img\r\n                  src={require(\"../assets/questionmark (2).png\").default}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <div style={{ maxWidth: \"50%\" }}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  sx={{\r\n                    color: \"#E23012\",\r\n                    fontSize: \"26px\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  {item.heading}\r\n                </Typography>\r\n                <br />\r\n              </div>\r\n            </Box>\r\n          ))}\r\n        </div>\r\n      </Container>\r\n      {/* pricing card */}\r\n      <Box style={{ margin: \"100px 0\" }}>\r\n        <Pricing />\r\n      </Box>\r\n      {/* Why Choose Us? */}\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          sx={{ justifyContent: \"space-around\", alignItems: \"center\" }}\r\n        >\r\n          <Grid item lg={6} md={6} xs={12}>\r\n            <Typography\r\n              variant=\"h1\"\r\n              sx={{\r\n                fontSize: \"3rem\",\r\n                fontWeight: \"bold\",\r\n                color: \"#000\",\r\n              }}\r\n            >\r\n              Why Choose Us?\r\n            </Typography>\r\n            <br />\r\n            {/* <Typography\r\n              variant=\"body1\"\r\n              sx={{\r\n                fontSize: \"1rem\",\r\n                color: \"#7B7B7B\",\r\n                marginBottom: \"70px\",\r\n              }}\r\n            >\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n            </Typography> */}\r\n            <br />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-evenly\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              {whyChoose.map((h, i) => (\r\n                <Box style={{ maxWidth: \"40%\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    sx={{\r\n                      color: \"#E23012\",\r\n                      fontSize: \"26px\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    {h.heading}\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    sx={{ color: \"#7B7B7B\", fontSize: \"16px\" }}\r\n                  >\r\n                    {h.text}\r\n                  </Typography>\r\n                  <br />\r\n                  <br />\r\n                </Box>\r\n              ))}\r\n            </div>\r\n          </Grid>\r\n          <Grid item lg={6} md={6} xs={12}>\r\n            {/* <a\r\n              href=\"\"\r\n              style={{\r\n                textDecoration: \"none\",\r\n                background: \"#E23012\",\r\n                padding: \"15px\",\r\n                color: \"#fff\",\r\n                position: \"absolute\",\r\n                right: \"130px\",\r\n              }}\r\n            >\r\n              Learn More\r\n            </a> */}\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <img\r\n              src={require(\"../assets/laptop.png\").default}\r\n              alt=\"\"\r\n              style={{ width: \"100%\", marginTop: \"50px\" }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n\r\n      {/* Innovative-Explanations */}\r\n      {/* <Container\r\n        maxWidth=\"lg\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          flexWrap: \"wrap\",\r\n          alignItems: \"center\",\r\n          margin: \"70px auto\",\r\n        }}\r\n      >\r\n        <Box>\r\n          <Typography\r\n            className={classes.title}\r\n            sx={{\r\n              fontFamily: \"Playfair Display\",\r\n              fontStyle: \"normal\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"56px\",\r\n              lineHeight: \"75px\",\r\n              textTransform: \"capitalize\",\r\n              color: \"#0B0E11\",\r\n            }}\r\n          >\r\n            Inovative - <span style={{ color: \"#E23012\" }}>Expansion</span>\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body1\"\r\n            sx={{\r\n              fontSize: \"1rem\",\r\n              color: \"#7B7B7B\",\r\n              margin: \"50px 0\",\r\n              maxWidth: \"300px\",\r\n            }}\r\n          >\r\n            A clear understanding of biostatistics and epidemiology is required\r\n            to critically review research and the medical literature. These\r\n            subjects are tested on the USMLE as well as on in-service and board\r\n            certification exams.\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <iframe\r\n            style={{ borderRadius: \"20px\", width: \"100%\", height: \"50vh\" }}\r\n            src=\"https://www.youtube.com/embed/tgbNymZ7vqY\"\r\n          ></iframe>\r\n        </Box>\r\n      </Container> */}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\nconst Features = [\r\n  { heading: \"2000+ Case Based Questions\" },\r\n  { heading: \"Detailed Rationales for all Questions\" },\r\n  { heading: \"Quizzes with content similar to the actual exam\" },\r\n  { heading: \"Performance Tracker  \" },\r\n];\r\n\r\nconst whyChoose = [\r\n  {\r\n    heading: \"TAKE THE EXAM with confidence\",\r\n    text: \"With questions at or above actual exam standard, be assured you’ll be ready on exam day.\",\r\n  },\r\n  {\r\n    heading: \"Expert SUBJECT MATTER\",\r\n    text: \"Our content is developed by passionate and experienced dental educators who are the leaders in training for competitive exams.\",\r\n  },\r\n  {\r\n    heading: \"CONCEPT building EXPLANATIONS for the quizzes\",\r\n    text: \"Rationale based explanations for both correct and incorrect answer choices provide an in depth understanding of all tested concepts.\",\r\n  },\r\n  {\r\n    heading: \"BUILD YOUR OWN\",\r\n    text: \"Customize and create tests according to your specific needs.\",\r\n  },\r\n];\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\About.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\Time.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\Contact.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\TandC.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\User\\TestPerfomance.js",["583"],"import { Container, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport UserNavigation from \"../../component/UserNavigation\";\r\nimport UserFooter from \"../../component/UserFooter\";\r\nimport api from \"../../../infrastructure/utils/axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// const useStyles = makeStyles({\r\n//   thead: {\r\n//     fontWeight: 600,\r\n//     fontSize: \"20px\",\r\n//     lineHeight: \"24px\",\r\n//     color: \"#FFFFFF\",\r\n//   },\r\n// });\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"#F23A5E\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nfunction createData(\r\n  ViewScore,\r\n  name,\r\n  created,\r\n  Correct,\r\n  Incorrect,\r\n  Unanswered,\r\n  Qlist\r\n) {\r\n  return { ViewScore, name, created, Correct, Incorrect, Unanswered, Qlist };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"View Result\", \"Some Test 1\", \"15th June, 2021\", 10, 5, 70, 33),\r\n  createData(\"View Result\", \"Some Test 1\", \"15th June, 2021\", 10, 5, 70, 33),\r\n  createData(\"View Result\", \"Some Test 1\", \"15th June, 2021\", 10, 5, 70, 33),\r\n  createData(\"View Result\", \"Some Test 1\", \"15th June, 2021\", 10, 5, 70, 33),\r\n  createData(\"View Result\", \"Some Test 1\", \"15th June, 2021\", 10, 5, 70, 33),\r\n  createData(\"View Result\", \"Some Test 1\", \"15th June, 2021\", 10, 5, 70, 33),\r\n  createData(\"View Result\", \"Some Test 1\", \"15th June, 2021\", 10, 5, 70, 33),\r\n];\r\n\r\nexport default function TestPerfomance() {\r\n  const [tests, setTests] = useState([]);\r\n  useEffect(() => {\r\n    api.get(\"testResult/all\").then((res) => setTests([...res.data.data]));\r\n  });\r\n  return (\r\n    <>\r\n      <UserNavigation />\r\n      <Container maxWidth=\"xl\" style={{ margin: \"100px auto\" }}>\r\n        <Typography\r\n          variant=\"h4\"\r\n          style={{ color: \"#434343\", fontSize: \"27px\", margin: \"40px 0\" }}\r\n        >\r\n          Test Performance\r\n        </Typography>\r\n        <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell sx={{ fontSize: \"20px\" }}>\r\n                  View\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  Name\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  created\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  Correct\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  In Correct\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  Unanswered\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  # of Que\r\n                </StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {tests.map((test) => (\r\n                <StyledTableRow key={test.ViewScore}>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    <NavLink\r\n                      to={`/user/result/${test[\"_id\"]}`}\r\n                      style={{ color: \"#F23A5E\", fontSize: \"16px\" }}\r\n                    >\r\n                      View Result\r\n                    </NavLink>\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test.test_name}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test[\"createdAt\"].slice(0, 10)}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test.totalCorrect}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test.totalIncorrect}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test.totalUnanswered}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test.totalQuestion}\r\n                  </StyledTableCell>\r\n                </StyledTableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Container>\r\n      <UserFooter />\r\n    </>\r\n  );\r\n}\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\Login.js",["584","585","586"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Container,\r\n} from \"@mui/material\";\r\nimport { useFormik } from \"formik\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Navigation from \"../component/Navigations\";\r\nimport Footer from \"../component/Footer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { login } from \"../../application/reducers/authSlice\";\r\nimport {\r\n  actions as uiActions,\r\n  ALERT_TYPES,\r\n} from \"../../application/reducers/uiSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  FormContainer: {\r\n    width: \"525px\",\r\n    height: \"auto\",\r\n    background: \"#FFFFFF\",\r\n    boxShadow:\r\n      \"0px 50px 100px rgba(0, 0, 0, 0.06), 0px 10px 30px rgba(0, 0, 0, 0.06)\",\r\n    borderRadius: \"20px\",\r\n    padding: \"20px\",\r\n    [theme.breakpoints.down(800)]: {\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  img: {\r\n    [theme.breakpoints.down(800)]: {\r\n      width: \"80%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n});\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values) => {\r\n      //alert(JSON.stringify(values, null, 2));\r\n      const { type } = await dispatch(login(values));\r\n      if (type === \"auth/login/fulfilled\") {\r\n        history.push(\"/user/dashboard\");\r\n      } else if (type === \"auth/login/rejected\") {\r\n        dispatch(\r\n          uiActions.showAlert({\r\n            type: ALERT_TYPES.INFO,\r\n            message: \"Please enter correct credentials.\",\r\n          })\r\n        );\r\n      }\r\n    },\r\n  });\r\n\r\n  const isAuth = useSelector((state) => state.auth.isAuth);\r\n  useEffect(() => {\r\n    if (isAuth) history.push(\"/user/dashboard\");\r\n  }, [isAuth]);\r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <Grid container maxWidth=\"lg\" margin=\"50px auto\" spacing={2}>\r\n        <Grid item lg={6} md={6} xs={12}>\r\n          <Typography\r\n            sx={{\r\n              fontFamily: \"Roboto\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"56px\",\r\n              lineHeight: \"66px\",\r\n              color: \"#0B0E11\",\r\n            }}\r\n          >\r\n            Log in to <br />\r\n            <span style={{ color: \"#E23012\" }}>Dental World </span>{\" \"}\r\n          </Typography>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <img\r\n            src={require(\"../assets/loginimg.png\").default}\r\n            alt=\"\"\r\n            className={classes.img}\r\n          />\r\n        </Grid>\r\n        <Grid item lg={6} md={6} xs={12}>\r\n          <Box className={classes.FormContainer}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              Welcome back to Dental World\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              New User?{\" \"}\r\n              <NavLink\r\n                to=\"/signup\"\r\n                style={{ color: \"#E23012\", textDecoration: \"none\" }}\r\n              >\r\n                Create Account\r\n              </NavLink>\r\n            </Typography>\r\n            <br />\r\n            <br />\r\n            {/* formik form */}\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                name=\"email\"\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                helperText={formik.touched.email && formik.errors.email}\r\n                sx={{ width: \"100%\" }}\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                id=\"outlined-password-input\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onBlur={formik.handleBlur}\r\n                autoComplete=\"current-password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.password && Boolean(formik.errors.password)\r\n                }\r\n                helperText={formik.touched.password && formik.errors.password}\r\n                sx={{ width: \"100%\" }}\r\n              />\r\n              <br />\r\n              <br />\r\n              <FormControlLabel control={<Checkbox />} label=\"Remember me\" />\r\n              <br />\r\n              <br />\r\n              <Button\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                sx={{ width: \"100%\", padding: \"15px\" }}\r\n              >\r\n                Log In\r\n              </Button>\r\n            </form>\r\n            <br />\r\n            {/* <br />\r\n            <Typography\r\n              variant=\"body1\"\r\n              sx={{\r\n                fontSize: \"1rem\",\r\n                color: \"#7B7B7B\",\r\n                marginBottom: \"30px\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              or sign up with other accounts\r\n            </Typography> */}\r\n            {/* <Container\r\n              sx={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-evenly\",\r\n              }}\r\n            >\r\n              <a href=\"\">\r\n                <img src={require(\"../assets/google.png\").default} alt=\"\" />\r\n              </a>\r\n              <a href=\"\">\r\n                <img\r\n                  src={require(\"../assets/twitter1 (2).png\").default}\r\n                  alt=\"\"\r\n                />\r\n              </a>\r\n              <a href=\"\">\r\n                <img\r\n                  src={require(\"../assets/twitter1 (1).png\").default}\r\n                  alt=\"\"\r\n                />\r\n              </a>\r\n            </Container> */}\r\n            <br />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\User\\PreviousTest.js",["587"],"import { Container, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport UserNavigation from \"../../component/UserNavigation\";\r\nimport UserFooter from \"../../component/UserFooter\";\r\nimport api from \"../../../infrastructure/utils/axios\";\r\n\r\nconst useStyles = makeStyles({\r\n  thead: {\r\n    fontWeight: 600,\r\n    fontSize: \"20px\",\r\n    lineHeight: \"24px\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n});\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"#F23A5E\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nfunction createData(score, testName, date, mode, testResult) {\r\n  return { score, testName, date, mode, testResult };\r\n}\r\n\r\nexport default function PreviousTest() {\r\n  const [tests, setTests] = useState([]);\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    api.get(\"testResult/all\").then((res) => setTests([...res.data.data]));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <UserNavigation />\r\n      {/* // <section style={{ margin: \"100px auto\" ,width:'80%'}}> */}\r\n      <Container maxWidth=\"xl\" style={{ margin: \"100px auto\" }}>\r\n        <Typography\r\n          variant=\"h4\"\r\n          style={{ color: \"#434343\", fontSize: \"27px\", margin: \"40px 0\" }}\r\n        >\r\n          Previous Tests\r\n        </Typography>\r\n        <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell sx={{ fontSize: \"20px\" }}>\r\n                  Score\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  Test Name\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  Date\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  Mode\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  Test Result\r\n                </StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {tests.map((test) => (\r\n                <StyledTableRow key={test.score}>\r\n                  <StyledTableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className={classes.row}\r\n                    style={{ fontSize: \"16px\" }}\r\n                  >\r\n                    {`${\r\n                      Math.ceil(test[\"totalScore\"]) - test[\"totalScore\"] <=\r\n                      test[\"totalScore\"] - Math.floor(test[\"totalScore\"])\r\n                        ? Math.ceil(test[\"totalScore\"])\r\n                        : Math.floor(test[\"totalScore\"])\r\n                    } %`}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test.test_name}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test[\"createdAt\"].slice(0, 10)}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test.mode}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test.totalScore < 10\r\n                      ? \"Poor\"\r\n                      : 10 < test.totalScore && test.totalScore <= 50\r\n                      ? \"Good\"\r\n                      : \"Excellent\"}\r\n                  </StyledTableCell>\r\n                </StyledTableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Container>\r\n      <UserFooter />\r\n    </>\r\n  );\r\n}\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\User\\Result.js",["588","589","590","591","592","593"],"import { Box, Typography, styled, IconButton } from \"@mui/material\";\r\nimport { ArrowRight as ArrowIcon } from \"@mui/icons-material\";\r\nimport ProgressBar from \"../../component/ProgressBar\";\r\nimport UserNavigation from \"../../component/UserNavigation\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport api from \"../../../infrastructure/utils/axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setQuestionDetail } from \"../../../application/reducers/explanationSlice\";\r\n\r\nconst styles = {\r\n  container: {\r\n    height: \"82vh\",\r\n    width: \"100vw\",\r\n    position: \"fixed\",\r\n    top: \"10vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  navbarContainer: {\r\n    backgroundColor: \"primary.main\",\r\n    width: \"100vw\",\r\n    height: \"10vh\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n};\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"#F23A5E\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <Box sx={styles.navbarContainer}>\r\n      <Box sx={styles.logoContainer}>\r\n        {/* <img src={Logo} alt=\"\" style={styles.logo} /> */}\r\n      </Box>\r\n      <Box sx={styles.navlinksContainer}></Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function Result() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [overallData, setOverallData] = useState({});\r\n  const [resultData, setResultData] = useState({});\r\n  const [results, setResults] = useState([]);\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    api\r\n      .get(`testResult/${id}`)\r\n      .then((res) => {\r\n        console.log(res.data.data, \"<<<<this is all data\");\r\n        setResultData(res.data.data);\r\n        return res.data.data;\r\n      })\r\n      .then((data) => {\r\n        setOverallData({ score: data.totalScore, mode: data.mode });\r\n        return data.questions_details;\r\n      })\r\n      .then((results) => {\r\n        // console.log(results, \"<<<<results\");\r\n        setResults([...results]);\r\n      });\r\n  }, []);\r\n  console.log(\"results :: \", results);\r\n  return (\r\n    <div>\r\n      <UserNavigation />\r\n      <div style={styles.container}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            height: \"20vh\",\r\n            justifyContent: \"space-around\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div>\r\n            <Typography>Your Score</Typography>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <ProgressBar progress={overallData.score} />\r\n              <Typography>{`${Math.ceil(overallData[\"score\"])} %`}</Typography>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <Typography fontWeight=\"bold\">Test Setting</Typography>\r\n            <Typography>Mode: {overallData.mode}</Typography>\r\n          </div>\r\n        </div>\r\n\r\n        <Table sx={{ maxWidth: 1200 }} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell sx={{ fontSize: \"20px\" }}>\r\n                SL No.\r\n              </StyledTableCell>\r\n              <StyledTableCell sx={{ fontSize: \"20px\" }} align=\"left\">\r\n                Subject\r\n              </StyledTableCell>\r\n              <StyledTableCell sx={{ fontSize: \"20px\" }} align=\"left\">\r\n                Functional Knowledge\r\n              </StyledTableCell>\r\n              <StyledTableCell sx={{ fontSize: \"20px\" }} align=\"left\">\r\n                Topics\r\n              </StyledTableCell>\r\n              {overallData.mode === \"TEST\" ? (\r\n                <StyledTableCell sx={{ fontSize: \"20px\" }} align=\"left\">\r\n                  Time Spent\r\n                </StyledTableCell>\r\n              ) : null}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {results.map((result, idx) => (\r\n              <StyledTableRow key={result?.name}>\r\n                <StyledTableCell\r\n                  sx={{ fontSize: \"16px\" }}\r\n                  component=\"th\"\r\n                  scope=\"row\"\r\n                >\r\n                  {idx + 1}\r\n                </StyledTableCell>\r\n                <StyledTableCell sx={{ fontSize: \"16px\" }} align=\"left\">\r\n                  {result?.question?.subject?.title}\r\n                </StyledTableCell>\r\n                <StyledTableCell sx={{ fontSize: \"16px\" }} align=\"left\">\r\n                  {result?.question?.topic?.title}\r\n                </StyledTableCell>\r\n                <StyledTableCell sx={{ fontSize: \"16px\" }} align=\"left\">\r\n                  {result?.question?.subtopic?.title}\r\n                  {!result?.timeSpend ? (\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        dispatch(setQuestionDetail(result?.question));\r\n                        history.push(\"/user/explanation\");\r\n                      }}\r\n                    >\r\n                      <ArrowIcon color=\"primary\" />\r\n                    </IconButton>\r\n                  ) : null}\r\n                </StyledTableCell>\r\n                {result?.timeSpend ? (\r\n                  <StyledTableCell sx={{ fontSize: \"16px\" }} align=\"center\">\r\n                    {result?.timeSpend}\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        dispatch(setQuestionDetail(result?.question));\r\n                        history.push(\"/user/explanation\");\r\n                      }}\r\n                    >\r\n                      <ArrowIcon color=\"primary\" />\r\n                    </IconButton>\r\n                  </StyledTableCell>\r\n                ) : null}\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\User\\Dashboard.js",["594","595","596","597","598"],"import React from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { useSelector } from \"react-redux\";\r\n//import PieChart from \"../../component/PieChart\";\r\nimport DoughnutChart from \"../../component/DoughnutChart\";\r\nimport UserNavigation from \"../../component/UserNavigation\";\r\nimport UserFooter from \"../../component/UserFooter\";\r\nimport { useState, useEffect } from \"react\";\r\nimport api from \"../../../infrastructure/utils/axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    margin: \"50px auto\",\r\n    background: \"#EFF5F8\",\r\n    height: \"auto\",\r\n    borderRadius: \"16px\",\r\n    padding: \"50px 50px 0 50px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    width: \"80%\",\r\n    [theme.breakpoints.down(500)]: {\r\n      width: \"80%\",\r\n      padding: \"10px\",\r\n    },\r\n  },\r\n  Textcontainer: {\r\n    maxWidth: \"50%\",\r\n    [theme.breakpoints.down(500)]: {\r\n      maxWidth: \"100%\",\r\n      padding: \"30px 10px \",\r\n    },\r\n  },\r\n  QuestionCard: {\r\n    border: \"1px solid #BABABA\",\r\n    boxSizing: \"border-box\",\r\n    borderRadius: \"16px\",\r\n    width: \"300px\",\r\n    height: \"auto\",\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n    \"&:hover\": {\r\n      boxShadow: \"0px 14px 16px -8px rgba(208, 2, 27, 0.25)\",\r\n    },\r\n  },\r\n  QbankUsage: {\r\n    background: \"#FFFFFF\",\r\n    border: \"1px solid #BABABA\",\r\n    boxSizing: \"border-box\",\r\n    boxShadow: \"0px 0px 4px rgba(0, 0, 0, 0.25)\",\r\n    borderRadius: \"16px\",\r\n    padding: \"20px\",\r\n    height: \"auto\",\r\n    width: \"450px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    [theme.breakpoints.down(500)]: {\r\n      width: \"100%\",\r\n      flexWrap: \"wrap\",\r\n      margin: \"30px auto\",\r\n    },\r\n  },\r\n  span: {\r\n    color: \"#F23A5E\",\r\n    fontSize: \"16px\",\r\n    background: \"#FCC9C9\",\r\n    borderRadius: \"5px\",\r\n    padding: \"5px 10px\",\r\n    marginLeft: \"5px\",\r\n  },\r\n  TestCount: {\r\n    width: \"400px\",\r\n    [theme.breakpoints.down(500)]: {\r\n      width: \"100%\",\r\n      flexWrap: \"wrap\",\r\n      margin: \"auto\",\r\n    },\r\n  },\r\n  piechart: {\r\n    width: \"50%\",\r\n    [theme.breakpoints.down(500)]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  scoreContainer: {\r\n    width: \"80%\",\r\n    margin: \"0 auto\",\r\n  },\r\n}));\r\n\r\nconst QuestionCard = (props) => {\r\n  const classes = useStyles();\r\n  const [userData, setUserData] = useState(\"\");\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { userId } = user;\r\n\r\n  console.log(\"userData \", userData);\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      api\r\n        .get(`/dashboard/getusedinfo/${userId}`)\r\n        .then((res) => setUserData(res.data.data));\r\n    }\r\n  }, [userId, userData]);\r\n\r\n  const QuestionCardItem = [\r\n    {\r\n      heading: \"Count Questions \",\r\n      count: userData && userData.question_detail.count,\r\n      // reports: \"2.6% then last week \",\r\n    },\r\n    {\r\n      heading: \" used Questions\",\r\n      count: userData && userData.question_detail.used,\r\n      // reports: \"2.6% then last week \",\r\n    },\r\n    // {\r\n    //   // heading: \" Unused Questions \",\r\n    //   // count: userData && userData.question_detail.unused,\r\n    //   // count: 1,\r\n    //   // reports: \"2.6% then last week \",\r\n    // },\r\n  ];\r\n\r\n  console.log(\"QuestionCardItem :: \", QuestionCardItem);\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" justifyContent=\"space-evenly\" flexWrap=\"wrap\">\r\n        {QuestionCardItem.map((item, i) => (\r\n          <div key={i}>\r\n            <Box className={classes.QuestionCard}>\r\n              <div>\r\n                <Typography style={{ color: \"#000000\", fontSize: \"18px\" }}>\r\n                  {item.heading}\r\n                </Typography>\r\n                <Typography style={{ color: \"#F23A5E\", fontSize: \"38px\" }}>\r\n                  <b>{item.count}</b>\r\n                </Typography>\r\n                {/* <Typography style={{ color: \"#757575\", fontSize: \"18px\" }}>\r\n                  {item.reports}\r\n                </Typography> */}\r\n              </div>\r\n              <div>\r\n                {/* <CircularProgress\r\n                  variant=\"determinate\"\r\n                  value={75}\r\n                  thickness={5}\r\n                  sx={{\r\n                    width: \"100px\",\r\n                    color: \"#F23A5E\",\r\n                    \"&.Mui-checked\": {\r\n                      color: \"#F23A5E\",\r\n                    },\r\n                  }}\r\n                /> */}\r\n              </div>\r\n            </Box>\r\n          </div>\r\n        ))}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nconst QbankUsageItem = [\r\n  {\r\n    title: \"Used Questions\",\r\n    object: \"used\",\r\n  },\r\n  // {\r\n  //   title: \"Unused Questions\",\r\n  //   object: \"unused\",\r\n  // },\r\n  {\r\n    title: \"Total Questions\",\r\n    object: \"count\",\r\n  },\r\n];\r\nconst QbankUsage = ({ questionData }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Box className={classes.QbankUsage} style={{ visibility: \"hidden\" }}>\r\n        {/* <img src={require(\"../../assets/percent.png\").default} alt=\"\" /> */}\r\n        <div>\r\n          {/* <Typography style={{ color: \"#000\", fontSize: \"26px\" }}>\r\n            Q Bank Usage\r\n          </Typography> */}\r\n          <br />\r\n          {questionData &&\r\n            QbankUsageItem.map((item, i) => (\r\n              <div key={i}>\r\n                <Box\r\n                  display=\"flex\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"space-around\"\r\n                >\r\n                  <Typography\r\n                    style={{\r\n                      color: \"#000000\",\r\n                      fontSize: \"18px\",\r\n                      marginRight: \"10px\",\r\n                    }}\r\n                  >\r\n                    {item.title}\r\n                  </Typography>\r\n                  <Typography className={classes.span}>\r\n                    <b>{questionData[item.object]}</b>\r\n                  </Typography>\r\n                </Box>\r\n                <hr />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TestCountItem = [\r\n  {\r\n    title: \"Test Created \",\r\n    object: \"test_created\",\r\n  },\r\n  {\r\n    title: \" Test Completed\",\r\n    object: \"test_completed\",\r\n  },\r\n  // {\r\n  //   title: \"Suspended Test \",\r\n  //   score: \"86\",\r\n  // },\r\n];\r\nconst TestCount = ({ testData }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Box className={classes.QbankUsage} style={{ visibility: \"hidden\" }}>\r\n        <div>\r\n          <Typography style={{ color: \"#000\", fontSize: \"26px\" }}>\r\n            Test Count\r\n          </Typography>\r\n          <br />\r\n          {testData &&\r\n            TestCountItem.map((item, i) => (\r\n              <div key={i} className={classes.TestCount}>\r\n                <Box\r\n                  display=\"flex\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"space-between\"\r\n                  style={{}}\r\n                >\r\n                  <Typography className={classes.span}>\r\n                    <b>{testData[item.object]}</b>\r\n                  </Typography>\r\n                  <Typography style={{ color: \"#000000\", fontSize: \"18px\" }}>\r\n                    {item.title}\r\n                  </Typography>\r\n                  <Typography className={classes.span}>\r\n                    <b>{testData[item.object]}</b>\r\n                  </Typography>\r\n                </Box>\r\n                <hr />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UserDashboard = () => {\r\n  const [dashboardData, setDashboardData] = useState();\r\n  const classes = useStyles();\r\n  const {\r\n    user: { name },\r\n  } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"/dashboard/getusedinfo\")\r\n      .then((res) => setDashboardData(res.data.data));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <UserNavigation />\r\n      <section\r\n        className={classes.container}\r\n        style={{ display: \"flex\", flexWrap: \"wrap\" }}\r\n      >\r\n        <Box>\r\n          <img src={require(\"../../assets/mblgraph.png\").default} alt=\"\" />\r\n        </Box>\r\n        <Box className={classes.Textcontainer}>\r\n          <Typography\r\n            variant=\"h3\"\r\n            gutterBottom\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: \"35px\",\r\n              color: \"#000000\",\r\n            }}\r\n          >\r\n            Congratulation\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h3\"\r\n            gutterBottom\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: \"37px\",\r\n              color: \"#000000\",\r\n            }}\r\n          >\r\n            {name}\r\n          </Typography>\r\n          <br />\r\n          <Typography\r\n            variant=\"h5\"\r\n            gutterBottom\r\n            style={{\r\n              fontWeight: 500,\r\n              fontSize: \"26px\",\r\n              lineHeight: \"34px\",\r\n              color: \"#505050\",\r\n            }}\r\n          >\r\n            Your Courses Reached Our Target Milestone\r\n          </Typography>\r\n          <br />\r\n          <Typography\r\n            variant=\"h6\"\r\n            gutterBottom\r\n            style={{\r\n              fontSize: \"16px\",\r\n              color: \"#505050\",\r\n            }}\r\n          >\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Tempore aut\r\n            labore sequi vitae dolorem. Maiores expedita fugiat omnis suscipit\r\n            architecto.\r\n          </Typography>\r\n        </Box>\r\n      </section>\r\n      <section style={{ background: \"#F7F7F7\", padding: \"50px 0\" }}>\r\n        <QuestionCard />\r\n      </section>\r\n\r\n      {/* Score Pannel */}\r\n      {/* <section className={classes.scoreContainer}>\r\n        <br />\r\n        <br />\r\n        <Typography variant=\"h4\" style={{}}>\r\n          Your Score\r\n        </Typography>\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            flexWrap: \"wrap\",\r\n            padding: \"50px 0\",\r\n          }}\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            justifyContent=\"space-around\"\r\n          >\r\n            <QbankUsage questionData={dashboardData?.question_detail} />\r\n            <TestCount testData={dashboardData?.test_detail} />\r\n          </Box>\r\n          <Box className={classes.piechart}>\r\n            <PieChart /> \r\n            <DoughnutChart />\r\n          </Box>\r\n        </Box>\r\n      </section> */}\r\n      <UserFooter />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\User\\Test.js",["599","600","601"],"import { useEffect, useState } from \"react\";\r\nimport { Box, Button, Typography, styled } from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  incrementQuestionVisitCount,\r\n  addToResult,\r\n  submitAnswers,\r\n  fetchQuestions,\r\n  setTotalTime,\r\n} from \"../../../application/reducers/testSlice\";\r\nimport QuestionProgress from \"../../component/QuestionProgress\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport {\r\n  actions,\r\n  actions as uiActions,\r\n  ALERT_TYPES,\r\n} from \"../../../application/reducers/uiSlice\";\r\n\r\nconst styles = {\r\n  container: {\r\n    height: \"82vh\",\r\n    width: \"100vw\",\r\n    position: \"fixed\",\r\n    top: \"10vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  navbarContainer: {\r\n    backgroundColor: \"primary.main\",\r\n    width: \"100vw\",\r\n    height: \"10vh\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n  questionTitle: {\r\n    color: \"#000000\",\r\n    fontWeight: 600,\r\n    textAlign: \"left\",\r\n  },\r\n  subContainer1: {\r\n    backgroundColor: \"#EFF5F8\",\r\n    width: \"80%\",\r\n    marginTop: \"3.5rem\",\r\n    padding: \"2rem\",\r\n    marginBottom: \"2.5rem\",\r\n  },\r\n  question: {\r\n    color: \"#535353\",\r\n    fontWeight: 500,\r\n    marginTop: \"1rem\",\r\n    textAlign: \"left\",\r\n  },\r\n  subContainer2: {\r\n    display: \"grid\",\r\n    width: \"80%\",\r\n    gridTemplate: `\"1fr 1fr\"\r\n                   \"1fr 1fr\"\r\n                   \"1fr 1fr\"`,\r\n    rowGap: \"2em\",\r\n    columnGap: \"2em\",\r\n  },\r\n  navlinksContainer: {\r\n    marginRight: \"1vw\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n};\r\n\r\nconst ModifiedButton = styled(Button)({\r\n  marginRight: \"1rem\",\r\n});\r\n\r\nfunction NavBar({ time, mode }) {\r\n  const totalTime = useSelector(\r\n    (state) => state.test.testResult.totalTimeSpend\r\n  );\r\n  return (\r\n    <Box sx={styles.navbarContainer}>\r\n      <Box sx={styles.logoContainer}>\r\n        {/* <img src={Logo} alt=\"\" style={styles.logo} /> */}\r\n      </Box>\r\n      <Box sx={styles.navlinksContainer}>\r\n        {mode === \"TEST\" ? (\r\n          <>\r\n            <Typography color=\"white\" fontWeight=\"500\">\r\n              Time: {time} Seconds\r\n            </Typography>\r\n            <Typography color=\"white\" fontWeight=\"500\">\r\n              Total Time: {totalTime} Seconds\r\n            </Typography>\r\n          </>\r\n        ) : null}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst cancelExam = () => {\r\n  window.location.pathname = \"/user/dashboard\";\r\n};\r\n\r\nexport default function LearningMode() {\r\n  const history = useHistory();\r\n  const [selected, setSelected] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const stateValue = useSelector((state) => state);\r\n  console.log(stateValue, \"<<<<state\");\r\n  const totalQuestion = useSelector((state) => state.test.totalQuestion);\r\n  // console.log(state, \"<<<<\");\r\n  const [time, setTime] = useState();\r\n  const mode = useSelector((state) => state.test.testResult.mode);\r\n  const displayResult = useSelector((state) => state.test.submittedTest);\r\n  const questionCount = useSelector((state) => state.test.questionVisitCount);\r\n  const question = useSelector((state) => state.test.testQuestion);\r\n  const isReadyForSubmit = useSelector((state) => state.test.isReadyForSubmit);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  // const isMarked = useSelector((state) =>\r\n  //   state.test.testResult.questions_details[questionCount - 1]\r\n  //     ? state.test.testResult.questions_details[questionCount - 1][\"isMarked\"]\r\n  //     : false\r\n  // );\r\n\r\n  const [marked, setMarked] = useState(false);\r\n\r\n  const nextHandler = () => {\r\n    setSelected(null);\r\n    console.log(question, \"<<<<question\");\r\n    const answerData = {\r\n      question: question.id,\r\n      isUnused: selectedOption ? false : true,\r\n      isMarked: marked,\r\n      isCorrect: selectedOption ? selectedOption[\"isCorrect\"] : false,\r\n      isIncorrect: selectedOption ? !selectedOption[\"isCorrect\"] : false,\r\n    };\r\n    mode === \"TEST\"\r\n      ? dispatch(addToResult({ ...answerData, timeSpend: time }))\r\n      : dispatch(addToResult(answerData));\r\n\r\n    console.log(totalQuestion, \"<<<<total question\");\r\n\r\n    dispatch(incrementQuestionVisitCount());\r\n    setSelectedOption(null);\r\n  };\r\n\r\n  const submitHandler = async () => {\r\n    dispatch(submitAnswers());\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      // alert(`quest ${questionCount}`);\r\n      let response = await dispatch(fetchQuestions({ page: questionCount }));\r\n      console.log(response, \"response\");\r\n      if (\r\n        totalQuestion !== null &&\r\n        totalQuestion === 0 &&\r\n        response?.payload?.data?.count === 0\r\n      ) {\r\n        history.goBack();\r\n        dispatch(\r\n          actions.showAlert({\r\n            type: ALERT_TYPES.ERROR,\r\n            message: \"No questions available\",\r\n          })\r\n        );\r\n      }\r\n    })();\r\n  }, [questionCount, totalQuestion]);\r\n\r\n  useEffect(() => {\r\n    let _time = 0;\r\n    const count = setInterval(() => {\r\n      _time = _time + 1;\r\n      setTime(_time);\r\n      dispatch(setTotalTime());\r\n    }, 1000);\r\n    return () => clearInterval(count);\r\n  }, [questionCount]);\r\n\r\n  return (\r\n    <>\r\n      <NavBar time={time} mode={mode} />\r\n      <div style={styles.container}>\r\n        <QuestionProgress />\r\n        <Box sx={styles.subContainer1}>\r\n          <Typography\r\n            sx={styles.questionTitle}\r\n          >{`Question ${questionCount}.`}</Typography>\r\n          <Typography sx={styles.question}>\r\n            {question ? (\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: question[\"questionTitle\"],\r\n                }}\r\n              />\r\n            ) : null}\r\n          </Typography>\r\n        </Box>\r\n        <Box sx={styles.subContainer2}>\r\n          {question\r\n            ? question[\"options\"].map((option, index) => (\r\n                <Button\r\n                  key={index}\r\n                  onClick={() => {\r\n                    setSelected(index);\r\n                    setSelectedOption(option);\r\n                  }}\r\n                  variant={selected === index ? \"contained\" : \"outlined\"}\r\n                >\r\n                  <div dangerouslySetInnerHTML={{ __html: option[\"option\"] }} />\r\n                </Button>\r\n              ))\r\n            : null}\r\n          <div>\r\n            <ModifiedButton variant=\"outlined\" onClick={cancelExam}>\r\n              Cancel Test\r\n            </ModifiedButton>\r\n            {marked ? (\r\n              <ModifiedButton\r\n                variant=\"outlined\"\r\n                onClick={() => setMarked(false)}\r\n              >\r\n                Unmark\r\n              </ModifiedButton>\r\n            ) : (\r\n              <ModifiedButton\r\n                variant=\"outlined\"\r\n                onClick={() => setMarked(true)}\r\n              >\r\n                Mark\r\n              </ModifiedButton>\r\n            )}\r\n\r\n            {isReadyForSubmit ? (\r\n              <ModifiedButton variant=\"contained\" onClick={submitHandler}>\r\n                Submit\r\n              </ModifiedButton>\r\n            ) : (\r\n              <ModifiedButton variant=\"contained\" onClick={nextHandler}>\r\n                Save &amp; Next\r\n              </ModifiedButton>\r\n            )}\r\n          </div>\r\n        </Box>\r\n        {displayResult.show ? (\r\n          <Redirect to={`/user/result/${displayResult.id}`} />\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\User\\Practice.js",["602","603","604","605","606","607","608","609","610","611","612","613"],"import React, { useEffect, useMemo, useState, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Box,\r\n  Typography,\r\n  Checkbox,\r\n  Collapse,\r\n  FormControlLabel,\r\n  Button,\r\n  RadioGroup,\r\n  Radio,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport UserNavigation from \"../../component/UserNavigation\";\r\nimport UserFooter from \"../../component/UserFooter\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getQuestionMetaData,\r\n  questionActions,\r\n  questionSelectors,\r\n} from \"../../../application/reducers/questionSlice\";\r\nimport {\r\n  getSubTopics,\r\n  fetchQuestions,\r\n  setQuestionFilter,\r\n  getSubmitAnswer,\r\n  getsubmitUserdata,\r\n  setSubmittedTestResultEmpty,\r\n} from \"../../../application/reducers/testSlice\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Add as AddIcon, Remove as RemoveIcon } from \"@mui/icons-material\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport api from \"../../../infrastructure/utils/axios\";\r\n// import { UserContext } from \"../../../UserContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    border: \"2px solid gray\",\r\n    display: \"flex\",\r\n    margin: \"3rem 0\",\r\n  },\r\n  subjectsCont: {\r\n    margin: \"1rem 0\",\r\n    width: \"30%\",\r\n    maxWidth: 300,\r\n  },\r\n  checkbox: {\r\n    display: \"flex\",\r\n    columnGap: \"0.5rem\",\r\n    alignItems: \"center\",\r\n    background: \"#EFF5F8\",\r\n    color: \"#525252 !important\",\r\n    \"& p\": {\r\n      fontWeight: 600,\r\n    },\r\n  },\r\n  topicCont: {\r\n    background: \"#EFF5F8\",\r\n    flex: 1,\r\n    padding: \"1rem\",\r\n  },\r\n  subTopicCont: {\r\n    marginLeft: \"2rem\",\r\n  },\r\n}));\r\n\r\nconst ShowSelectionContainer = ({ data }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [currentSubject, setCurrentSubject] = useState(null);\r\n  const [currentTopic, setCurrentTopic] = useState(null);\r\n  const [currentSubTopic, setCurrentSubTopic] = useState(null);\r\n  const [subjectDatas, setSubjectDatas] = useState([]);\r\n\r\n  const [subjectsId, setSubjectsId] = useState();\r\n\r\n  //when click on back , removes selected option\r\n  useEffect(() => {\r\n    dispatch(questionActions.removeSelectedAllSubject());\r\n    dispatch(questionActions.removeSelectedAllTopic());\r\n    dispatch(questionActions.removeSelectedAllSubTopic());\r\n  }, []);\r\n\r\n  // const userContext = useContext(UserContext);\r\n\r\n  console.log(\"getvdata  :: \", data);\r\n\r\n  const handleCurrentSubject = (id) => {\r\n    setCurrentSubject(id);\r\n  };\r\n  const handleCurrentTopic = (id) => {\r\n    setCurrentTopic(id);\r\n  };\r\n\r\n  const handleCurrentSubTopic = (id) => {\r\n    setCurrentSubTopic(id);\r\n  };\r\n\r\n  const { selectedSubjects, selectedTopics, selectedSubTopics } = useSelector(\r\n    questionSelectors.getQuestionMetaData\r\n  );\r\n\r\n  // console.log(\"selectedSubjects :: \",selectedSubjects);\r\n\r\n  const handleSubjectChange = (id, checked) => {\r\n    checked\r\n      ? dispatch(questionActions.setSelectedSubject(id))\r\n      : dispatch(questionActions.removeSelectedSubject(id));\r\n  };\r\n  const handleTopicChange = (id, checked) => {\r\n    checked\r\n      ? dispatch(questionActions.setSelectedTopic(id))\r\n      : dispatch(questionActions.removeSelectedTopic(id));\r\n  };\r\n  const handleSubTopicChange = (id, checked) => {\r\n    checked\r\n      ? dispatch(questionActions.setSelectedSubTopic(id))\r\n      : dispatch(questionActions.removeSelectedSubTopic(id));\r\n  };\r\n\r\n  let subjectData = [];\r\n  const topics = useMemo(() => {\r\n    if (subjectDatas.length !== 0) {\r\n      subjectData.push(...subjectDatas);\r\n    }\r\n    if (!selectedSubjects || !data) return null;\r\n\r\n    const [subject] = data.filter((subject) => subject.id === currentSubject);\r\n    const [isSubjectExist] = subjectDatas.filter(\r\n      (subject) => subject.id === currentSubject\r\n    );\r\n\r\n    // pusdata.push(subject)\r\n    if (!subject) return null;\r\n    if (isSubjectExist) {\r\n      subjectData = [];\r\n      const [newSubject] = subjectDatas.map((subject) => {\r\n        return subjectDatas.filter((subject) => subject.id !== currentSubject);\r\n      });\r\n      subjectData.push(...newSubject);\r\n    } else {\r\n      subjectData.push(subject);\r\n    }\r\n    setSubjectDatas(subjectData);\r\n    // return subject.topics;\r\n  }, [data, currentSubject, selectedSubjects]);\r\n\r\n  // const getstate = state.map(data=> data\r\n\r\n  useDispatch(() => {\r\n    if (selectedSubjects && selectedSubjects) {\r\n      setSubjectsId(selectedSubjects);\r\n    }\r\n  }, [selectedSubjects]);\r\n\r\n  const subTopics = useMemo(() => {\r\n    if (!selectedSubjects || !selectedTopics || !data) return null;\r\n\r\n    const [subject] = data.filter((subject) => subject.id === currentSubject);\r\n    if (!subject) return null;\r\n\r\n    // console.log(\"subject :: \",subject);\r\n\r\n    const [topic] = subject.topics.filter((topic) => topic.id === currentTopic);\r\n    if (!topic) return null;\r\n\r\n    return topic.subTopics;\r\n  }, [data, selectedSubjects, selectedTopics, currentSubject, currentTopic]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.subjectsCont}>\r\n        {data.map((subject) => {\r\n          console.log(subject, \"<<<<item\");\r\n          return (\r\n            <div\r\n              className={classes.checkbox}\r\n              style={{\r\n                background: selectedSubjects.includes(subject.id)\r\n                  ? \"#EFF5F8\"\r\n                  : \"white\",\r\n              }}\r\n              key={subject.id}\r\n            >\r\n              <Checkbox\r\n                checked={selectedSubjects.includes(subject.id) ? true : false}\r\n                onChange={(e) => {\r\n                  handleSubjectChange(subject.id, e.target.checked);\r\n                  handleCurrentSubject(subject.id);\r\n                }}\r\n                name={subject.id}\r\n              />\r\n              <Typography>\r\n                {/* {subject.title} {subject.title == \"Bhushan\" ? \"   (1)\" : \"\"} */}\r\n                {subject.title} {`(${subject.topics.length})`}\r\n              </Typography>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className={classes.topicCont}>\r\n        {subjectDatas?.map((topics) =>\r\n          topics?.topics.map((topic) => (\r\n            <div key={topic.id}>\r\n              <div className={classes.checkbox} key={topic.id}>\r\n                <Checkbox\r\n                  checked={selectedTopics.includes(topic.id) ? true : false}\r\n                  onChange={(e) => {\r\n                    handleTopicChange(topic.id, e.target.checked);\r\n                    handleCurrentTopic(topic.id);\r\n                  }}\r\n                  name={topic}\r\n                />\r\n                <Typography>{topic.title}</Typography>\r\n                <div style={{ flex: 1 }} />\r\n\r\n                {currentTopic !== topic.id ? (\r\n                  <AddIcon style={{ color: \"#BFBFBF\" }} />\r\n                ) : (\r\n                  <RemoveIcon style={{ color: \"#F23A5E\" }} />\r\n                )}\r\n              </div>\r\n              <Collapse\r\n                in={currentTopic === topic.id}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n              >\r\n                <div className={classes.subTopicCont}>\r\n                  {topic.subTopics?.map((subTopic) => (\r\n                    <div className={classes.checkbox} key={subTopic.id}>\r\n                      <Checkbox\r\n                        checked={\r\n                          selectedSubTopics.includes(subTopic.id) ? true : false\r\n                        }\r\n                        onChange={(e) => {\r\n                          handleSubTopicChange(subTopic.id, e.target.checked);\r\n                          handleCurrentSubTopic(subTopic.id);\r\n                        }}\r\n                        name={subTopic.id}\r\n                      />\r\n                      <Typography>{subTopic.title}</Typography>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Collapse>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Practice = () => {\r\n  const [testExists, setTestExists] = useState(async () => {\r\n    const res = await api.get(\"question/testExists\");\r\n    const data = await res.data;\r\n    return data.exists;\r\n  });\r\n  const [checked, setChecked] = useState([0]);\r\n  const [mode, setMode] = useState(\"learning\");\r\n  const [total, setTotal] = useState(null);\r\n  const [filters, setFilters] = useState({\r\n    unused: true,\r\n    incorrect: false,\r\n    marked: false,\r\n    all: !testExists ? true : false,\r\n  });\r\n  const { selectedSubTopics } = useSelector(\r\n    questionSelectors.getQuestionMetaData\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const filterChangeHandler = (e) => {\r\n    const { id, checked } = e.target;\r\n    if (id === \"all\" && checked)\r\n      setFilters({\r\n        unused: checked,\r\n        incorrect: checked,\r\n        marked: checked,\r\n        all: checked,\r\n      });\r\n    else if (id === \"unused\")\r\n      setFilters({\r\n        ...filters,\r\n        unused: checked,\r\n        all: checked && filters.incorrect && filters.marked ? true : false,\r\n      });\r\n    else if (id === \"incorrect\")\r\n      setFilters({\r\n        ...filters,\r\n        incorrect: checked,\r\n        all: checked && filters.unused && filters.marked ? true : false,\r\n      });\r\n    else if (id === \"marked\")\r\n      setFilters({\r\n        ...filters,\r\n        marked: checked,\r\n        all: checked && filters.unused && filters.incorrect ? true : false,\r\n      });\r\n  };\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const [questionSelectionData, setQuestionSelectionData] = useState(null);\r\n  useEffect(() => {\r\n    dispatch(getQuestionMetaData())\r\n      .unwrap()\r\n      .then((res) => {\r\n        setQuestionSelectionData(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [dispatch]);\r\n\r\n  const minMaxValue = (e) => {\r\n    setTotal(e.target.value);\r\n  };\r\n\r\n  console.log(\"questionSelectionData :: \", questionSelectionData);\r\n\r\n  return (\r\n    <>\r\n      <UserNavigation />\r\n      <Container\r\n        maxWidth=\"xl\"\r\n        sx={{ textAlign: \"center\", margin: \"70px auto\" }}\r\n      >\r\n        <Typography\r\n          variant=\"h2\"\r\n          sx={{ fontSize: \"38px\", color: \"#434343\", fontWeight: \"bold\" }}\r\n        >\r\n          Choose your practice\r\n        </Typography>\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            background: \"#F1F1F1\",\r\n            borderRadius: \"58px\",\r\n            width: \"30%\",\r\n            margin: \"30px auto\",\r\n            padding: \"10px\",\r\n          }}\r\n        >\r\n          <div>\r\n            <RadioGroup\r\n              aria-label=\"mode\"\r\n              value={mode}\r\n              name=\"controlled-radio-buttons-group\"\r\n              row\r\n              onChange={(e) => setMode(e.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value=\"learning\"\r\n                control={<Radio />}\r\n                label=\"Practice\"\r\n              />\r\n              <FormControlLabel value=\"test\" control={<Radio />} label=\"Test\" />\r\n            </RadioGroup>\r\n          </div>\r\n        </Box>\r\n        {testExists ? (\r\n          <Box\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-evenly\",\r\n              width: \"50%\",\r\n              margin: \"30px auto\",\r\n            }}\r\n          >\r\n            <div>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={filters.unused}\r\n                    onChange={(e) => filterChangeHandler(e)}\r\n                    id=\"unused\"\r\n                  />\r\n                }\r\n                label=\"Unused\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={filters.incorrect}\r\n                    onChange={(e) => filterChangeHandler(e)}\r\n                    id=\"incorrect\"\r\n                  />\r\n                }\r\n                label=\"Incorrect\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={filters.marked}\r\n                    onChange={(e) => filterChangeHandler(e)}\r\n                    id=\"marked\"\r\n                  />\r\n                }\r\n                label=\"Marked\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={filters.all}\r\n                    id=\"all\"\r\n                    onChange={(e) => filterChangeHandler(e)}\r\n                  />\r\n                }\r\n                label=\"All\"\r\n              />\r\n            </div>\r\n          </Box>\r\n        ) : null}\r\n\r\n        <hr />\r\n        <br />\r\n        <br />\r\n        <Typography\r\n          variant=\"h2\"\r\n          sx={{ fontSize: \"38px\", color: \"#434343\", fontWeight: \"bold\" }}\r\n        >\r\n          Select Questions From Functional Knowledge and Topic\r\n        </Typography>\r\n        {/* ************************************* */}\r\n        {questionSelectionData ? (\r\n          <ShowSelectionContainer data={questionSelectionData} />\r\n        ) : null}\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography>\r\n            Enter number of questions\r\n            <span style={{ color: \"red\" }}> *</span>\r\n          </Typography>\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <TextField\r\n              type=\"number\"\r\n              onChange={(e) => minMaxValue(e)}\r\n              // onChange={(e) => setTotal(e.target.value)}\r\n              size=\"small\"\r\n              sx={{ paddingLeft: \"1em\" }}\r\n              required\r\n              value={total}\r\n            />\r\n            {/* <Typography style={{color:\"red\"}}>Please enter 10 to 100</Typography> */}\r\n          </div>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography style={{ visibility: \"hidden\" }}>\r\n            Enter number of questions\r\n            <span style={{ color: \"red\" }}> *</span>\r\n          </Typography>\r\n          <Typography style={{ color: \"red\", paddingLeft: \"1em\" }}>\r\n            Please enter valid number 10 to 100\r\n          </Typography>\r\n        </Box>\r\n        {total > 0 && total < 100 && selectedSubTopics.length > 0 ? (\r\n          <NavLink to=\"/user/test\">\r\n            <Button\r\n              onClick={() => {\r\n                dispatch(setSubmittedTestResultEmpty());\r\n                dispatch(setQuestionFilter({ filters, mode, total }));\r\n                dispatch(fetchQuestions({ page: 1 }));\r\n              }}\r\n              sx={{ color: \"white\", \"&:hover\": { backgroundColor: \"#f23a5e\" } }}\r\n            >\r\n              Start\r\n            </Button>\r\n          </NavLink>\r\n        ) : (\r\n          <Button disabled>Start</Button>\r\n        )}\r\n      </Container>\r\n      <UserFooter />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Practice;\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\User\\Explanation.js",["614","615"],"import React from \"react\";\r\nimport { Container, Box, Typography, Button } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport {\r\n  CheckCircle,\r\n  CheckCircle as CheckCircleIcon,\r\n} from \"@mui/icons-material\";\r\nimport UserNavigation from \"../../component/UserNavigation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Container: {\r\n    padding: \"50px\",\r\n    height: \"auto\",\r\n  },\r\n  QuestionBox: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    background: \"#EFF5F8\",\r\n  },\r\n  ExplanationBox: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    background: \"#EFF5F8\",\r\n    padding: \"20px 0\",\r\n  },\r\n  option: {\r\n    \"&.MuiButton-root\": {\r\n      width: \"40%\",\r\n      border: \"1px solid #F23A5E\",\r\n      margin: \"20px 0\",\r\n    },\r\n  },\r\n}));\r\nconst optionItem = [\r\n  {\r\n    title: \"Test Created \",\r\n    correct: \"correct\",\r\n  },\r\n  {\r\n    title: \" Test Completed\",\r\n  },\r\n  {\r\n    title: \"Suspended Test \",\r\n  },\r\n  {\r\n    title: \"Suspended Test \",\r\n  },\r\n];\r\n\r\nconst correctOption = optionItem\r\n  .filter(function (option) {\r\n    return option.correct === \"correct\";\r\n  })\r\n  .map(function (option) {\r\n    return option.title;\r\n  });\r\nconsole.log(\"correct option is:\");\r\n// Printing out the  correct option\r\ncorrectOption.forEach(function (options) {\r\n  console.log(options);\r\n});\r\nconst Explanation = () => {\r\n  const _histoty = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const questionDetail = useSelector(\r\n    (state) => state.explanation.questionDetail\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <UserNavigation />\r\n      <Container\r\n        maxWidth=\"xl\"\r\n        style={{ margin: \"10px auto\" }}\r\n        className={classes.Container}\r\n      >\r\n        <Button\r\n          onClick={() => _histoty.goBack()}\r\n          variant=\"contained\"\r\n          sx={{ position: \"fixed\", left: 10, top: 75 }}\r\n        >\r\n          Back\r\n        </Button>\r\n        <Box className={classes.QuestionBox}>\r\n          {/* <Typography\r\n            variant=\"h5\"\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: \"20px\",\r\n              color: \"#000000\",\r\n              padding: \"20px\",\r\n            }}\r\n          >\r\n            Question. 1\r\n          </Typography> */}\r\n          <Typography\r\n            variant=\"h5\"\r\n            style={{ fontSize: \"20px\", color: \"#535353\", padding: \"20px\" }}\r\n          >\r\n            <div\r\n              dangerouslySetInnerHTML={{ __html: questionDetail.questionTitle }}\r\n            />\r\n          </Typography>\r\n        </Box>\r\n        <br />\r\n        <br />\r\n        <Container maxWidth=\"xl\">\r\n          <Box display=\"flex\" justifyContent=\"space-around\" flexWrap=\"wrap\">\r\n            {questionDetail[\"options\"].map((option, i) => (\r\n              <Button\r\n                style={{ margin: \"20px\" }}\r\n                className={classes.option}\r\n                variant=\"contained\"\r\n              >\r\n                {option.isCorrect ? (\r\n                  <CheckCircleIcon\r\n                    sx={{\r\n                      color: \"#53ff38\",\r\n                    }}\r\n                  />\r\n                ) : null}\r\n                <div dangerouslySetInnerHTML={{ __html: option.option }} />\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n        </Container>\r\n        <br />\r\n        <br />\r\n        <Box className={classes.ExplanationBox}>\r\n          {/* <Button\r\n            style={{ background: \"#F23A5E\", color: \"#fff\", margin: \"10px\" }}\r\n            className={classes.option}\r\n            variant=\"outlined\"\r\n          >\r\n            Correct Option Is\r\n          </Button> */}\r\n          <Typography\r\n            variant=\"h5\"\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: \"20px\",\r\n              color: \"#000000\",\r\n              padding: \"20px\",\r\n            }}\r\n          >\r\n            Explanation\r\n          </Typography>\r\n          <div\r\n            dangerouslySetInnerHTML={{ __html: questionDetail.explaination }}\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Explanation;\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\User\\FknTopics.js",["616","617","618"],"import * as React from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\nimport { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport UserNavigation from \"../../component/UserNavigation\";\r\nimport UserFooter from \"../../component/UserFooter\";\r\nimport api from \"../../../infrastructure/utils/axios\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"#F23A5E\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nfunction createData(name, usage, correct, incorrect, ommited) {\r\n  return {\r\n    name,\r\n    usage,\r\n    correct,\r\n    incorrect,\r\n    ommited,\r\n    topics: [\r\n      {\r\n        name: \"Nervous System\",\r\n        usage: \"4/108\",\r\n        correct: \"3(75%)\",\r\n        incorrect: \"0(0%)\",\r\n        ommited: \"1(25%)\",\r\n      },\r\n      {\r\n        name: \"Pulmonary & Critical Care\",\r\n        usage: \"1/8\",\r\n        correct: \"1(100%)\",\r\n        incorrect: \"0(0%)\",\r\n        ommited: \"0(0%)\",\r\n      },\r\n      {\r\n        name: \"Nervous System\",\r\n        usage: \"4/108\",\r\n        correct: \"3(75%)\",\r\n        incorrect: \"0(0%)\",\r\n        ommited: \"1(25%)\",\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const [progress, setProgress] = React.useState(20);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <StyledTableRow sx={{ \"& > *\": { borderBottom: \"unset\" } }}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            sx={{ gap: 5, fontSize: \"16px\" }}\r\n          >\r\n            {row.name}\r\n            <LinearProgress variant=\"determinate\" value={progress} />\r\n          </Box>\r\n        </TableCell>\r\n        <TableCell align=\"right\" style={{ fontSize: \"16px\" }}>\r\n          {row.usage}\r\n        </TableCell>\r\n        <TableCell align=\"right\" style={{ fontSize: \"16px\" }}>\r\n          {row.correct}\r\n        </TableCell>\r\n        <TableCell align=\"right\" style={{ fontSize: \"16px\" }}>\r\n          {row.incorrect}\r\n        </TableCell>\r\n        <TableCell align=\"right\" style={{ fontSize: \"16px\" }}>\r\n          {row.ommited}\r\n        </TableCell>\r\n      </StyledTableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box sx={{ margin: \"0 30px\" }}>\r\n              <Table aria-label=\"purchases\">\r\n                <TableBody>\r\n                  {row.topics.map((topic) => (\r\n                    <StyledTableRow key={topic.name}>\r\n                      <StyledTableCell />\r\n                      <StyledTableCell\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                        style={{ fontSize: \"16px\" }}\r\n                      >\r\n                        {topic.name}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell\r\n                        align=\"left\"\r\n                        style={{ fontSize: \"16px\" }}\r\n                      >\r\n                        {topic.usage}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell\r\n                        align=\"left\"\r\n                        style={{ fontSize: \"16px\" }}\r\n                      >\r\n                        {topic.correct}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell\r\n                        align=\"right\"\r\n                        style={{ fontSize: \"16px\" }}\r\n                      >\r\n                        {topic.incorrect}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell\r\n                        align=\"right\"\r\n                        style={{ fontSize: \"16px\" }}\r\n                      >\r\n                        {topic.ommited}\r\n                      </StyledTableCell>\r\n                    </StyledTableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Anatomy\", \"8/286\", \"7(88%)\", \"0(0%)\", \"1(12%)\", 3.99),\r\n  createData(\"Anatomy\", \"8/286\", \"7(88%)\", \"0(0%)\", \"1(12%)\", 3.99),\r\n  createData(\"Anatomy\", \"8/286\", \"7(88%)\", \"0(0%)\", \"1(12%)\", 3.99),\r\n];\r\n\r\nexport default function FKnTopics() {\r\n  const [data, setData] = useState();\r\n  useEffect(() => {\r\n    api.get(\"/testResult/topic/perfomance\").then((res) => {\r\n      console.log(res.data.data);\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <UserNavigation />\r\n      <Container maxWidth=\"xl\" style={{ margin: \"100px auto\" }}>\r\n        <Typography\r\n          variant=\"h4\"\r\n          style={{ color: \"#434343\", fontSize: \"27px\", margin: \"40px 0\" }}\r\n        >\r\n          Functional Knowledge and Topics\r\n        </Typography>\r\n        <br />\r\n\r\n        <TableContainer component={Paper} style={{ borderRadius: 5 }}>\r\n          <Table aria-label=\"collapsible table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell />\r\n                <StyledTableCell sx={{ fontSize: \"20px\" }}>\r\n                  Name\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"right\" sx={{ fontSize: \"20px\" }}>\r\n                  Usage\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"right\" sx={{ fontSize: \"20px\" }}>\r\n                  correct\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"right\" sx={{ fontSize: \"20px\" }}>\r\n                  Incorrect\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"right\" sx={{ fontSize: \"20px\" }}>\r\n                  Ommited\r\n                </StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <Row key={row.name} row={row} />\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Container>\r\n      <UserFooter />\r\n    </>\r\n  );\r\n}\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\Signup.js",["619"],"import React from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Container,\r\n} from \"@mui/material\";\r\nimport { useFormik } from \"formik\";\r\nimport Navigation from \"../component/Navigations\";\r\nimport Footer from \"../component/Footer\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport api from \"../../infrastructure/utils/axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  actions as uiActions,\r\n  ALERT_TYPES,\r\n} from \"../../application/reducers/uiSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  FormContainer: {\r\n    width: \"525px\",\r\n    height: \"auto\",\r\n    background: \"#FFFFFF\",\r\n    boxShadow:\r\n      \"0px 50px 100px rgba(0, 0, 0, 0.06), 0px 10px 30px rgba(0, 0, 0, 0.06)\",\r\n    borderRadius: \"20px\",\r\n    padding: \"20px\",\r\n    [theme.breakpoints.down(800)]: {\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  img: {\r\n    [theme.breakpoints.down(800)]: {\r\n      width: \"80%\",\r\n    },\r\n  },\r\n}));\r\nconst Signup = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const validationSchema = yup.object({\r\n    firstName: yup.string().required(\"Firstname is required\"),\r\n    lastName: yup.string().required(\"Lastname is required\"),\r\n    area_of_practise: yup.string().required(\"Area of practice is required\"),\r\n    email: yup\r\n      .string(\"Enter your email\")\r\n      .email(\"Enter a valid email\")\r\n      .required(\"Email is required\"),\r\n    password: yup\r\n      .string(\"Enter your password\")\r\n      .min(8, \"Password should be of minimum 8 characters length\")\r\n      .required(\"Password is required\"),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      area_of_practise: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      //confirmPassword: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      api\r\n        .post(\"/auth/register\", { ...values })\r\n        .then((res) => {\r\n          if (res.status === 201)\r\n            dispatch(\r\n              uiActions.showAlert({\r\n                type: ALERT_TYPES.INFO,\r\n                message: \"Account created successfully. Login Now.\",\r\n              })\r\n            );\r\n          setTimeout(() => history.push(\"/user/subscriptions\"), 2000);\r\n        })\r\n        .catch((err) => {\r\n          dispatch(\r\n            uiActions.showAlert({\r\n              type: ALERT_TYPES.INFO,\r\n              message: \"Account already exists.\",\r\n            })\r\n          );\r\n          console.log(err.response.data);\r\n        });\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <Grid container maxWidth=\"lg\" margin=\"50px auto\" spacing={2}>\r\n        <Grid item lg={6} md={6} xs={12}>\r\n          <Typography\r\n            sx={{\r\n              fontFamily: \"Roboto\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"56px\",\r\n              lineHeight: \"66px\",\r\n              color: \"#0B0E11\",\r\n            }}\r\n          >\r\n            Create Account in\r\n            <br />\r\n            <span style={{ color: \"#E23012\" }}>Dental World </span>{\" \"}\r\n          </Typography>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <img\r\n            src={require(\"../assets/signupimg.png\").default}\r\n            alt=\"\"\r\n            className={classes.img}\r\n          />\r\n        </Grid>\r\n        <Grid item lg={6} md={6} xs={12}>\r\n          <Box className={classes.FormContainer}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              Welcome to Dental World\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Existing User?{\" \"}\r\n              <NavLink\r\n                to=\"/login\"\r\n                style={{ color: \"#E23012\", textDecoration: \"none\" }}\r\n              >\r\n                Log In\r\n              </NavLink>\r\n            </Typography>\r\n            <br />\r\n            <br />\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  type=\"text\"\r\n                  label=\"First Name\"\r\n                  variant=\"outlined\"\r\n                  name=\"firstName\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.firstName}\r\n                  sx={{ width: \"48%\" }}\r\n                  onBlur={formik.handleBlur}\r\n                  error={\r\n                    formik.touched.firstName && Boolean(formik.errors.firstName)\r\n                  }\r\n                  helperText={\r\n                    formik.touched.firstName && formik.errors.firstName\r\n                  }\r\n                  required\r\n                />\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  type=\"text\"\r\n                  label=\"Last Name\"\r\n                  variant=\"outlined\"\r\n                  name=\"lastName\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.lastName}\r\n                  sx={{ width: \"48%\" }}\r\n                  onBlur={formik.handleBlur}\r\n                  error={\r\n                    formik.touched.lastName && Boolean(formik.errors.lastName)\r\n                  }\r\n                  helperText={formik.touched.lastName && formik.errors.lastName}\r\n                  required\r\n                />\r\n              </Box>\r\n              <br />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Area of Practice\"\r\n                variant=\"outlined\"\r\n                name=\"area_of_practise\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.area_of_practise}\r\n                sx={{ width: \"100%\" }}\r\n                onBlur={formik.handleBlur}\r\n                error={\r\n                  formik.touched.area_of_practise &&\r\n                  Boolean(formik.errors.area_of_practise)\r\n                }\r\n                helperText={\r\n                  formik.touched.area_of_practise &&\r\n                  formik.errors.area_of_practise\r\n                }\r\n                required\r\n              />\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.email}\r\n                sx={{ width: \"100%\" }}\r\n                onBlur={formik.handleBlur}\r\n                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                helperText={formik.touched.email && formik.errors.email}\r\n                required\r\n              />\r\n              <br />\r\n              <br />\r\n              <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.password}\r\n                  sx={{ width: \"100%\" }}\r\n                  onBlur={formik.handleBlur}\r\n                  error={\r\n                    formik.touched.password && Boolean(formik.errors.password)\r\n                  }\r\n                  helperText={formik.touched.password && formik.errors.password}\r\n                  required\r\n                />\r\n                {/* <TextField\r\n                  id=\"outlined-basic\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  name=\"confirmPassword\"\r\n                  variant=\"outlined\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.confirmPassword}\r\n                  sx={{ width: \"48%\" }}\r\n                /> */}\r\n              </Box>\r\n              <br />\r\n              <Button\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                sx={{ width: \"100%\", padding: \"15px\" }}\r\n              >\r\n                {\" \"}\r\n                Sign up\r\n              </Button>\r\n            </form>\r\n            <br />\r\n            {/* <br />\r\n            <Typography\r\n              variant=\"body1\"\r\n              sx={{\r\n                fontSize: \"1rem\",\r\n                color: \"#7B7B7B\",\r\n                marginBottom: \"30px\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              or sign up with other accounts\r\n            </Typography>\r\n            <Container\r\n              sx={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-evenly\",\r\n              }}\r\n            >\r\n              <a href=\"\">\r\n                <img src={require(\"../assets/google.png\").default} alt=\"\" />\r\n              </a>\r\n              <a href=\"\">\r\n                <img\r\n                  src={require(\"../assets/twitter1 (2).png\").default}\r\n                  alt=\"\"\r\n                />\r\n              </a>\r\n              <a href=\"\">\r\n                <img\r\n                  src={require(\"../assets/twitter1 (1).png\").default}\r\n                  alt=\"\"\r\n                />\r\n              </a>\r\n            </Container> */}\r\n            <br />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\Privacy-policy.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\pages\\subscriptions\\Subscriptions.js",["620"],"import React from 'react'\r\nimport UserNavigation from '../../component/UserNavigation'\r\nimport Navigation from '../../component/Navigations'\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Container, Typography, Box, Button } from \"@mui/material\";\r\nimport axios from \"axios\"\r\nimport { useCallback } from \"react\";\r\nimport useRazorpay from \"react-razorpay\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        width: \"250px\",\r\n        height: \"auto\",\r\n        padding: \"0 0 30px 0\",\r\n        margin: \"30px 0\",\r\n        border: \"1px solid #EDEDED\",\r\n        boxSizing: \"border-box\",\r\n        filter: \"drop-shadow(0px 20px 40px rgba(191, 191, 191, 0.16))\",\r\n        borderRadius: \"5px\",\r\n        \"&:hover\": {\r\n            border: \"1px solid #EDEDED\",\r\n            boxSizing: \"border-box\",\r\n            boxShadow: \"0px 20px 40px rgba(49, 49, 49, 0.1)\",\r\n            borderRadius: \"5px\",\r\n        },\r\n        // [theme.breakpoints.down(500)]: {\r\n        //   padding: \"30px \",\r\n        // },\r\n    },\r\n    listItem: {\r\n        fontSize: \"16px\",\r\n        lineHeight: \"40px\",\r\n        color: \"#7B7B7B\",\r\n        alignItems: \"center\",\r\n    },\r\n    button: {\r\n        border: \"1px solid #7B7B7B\",\r\n        boxSizing: \"border-box\",\r\n        filter:\r\n            \"drop-shadow(0px 100px 80px rgba(49, 49, 49, 0.1)) drop-shadow(0px 64.8148px 46.8519px rgba(49, 49, 49, 0.0759259)) drop-shadow(0px 38.5185px 25.4815px rgba(49, 49, 49, 0.0607407)) drop-shadow(0px 20px 13px rgba(49, 49, 49, 0.05)) drop-shadow(0px 8.14815px 6.51852px rgba(49, 49, 49, 0.0392593)) drop-shadow(0px 1.85185px 3.14815px rgba(49, 49, 49, 0.0240741))\",\r\n        borderRadius: \"5px\",\r\n        padding: \"8px 50px\",\r\n        textDecoration: \"none\",\r\n        color: \"#7B7B7B\",\r\n        \"&:hover\": {\r\n            background: \"#E23012\",\r\n            color: \"#fff\",\r\n            border: \"1px solid #E23012\",\r\n        },\r\n    },\r\n}));\r\nconst Subscriptions = () => {\r\n    const classes = useStyles();\r\n    const [plans, setPlans] = React.useState();\r\n    const getPlans = async () => {\r\n        try {\r\n            const result = await axios.get(\"https://dworld-back.herokuapp.com/api/v1/subscription/all\")\r\n            console.log(result)\r\n            setPlans(result)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    React.useEffect(() => {\r\n        getPlans()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <Navigation />\r\n            <div>\r\n                <Typography\r\n                    variant=\"h1\"\r\n                    sx={{\r\n                        fontSize: \"3rem\",\r\n                        fontWeight: \"bold\",\r\n                        textAlign: \"center\",\r\n                        color: \"#000\",\r\n                    }}\r\n                >\r\n                    Pricing\r\n                </Typography>\r\n                <br />\r\n                <Typography\r\n                    variant=\"body1\"\r\n                    sx={{\r\n                        fontSize: \"1rem\",\r\n                        textAlign: \"center\",\r\n                        color: \"#7B7B7B\",\r\n                        marginBottom: \"50px\",\r\n                        padding: \"0 10px\",\r\n                    }}\r\n                >\r\n                    Slate helps you see how many more days you need to work to reach your\r\n                    financial goal.\r\n                </Typography>\r\n            </div>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-evenly\",\r\n                    flexWrap: \"wrap\",\r\n                }}\r\n            >\r\n                {plans && (<>\r\n                    {plans?.data.data.map((item, i) => (\r\n                        <Box className={classes.card} key={i}>\r\n                            <Typography\r\n                                style={{\r\n                                    fontSize: \"20px\",\r\n                                    background: \"#FFF1F3\",\r\n                                    textAlign: \"center\",\r\n                                    padding: \"10px\",\r\n                                }}\r\n                            >\r\n                                {item.name}\r\n                            </Typography>\r\n                            <Container>\r\n                                <h1 style={{ textAlign: \"center\" }}>\r\n                                    {item.extensionDays}\r\n                                    {/* <span style={{ fontSize: \"16px\", color: \"#7B7B7B\" }}>\r\n                    / {item.time}\r\n                  </span> */}\r\n                                </h1>\r\n                                {/* <p\r\n                  style={{\r\n                    fontSize: \"16px\",\r\n                    color: \"#7B7B7B\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {item.extensionDays}\r\n                </p> \r\n                <br />*/}\r\n                                {item.description.map((item) => (\r\n                                    <>\r\n                                        <li className={classes.listItem}>{item.title}</li>\r\n                                    </>\r\n                                ))}\r\n                                <br />\r\n                                <Typography\r\n                                    style={{\r\n                                        fontSize: \"20px\",\r\n                                        background: \"#FFF1F3\",\r\n                                        textAlign: \"center\",\r\n                                        padding: \"10px\",\r\n                                    }}\r\n                                >\r\n                                    <b>{item.amount}</b>\r\n                                </Typography>\r\n                                <br />\r\n                                <PayButton />\r\n                            </Container>\r\n                            {/* <br />\r\n            <br /> */}\r\n                            {/* <div style={{ textAlign: \"center\" }}>\r\n              <a href=\"\" className={classes.button}>\r\n                Try Now\r\n              </a>\r\n            </div> */}\r\n                        </Box>\r\n                    ))}\r\n                </>)}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Subscriptions;\r\n\r\n\r\nconst PayButton = () => {\r\n    const Razorpay = useRazorpay();\r\n\r\n    const handlePayment = useCallback(() => {\r\n        // const order = await createOrder(params);\r\n        const options = {\r\n            key: \"rzp_test_EU0IcORo7uNU3F\",\r\n            amount: \"9000\",\r\n            currency: \"INR\",\r\n            name: \"Dental World\",\r\n            description: \"Test Transaction\",\r\n            image: \"https://dental.bobprep.com/static/media/laptop.9fe0a50d.png\",\r\n            // order_id: \"12134124\",\r\n            handler: (res) => {\r\n                console.log(res);\r\n            },\r\n            prefill: {\r\n                name: \"Piyush Garg\",\r\n                email: \"youremail@example.com\",\r\n                contact: \"9999999999\",\r\n            },\r\n            notes: {\r\n                address: \"Razorpay Corporate Office\",\r\n            },\r\n            theme: {\r\n                color: \"#3399cc\",\r\n            },\r\n        };\r\n\r\n        const rzpay = new Razorpay(options);\r\n        rzpay.open();\r\n        rzpay.on('payment.failed', (failresponse) => {\r\n            console.log(failresponse)\r\n        })\r\n    }, [Razorpay]);\r\n    return (\r\n        <>\r\n            <div className=\"App\">\r\n                <Button size=\"large\" sx={{ width: \"100%\" }} variant=\"outlined\" onClick={handlePayment} color=\"primary\">\r\n                    Get Subscription\r\n                </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\component\\UI\\UiAlert.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\application\\reducers\\authSlice.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\application\\reducers\\explanationSlice.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\application\\reducers\\questionSlice.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\application\\reducers\\uiSlice.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\application\\reducers\\testSlice.js",["621","622"],"import api from \"../../infrastructure/utils/axios\";\r\nimport store from \"../store/index\";\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst fetchQuestions = createAsyncThunk(\r\n  \"test/getQuestions\",\r\n  async ({ page }) => {\r\n    const body = store.getState().test.testSetting;\r\n    const { selectedSubTopics } = store.getState().question.metaData;\r\n    const { filterBy, total } = store.getState().test.testSetting;\r\n    if (filterBy[3][\"all\"]) {\r\n      const { data } = await api.post(\r\n        `question/user?filterBy=all&page=${page}&limit=1&totalQuestionCount=${total}`,\r\n        {\r\n          subTopicId: [...selectedSubTopics],\r\n          // ...body,\r\n        }\r\n      );\r\n      console.log(\"fetchquestion api\", data);\r\n      // state.testSetting = {\r\n      //   ...state.testSetting,\r\n      //   total,\r\n      // }\r\n      return { data };\r\n    } else {\r\n      const { data } = await api.post(\r\n        // `question/user?page=${page}&limit=${total}`,\r\n        `question/user?filterBy=all&page=${page}&limit=1&totalQuestionCount=${total}`,\r\n\r\n        {\r\n          subTopicId: [...selectedSubTopics],\r\n          ...body,\r\n        }\r\n      );\r\n      console.log(\"fetchquestion api\", data.pageCount);\r\n\r\n      return { data };\r\n    }\r\n  }\r\n);\r\n\r\nconst submitAnswers = createAsyncThunk(\"test/submitAnswers\", async () => {\r\n  const testResult = store.getState().test.testResult;\r\n  console.log(testResult, \"testResult\");\r\n  const response = await api.post(\"testResult/add\", testResult);\r\n  console.log(response, \"responseapi\");\r\n  return response;\r\n});\r\n\r\nconst testSlice = createSlice({\r\n  name: \"test\",\r\n  initialState: {\r\n    testQuestion: null,\r\n    isReadyForSubmit: false,\r\n    totalQuestion: null,\r\n    testSetting: {\r\n      filterBy: [],\r\n    },\r\n    testResult: {\r\n      test_name: \"\",\r\n      mode: \"\",\r\n      totalQuestion: 0,\r\n      totalIncorrect: 0,\r\n      totalCorrect: 0,\r\n      totalUnanswered: 0,\r\n      totalMarked: 0,\r\n      totalTimeSpend: 0,\r\n      questions_details: [],\r\n    },\r\n    questionVisitCount: 1,\r\n    submittedTest: {\r\n      id: null,\r\n      show: false,\r\n    },\r\n  },\r\n  reducers: {\r\n    setQuestionFilter: (\r\n      state,\r\n      {\r\n        // payload: {\r\n        //   mode,\r\n        //   filters: { all, incorrect, marked, unused },\r\n        //   total,\r\n        // },\r\n        payload,\r\n      }\r\n    ) => {\r\n      // console.log(total, state, \"<<<<testslice\");\r\n      console.log(payload, \"<<<<\");\r\n      const { total, mode, filters } = payload;\r\n\r\n      // state = { ...state, totalQuestion: total };\r\n      state.testSetting = {\r\n        ...state.testSetting,\r\n        total,\r\n        filterBy: [\r\n          { isMarked: filters.marked },\r\n          { isCorrect: filters.incorrect },\r\n          { isUnused: filters.unused },\r\n          { all: filters.all },\r\n        ],\r\n      };\r\n      state.testResult = {\r\n        ...state.testResult,\r\n        mode: mode.toUpperCase(),\r\n        totalQuestion: total,\r\n        test_name: \"Test2\",\r\n      };\r\n    },\r\n    incrementQuestionVisitCount: (state) => {\r\n      console.log(\r\n        state.questionVisitCount,\r\n        state.totalQuestion,\r\n\r\n        \"<<<match the state\"\r\n      );\r\n      if (+state.questionVisitCount < state.testSetting.total) {\r\n        // if (true) {\r\n        state.questionVisitCount = state.questionVisitCount + 1;\r\n        if (\r\n          state.questionVisitCount == state.testSetting.total ||\r\n          state.totalQuestion == state.questionVisitCount\r\n        ) {\r\n          state.isReadyForSubmit = true;\r\n        }\r\n      } else state.isReadyForSubmit = true;\r\n    },\r\n    setQuestionVisitCount: (state, { payload }) => {\r\n      state.isReadyForSubmit = false;\r\n      state.questionVisitCount = payload;\r\n    },\r\n    setTotalTime: (state, { payload }) => {\r\n      state.testResult.totalTimeSpend = state.testResult.totalTimeSpend + 1;\r\n    },\r\n    setSubmittedTestResultEmpty: (state, { payload }) => {\r\n      console.log(payload, \"payload send\");\r\n      state.testQuestion = null;\r\n      state.isReadyForSubmit = false;\r\n      state.totalQuestion = null;\r\n      state.testSetting = {\r\n        filterBy: [],\r\n      };\r\n      state.testResult = {\r\n        test_name: \"\",\r\n        mode: \"\",\r\n        totalQuestion: 0,\r\n        totalIncorrect: 0,\r\n        totalCorrect: 0,\r\n        totalUnanswered: 0,\r\n        totalMarked: 0,\r\n        totalTimeSpend: 0,\r\n        questions_details: [],\r\n      };\r\n      state.questionVisitCount = 1;\r\n      state.submittedTest = {\r\n        id: null,\r\n        show: false,\r\n      };\r\n    },\r\n    addToResult: (state, { payload }) => {\r\n      let position = null;\r\n      console.log(payload, state.testResult, \"<<<<all details on submit\");\r\n      state.testResult.questions_details.map((detail, idx) =>\r\n        detail.question === payload.question ? (position = idx) : null\r\n      );\r\n      if (position !== null) {\r\n        state.testResult.questions_details[position] = { ...payload };\r\n        state.testResult = {\r\n          ...state.testResult,\r\n          totalIncorrect:\r\n            !state.testResult.questions_details[position].isIncorrect &&\r\n            payload.isIncorrect\r\n              ? state.testResult.totalIncorrect + 1\r\n              : state.testResult.totalIncorrect,\r\n          totalCorrect:\r\n            !state.testResult.questions_details[position].isCorrect &&\r\n            payload.isCorrect\r\n              ? state.testResult.totalCorrect + 1\r\n              : state.testResult.totalCorrect,\r\n          totalUnanswered:\r\n            !state.testResult.questions_details[position].isUnused &&\r\n            payload.isUnused\r\n              ? state.testResult.totalUnanswered + 1\r\n              : state.testResult.totalUnanswered,\r\n          totalMarked:\r\n            !state.testResult.questions_details[position].isMarked &&\r\n            payload.isMarked\r\n              ? state.testResult.totalMarked + 1\r\n              : state.testResult.totalMarked,\r\n        };\r\n      } else {\r\n        state.testResult.questions_details = [\r\n          ...state.testResult.questions_details,\r\n          { ...payload },\r\n        ];\r\n        state.testResult = {\r\n          ...state.testResult,\r\n          totalQuestion: state.testResult.totalQuestion + 1,\r\n          totalIncorrect: payload.isIncorrect\r\n            ? state.testResult.totalIncorrect + 1\r\n            : state.testResult.totalIncorrect,\r\n          totalCorrect: payload.isCorrect\r\n            ? state.testResult.totalCorrect + 1\r\n            : state.testResult.totalCorrect,\r\n          totalUnanswered: payload.isUnused\r\n            ? state.testResult.totalUnanswered + 1\r\n            : state.testResult.totalUnanswered,\r\n          totalMarked: payload.isMarked\r\n            ? state.testResult.totalMarked + 1\r\n            : state.testResult.totalMarked,\r\n        };\r\n      }\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchQuestions.fulfilled]: (state, { payload: { data } }) => {\r\n      // const { total } = store.getState().test.testSetting;\r\n      state.testQuestion = data.data[0];\r\n      // state.totalQuestion = data.totalQuestionCount;\r\n      state.totalQuestion = data.pageCount;\r\n    },\r\n    [submitAnswers.fulfilled]: (state, { payload }) => {\r\n      state.submittedTest = {\r\n        id: payload.data.data._id,\r\n        show: true,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport { fetchQuestions, submitAnswers };\r\n\r\nexport const {\r\n  setQuestionFilter,\r\n  incrementQuestionVisitCount,\r\n  setQuestionVisitCount,\r\n  addToResult,\r\n  setTotalTime,\r\n  setSubmittedTestResultEmpty,\r\n} = testSlice.actions;\r\n\r\nexport default testSlice.reducer;\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\infrastructure\\services\\authService.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\infrastructure\\services\\questionService.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\component\\Footer.js",["623","624","625","626"],"import React from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Grid, Container, Typography } from \"@mui/material\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Footer: {\r\n    background: \"#0B0E11\",\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    padding: \"30px 0\",\r\n    // \"&:hover\": {\r\n    // },\r\n    [theme.breakpoints.down(500)]: {},\r\n  },\r\n}));\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <section id=\"Footer\" className={classes.Footer}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          sx={{ justifyContent: \"space-around\", padding: \"20px\" }}\r\n        >\r\n          <Grid item lg={2} md={6} xs={12}>\r\n            <img src={require(\"../assets/darklogo.png\").default} alt=\"\" />\r\n            <br />\r\n            <br />\r\n            {/* <Typography\r\n              variant=\"h6\"\r\n              sx={{ color: \"#fff\", fontSize: \"16px\", fontWeight: \"normal\" }}\r\n            >\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Tortor\r\n              facilisi quis risus egestas ipsum.\r\n            </Typography> */}\r\n          </Grid>\r\n          <Grid item lg={2} md={6} xs={12}>\r\n            <Typography variant=\"h3\" sx={{ fontSize: \"22px\", color: \"#fff\" }}>\r\n              Company\r\n            </Typography>\r\n            <br />\r\n            <br />\r\n            <NavLink style={{ textDecoration: \"none\" }} to=\"/about\">\r\n              <Typography\r\n                variant=\"h3\"\r\n                sx={{ fontSize: \"16px\", color: \"#fff\", paddingTop: \"10px\" }}\r\n              >\r\n                About us\r\n              </Typography>\r\n            </NavLink>\r\n            {/* <Typography\r\n              variant=\"h3\"\r\n              sx={{ fontSize: \"16px\", color: \"#fff\", paddingTop: \"10px\" }}\r\n            >\r\n              Resources\r\n            </Typography> */}\r\n            <NavLink style={{ textDecoration: \"none\" }} to=\"/contact\">\r\n              <Typography\r\n                variant=\"h3\"\r\n                sx={{ fontSize: \"16px\", color: \"#fff\", paddingTop: \"10px\" }}\r\n              >\r\n                Contact Us\r\n              </Typography>\r\n            </NavLink>\r\n          </Grid>\r\n          <Grid item lg={2} md={6} xs={12}>\r\n            <Typography variant=\"h3\" sx={{ fontSize: \"22px\", color: \"#fff\" }}>\r\n              Support\r\n            </Typography>\r\n            <br />\r\n            <br />\r\n            <NavLink to=\"/privacy-policy\" style={{ textDecoration: \"none\" }}>\r\n              <Typography\r\n                variant=\"h3\"\r\n                sx={{\r\n                  fontSize: \"16px\",\r\n                  color: \"#fff\",\r\n                  paddingTop: \"10px\",\r\n                  textDecoration: \"none\",\r\n                }}\r\n              >\r\n                Privacy Policy\r\n              </Typography>\r\n            </NavLink>\r\n            <NavLink to=\"/t&c\" style={{ textDecoration: \"none\" }}>\r\n              <Typography\r\n                variant=\"h3\"\r\n                sx={{ fontSize: \"16px\", color: \"#fff\", paddingTop: \"10px\" }}\r\n              >\r\n                Terms & Condition\r\n              </Typography>\r\n            </NavLink>\r\n          </Grid>\r\n          <Grid item lg={2} md={6} xs={12}>\r\n            <Typography variant=\"h3\" sx={{ fontSize: \"22px\", color: \"#fff\" }}>\r\n              Follow Us\r\n            </Typography>\r\n            <br />\r\n            <div>\r\n              <a href=\"#\">\r\n                <img src={require(\"../assets/Insta.png\").default} alt=\"\" />\r\n              </a>\r\n              <a href=\"#\">\r\n                <img\r\n                  src={require(\"../assets/Facebook.png\").default}\r\n                  alt=\"\"\r\n                  style={{ marginLeft: \"10px\" }}\r\n                />\r\n              </a>\r\n              <a href=\"#\">\r\n                <img\r\n                  src={require(\"../assets/Twitter.png\").default}\r\n                  alt=\"\"\r\n                  style={{ marginLeft: \"10px\" }}\r\n                />\r\n              </a>\r\n              <a href=\"#\">\r\n                <img\r\n                  src={require(\"../assets/Skype.png\").default}\r\n                  alt=\"\"\r\n                  style={{ marginLeft: \"10px\" }}\r\n                />\r\n              </a>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Container maxWidth=\"xl\">\r\n          <br />\r\n          <br />\r\n          <hr />\r\n          <br />\r\n          <Typography variant=\"h6\" sx={{ color: \"#FFFFFF\", fontSize: \"16px\" }}>\r\n            &#169; Copyright 2021. All Right Reserved By Dental World\r\n          </Typography>\r\n        </Container>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\component\\Pricing.js",["627"],"import React from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Container, Typography, Box, Button } from \"@mui/material\";\r\nimport axios from \"axios\"\r\nimport { useCallback } from \"react\";\r\nimport useRazorpay from \"react-razorpay\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    width: \"250px\",\r\n    height: \"auto\",\r\n    padding: \"0 0 30px 0\",\r\n    margin: \"30px 0\",\r\n    border: \"1px solid #EDEDED\",\r\n    boxSizing: \"border-box\",\r\n    filter: \"drop-shadow(0px 20px 40px rgba(191, 191, 191, 0.16))\",\r\n    borderRadius: \"5px\",\r\n    \"&:hover\": {\r\n      border: \"1px solid #EDEDED\",\r\n      boxSizing: \"border-box\",\r\n      boxShadow: \"0px 20px 40px rgba(49, 49, 49, 0.1)\",\r\n      borderRadius: \"5px\",\r\n    },\r\n    // [theme.breakpoints.down(500)]: {\r\n    //   padding: \"30px \",\r\n    // },\r\n  },\r\n  listItem: {\r\n    fontSize: \"16px\",\r\n    lineHeight: \"40px\",\r\n    color: \"#7B7B7B\",\r\n    alignItems: \"center\",\r\n  },\r\n  button: {\r\n    border: \"1px solid #7B7B7B\",\r\n    boxSizing: \"border-box\",\r\n    filter:\r\n      \"drop-shadow(0px 100px 80px rgba(49, 49, 49, 0.1)) drop-shadow(0px 64.8148px 46.8519px rgba(49, 49, 49, 0.0759259)) drop-shadow(0px 38.5185px 25.4815px rgba(49, 49, 49, 0.0607407)) drop-shadow(0px 20px 13px rgba(49, 49, 49, 0.05)) drop-shadow(0px 8.14815px 6.51852px rgba(49, 49, 49, 0.0392593)) drop-shadow(0px 1.85185px 3.14815px rgba(49, 49, 49, 0.0240741))\",\r\n    borderRadius: \"5px\",\r\n    padding: \"8px 50px\",\r\n    textDecoration: \"none\",\r\n    color: \"#7B7B7B\",\r\n    \"&:hover\": {\r\n      background: \"#E23012\",\r\n      color: \"#fff\",\r\n      border: \"1px solid #E23012\",\r\n    },\r\n  },\r\n}));\r\nconst Pricing = () => {\r\n  const classes = useStyles();\r\n  const [plans, setPlans] = React.useState();\r\n  const getPlans = async () => {\r\n    try {\r\n      const result = await axios.get(\"https://dworld-back.herokuapp.com/api/v1/subscription/all\")\r\n      console.log(result)\r\n      setPlans(result)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  React.useEffect(() => {\r\n    getPlans()\r\n  }, [])\r\n  return (\r\n    <>\r\n      <div>\r\n        <Typography\r\n          variant=\"h1\"\r\n          sx={{\r\n            fontSize: \"3rem\",\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n            color: \"#000\",\r\n          }}\r\n        >\r\n          Pricing\r\n        </Typography>\r\n        <br />\r\n        <Typography\r\n          variant=\"body1\"\r\n          sx={{\r\n            fontSize: \"1rem\",\r\n            textAlign: \"center\",\r\n            color: \"#7B7B7B\",\r\n            marginBottom: \"70px\",\r\n            padding: \"0 10px\",\r\n          }}\r\n        >\r\n          Slate helps you see how many more days you need to work to reach your\r\n          financial goal.\r\n        </Typography>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {plans && (<>\r\n          {plans?.data.data.map((item, i) => (\r\n            <Box className={classes.card} key={i}>\r\n              <Typography\r\n                style={{\r\n                  fontSize: \"20px\",\r\n                  background: \"#FFF1F3\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                }}\r\n              >\r\n                {item.name}\r\n              </Typography>\r\n              <Container>\r\n                <h1 style={{ textAlign: \"center\" }}>\r\n                  {item.extensionDays}\r\n                  {/* <span style={{ fontSize: \"16px\", color: \"#7B7B7B\" }}>\r\n                    / {item.time}\r\n                  </span> */}\r\n                </h1>\r\n                {/* <p\r\n                  style={{\r\n                    fontSize: \"16px\",\r\n                    color: \"#7B7B7B\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {item.extensionDays}\r\n                </p> \r\n                <br />*/}\r\n                {item.description.map((item) => (\r\n                  <>\r\n                    <li className={classes.listItem}>{item.title}</li>\r\n                  </>\r\n                ))}\r\n                <br />\r\n                <Typography\r\n                  style={{\r\n                    fontSize: \"20px\",\r\n                    background: \"#FFF1F3\",\r\n                    textAlign: \"center\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  <b>{item.amount}</b>\r\n                </Typography>\r\n                <br />\r\n                {/* <PayButton /> */}\r\n              </Container>\r\n              {/* <br />\r\n            <br /> */}\r\n              {/* <div style={{ textAlign: \"center\" }}>\r\n              <a href=\"\" className={classes.button}>\r\n                Try Now\r\n              </a>\r\n            </div> */}\r\n            </Box>\r\n          ))}\r\n        </>)}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pricing;\r\n\r\n\r\nconst PayButton = () => {\r\n  const Razorpay = useRazorpay();\r\n\r\n  const handlePayment = useCallback(() => {\r\n    // const order = await createOrder(params);\r\n    const options = {\r\n      key: \"rzp_test_EU0IcORo7uNU3F\",\r\n      amount: \"9000\",\r\n      currency: \"INR\",\r\n      name: \"Acme Corp\",\r\n      description: \"Test Transaction\",\r\n      image: \"https://dental.bobprep.com/static/media/laptop.9fe0a50d.png\",\r\n      // order_id: \"12134124\",\r\n      handler: (res) => {\r\n        console.log(res);\r\n      },\r\n      prefill: {\r\n        name: \"Piyush Garg\",\r\n        email: \"youremail@example.com\",\r\n        contact: \"9999999999\",\r\n      },\r\n      notes: {\r\n        address: \"Razorpay Corporate Office\",\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n\r\n    const rzpay = new Razorpay(options);\r\n    rzpay.open();\r\n  }, [Razorpay]);\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <Button size=\"large\"  sx={{ width: \"100%\" }} variant=\"outlined\" onClick={handlePayment} color=\"primary\">\r\n          Get Subscription\r\n        </Button>\r\n      </div>\r\n    </>\r\n  )\r\n}","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\component\\Navigations.js",["628"],"import * as React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Drawer,\r\n  useTheme,\r\n  useMediaQuery,\r\n  IconButton,\r\n  Box,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  hamburger: {\r\n    color: \"white\",\r\n    marginLeft: \"auto\",\r\n  },\r\n  sidedrawer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"center\",\r\n    rowGap: \"3rem\",\r\n    padding: \"2rem\",\r\n    width: \"70vw\",\r\n    height: \"100vh\",\r\n    // background: \"#F23A5E\",\r\n    position: \"relative\",\r\n    // padding: \"10px 0 0 3rem\",\r\n  },\r\n  closeIcon: {\r\n    width: \"3rem\",\r\n    height: \"3rem\",\r\n    marginLeft: \"auto\",\r\n    position: \"absolute\",\r\n    right: \"1rem\",\r\n    top: \"1rem\",\r\n    cursor: \"pointer\",\r\n    color: \"#F23A5E\",\r\n  },\r\n  navLinks: {\r\n    fontStyle: \"normal\",\r\n    fontWeight: 600,\r\n    fontSize: \"15px\",\r\n    lineHeight: \"18px\",\r\n    letterSpacing: \"0.05em\",\r\n    color: \"#0B0E11\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"#F23A5E\",\r\n      borderBottom: \"5px solid #F23A5E\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Navigation() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  // const history = useHistory();\r\n  const { isAuth, user } = useSelector((state) => state.auth);\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(1075));\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleDrawer = (bool) => () => {\r\n    setOpen(bool);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"static\"\r\n        component=\"header\"\r\n        style={{ background: \"#fff\", boxShadow: \"none\", padding: \"20px\" }}\r\n      >\r\n        <Toolbar>\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <NavLink to=\"/\" style={{ textDecoration: \"none\" }}>\r\n              <img src={require(\"../assets/logo.png\").default} alt=\"\" />\r\n            </NavLink>\r\n          </Box>\r\n          {!isMobile && (\r\n            <Toolbar>\r\n              <NavLink to=\"/about\" style={{ textDecoration: \"none\" }}>\r\n                <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n                  <b>About Dworld</b>\r\n                </Typography>\r\n              </NavLink>\r\n              {/* <NavLink to=\"/\" style={{ textDecoration: \"none\" }}>\r\n                <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n                  <b>Resources</b>\r\n                </Typography>\r\n              </NavLink> */}\r\n              <NavLink to=\"/contact\" style={{ textDecoration: \"none\" }}>\r\n                <Typography className={classes.navLinks} sx={{ mr: 25 }}>\r\n                  <b>Contact Us</b>\r\n                </Typography>\r\n              </NavLink>\r\n              {isAuth ? (\r\n                <NavLink\r\n                  to=\"/user/dashboard\"\r\n                  style={{ textDecoration: \"none\" }}\r\n                >\r\n                  <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n                    <b>Dashboard</b>\r\n                  </Typography>\r\n                </NavLink>\r\n              ) : (\r\n                <>\r\n                  <NavLink to=\"/login\" style={{ textDecoration: \"none\" }}>\r\n                    <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n                      <b>Log In</b>\r\n                    </Typography>\r\n                  </NavLink>\r\n                  <NavLink to=\"/signup\" style={{ textDecoration: \"none\" }}>\r\n                    <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n                      <b>Sign Up</b>\r\n                    </Typography>\r\n                  </NavLink>\r\n                </>\r\n              )}\r\n            </Toolbar>\r\n          )}\r\n\r\n          {isMobile && (\r\n            <IconButton\r\n              className={classes.hamburger}\r\n              onClick={handleDrawer(true)}\r\n            >\r\n              <MenuIcon style={{ color: \"#F23A5E\" }} />\r\n            </IconButton>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        anchor=\"right\"\r\n        onClose={handleDrawer(false)}\r\n        open={isMobile && open}\r\n      >\r\n        <Box className={classes.sidedrawer}>\r\n          <CloseIcon\r\n            className={classes.closeIcon}\r\n            onClick={handleDrawer(false)}\r\n          />\r\n          <NavLink\r\n            to=\"/\"\r\n            style={{ textDecoration: \"none\" }}\r\n            onClick={handleDrawer(false)}\r\n          >\r\n            <img src={require(\"../assets/logo.png\").default} alt=\"\" />\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/about\"\r\n            style={{ textDecoration: \"none\" }}\r\n            onClick={handleDrawer(false)}\r\n          >\r\n            <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n              <b>About Dworld</b>\r\n            </Typography>\r\n          </NavLink>\r\n          {/* <NavLink\r\n            to=\"/\"\r\n            style={{ textDecoration: \"none\" }}\r\n            onClick={handleDrawer(false)}\r\n          >\r\n            <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n              <b>Resources</b>\r\n            </Typography>\r\n          </NavLink> */}\r\n          <NavLink\r\n            to=\"/contact\"\r\n            style={{ textDecoration: \"none\" }}\r\n            onClick={handleDrawer(false)}\r\n          >\r\n            <Typography className={classes.navLinks} sx={{ mr: 25 }}>\r\n              <b>Contact Us</b>\r\n            </Typography>\r\n          </NavLink>\r\n          {isAuth ? (\r\n            <NavLink\r\n              to=\"/user/dashboard\"\r\n              style={{ textDecoration: \"none\" }}\r\n              onClick={handleDrawer(false)}\r\n            >\r\n              <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n                <b>Dashboard</b>\r\n              </Typography>\r\n            </NavLink>\r\n          ) : (\r\n            <>\r\n              <NavLink\r\n                to=\"/login\"\r\n                style={{ textDecoration: \"none\" }}\r\n                onClick={handleDrawer(false)}\r\n              >\r\n                <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n                  <b>Log In</b>\r\n                </Typography>\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/signup\"\r\n                style={{ textDecoration: \"none\" }}\r\n                onClick={handleDrawer(false)}\r\n              >\r\n                <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n                  <b>Sign Up</b>\r\n                </Typography>\r\n              </NavLink>\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\component\\UserFooter.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\component\\UserNavigation.js",["629"],"// import * as React from 'react';\r\n// import AppBar from '@mui/material/AppBar';\r\n// import Box from '@mui/material/Box';\r\n// import Toolbar from '@mui/material/Toolbar';\r\n// import Typography from '@mui/material/Typography';\r\n// import { makeStyles } from '@mui/styles';\r\n// import { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n\r\n// navLinks: {\r\n//     fontFamily: \"Montserrat\",\r\n//     fontStyle: \"normal\",\r\n//     fontWeight: \"bolder\",\r\n//     fontSize: \"20px\",\r\n//     lineHeight: \"24px\",\r\n//     color: \"#FFFFFF\",\r\n//     cursor: 'pointer',\r\n//     \"&:hover\": {\r\n//         color: \"#FFFFFF\",\r\n//         borderBottom: '5px solid #ffff',\r\n//     },\r\n\r\n// }\r\n// }));\r\n\r\n// const Navigation = () => {\r\n//     const classes = useStyles();\r\n\r\n//     return (\r\n// <Box sx={{ flexGrow: 1 }}>\r\n//     <AppBar position=\"static\" style={{\r\n//         background: \"#F23A5E\"\r\n//     }}>\r\n//         <Toolbar>\r\n//             <Box sx={{ flexGrow: 1 }}>\r\n//                 <img src={require(\"../Assets/dlogo.png\").default} alt=\"\" />\r\n//             </Box>\r\n//             <Typography className={classes.navLinks} sx={{ mr: 5 }}><b>Practice</b></Typography>\r\n//             <Typography className={classes.navLinks} sx={{ mr: 5 }}><b>Previous Tests</b></Typography>\r\n//             <Typography className={classes.navLinks} sx={{ mr: 5 }}><b>Test Performance</b></Typography>\r\n//             <Typography className={classes.navLinks} sx={{ mr: 5 }}><b>Topic Performance</b></Typography>\r\n//             <Typography className={classes.navLinks} sx={{ mr: 5 }}><b>Notes</b></Typography>\r\n//         </Toolbar>\r\n//     </AppBar>\r\n// </Box>\r\n\r\n//     )\r\n// }\r\n\r\n// export default Navigation\r\n\r\nimport * as React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Drawer,\r\n  useTheme,\r\n  useMediaQuery,\r\n  IconButton,\r\n  Box,\r\n  Typography,\r\n  styled,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useState } from \"react\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\r\n// import logo from \"../../assets/logo.png\";\r\n// import { Menu as MenuIcon } from \"@material-ui/icons\";\r\n//   import closeIcon from \"../../assets/closeIcon.png\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../application/reducers/authSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  hamburger: {\r\n    color: \"white\",\r\n    marginLeft: \"auto\",\r\n  },\r\n  sidedrawer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"center\",\r\n    rowGap: \"3rem\",\r\n    padding: \"2rem\",\r\n    width: \"90vw\",\r\n    height: \"100vh\",\r\n    background: \"#F23A5E\",\r\n    position: \"relative\",\r\n    padding: \"10px 0 0 3rem\",\r\n  },\r\n  closeIcon: {\r\n    width: \"3rem\",\r\n    height: \"3rem\",\r\n    marginLeft: \"auto\",\r\n    position: \"absolute\",\r\n    right: \"1rem\",\r\n    top: \"1rem\",\r\n    cursor: \"pointer\",\r\n    color: \"#fff\",\r\n  },\r\n  navLinks: {\r\n    fontFamily: \"Montserrat\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"bolder\",\r\n    fontSize: \"20px\",\r\n    lineHeight: \"24px\",\r\n    color: \"#FFFFFF\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"#FFFFFF\",\r\n      borderBottom: \"5px solid #ffff\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomNavLink = styled(NavLink)({\r\n  textDecoration: \"none\",\r\n});\r\n\r\nexport default function Navigation() {\r\n  const [loginAnchorEl, setLoginAnchorEl] = React.useState(null);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { name } = useSelector((state) => state.auth.user);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(1075));\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleDrawer = (bool) => () => {\r\n    setOpen(bool);\r\n  };\r\n\r\n  const handleMenuLogin = (event) => {\r\n    setLoginAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseLogin = () => {\r\n    setLoginAnchorEl(null);\r\n  };\r\n\r\n  const styles = {\r\n    navLinks: {\r\n      fontFamily: \"Montserrat\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: \"regular\",\r\n      fontSize: \"15.5px\",\r\n      lineHeight: \"24px\",\r\n      color: \"#FFFFFF\",\r\n      cursor: \"pointer\",\r\n      \"&:hover\": {\r\n        color: \"#FFFFFF\",\r\n        borderBottom: \"5px solid #ffff\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"static\"\r\n        component=\"header\"\r\n        style={{ background: \"#F23A5E\" }}\r\n      >\r\n        <Toolbar>\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <NavLink to=\"/\">\r\n              <img src={require(\"../assets/dlogo.png\").default} alt=\"\" />\r\n            </NavLink>\r\n          </Box>\r\n          {!isMobile && (\r\n            <Toolbar>\r\n              <CustomNavLink to=\"/user/dashboard\">\r\n                <Typography sx={{ mr: 5, ...styles.navLinks }}>\r\n                  <b>Dashboard</b>\r\n                </Typography>\r\n              </CustomNavLink>\r\n              <CustomNavLink to=\"/user/practice\">\r\n                <Typography sx={{ mr: 5, ...styles.navLinks }}>\r\n                  <b>Practice</b>\r\n                </Typography>\r\n              </CustomNavLink>\r\n              <CustomNavLink to=\"/user/previous-tests\">\r\n                <Typography sx={{ mr: 5, ...styles.navLinks }}>\r\n                  <b>Previous Tests</b>\r\n                </Typography>\r\n              </CustomNavLink>\r\n              <CustomNavLink to=\"/user/test-performance\">\r\n                <Typography sx={{ mr: 5, ...styles.navLinks }}>\r\n                  <b>Test Performance</b>\r\n                </Typography>\r\n              </CustomNavLink>\r\n              <CustomNavLink to=\"/user/topic-performance\">\r\n                <Typography sx={{ mr: 5, ...styles.navLinks }}>\r\n                  <b>Topic Performance</b>\r\n                </Typography>\r\n              </CustomNavLink>\r\n              <CustomNavLink to=\"/user/notes\">\r\n                <Typography sx={{ mr: 5, ...styles.navLinks }}>\r\n                  <b>Notes</b>\r\n                </Typography>\r\n              </CustomNavLink>\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <Typography fontWeight=\"500\">{name}</Typography>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMenuLogin}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircleIcon />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={loginAnchorEl}\r\n                  anchorOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  open={Boolean(loginAnchorEl)}\r\n                  onClose={handleCloseLogin}\r\n                >\r\n                  <MenuItem onClick={handleCloseLogin}>Profile</MenuItem>\r\n                  <MenuItem onClick={() => history.push(\"/user/subscriptions\")}>Subscription</MenuItem>\r\n                  <MenuItem\r\n                    onClick={() => {\r\n                      handleCloseLogin();\r\n                      dispatch(logout());\r\n                    }}\r\n                  >\r\n                    Log out\r\n                  </MenuItem>\r\n                </Menu>\r\n              </div>\r\n            </Toolbar>\r\n          )}\r\n\r\n          {isMobile && (\r\n            <IconButton\r\n              className={classes.hamburger}\r\n              onClick={handleDrawer(true)}\r\n            >\r\n              <MenuIcon style={{ color: \"#fff\" }} />\r\n            </IconButton>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        anchor=\"right\"\r\n        onClose={handleDrawer(false)}\r\n        open={isMobile && open}\r\n      >\r\n        <Box className={classes.sidedrawer}>\r\n          <CloseIcon\r\n            className={classes.closeIcon}\r\n            onClick={handleDrawer(false)}\r\n          />\r\n          <Box>\r\n            <img src={require(\"../assets/dlogo.png\").default} alt=\"\" />\r\n          </Box>\r\n          <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n            <b>Practice</b>\r\n          </Typography>\r\n          <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n            <b>Previous Tests</b>\r\n          </Typography>\r\n          <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n            <b>Test Performance</b>\r\n          </Typography>\r\n          <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n            <b>Topic Performance</b>\r\n          </Typography>\r\n          <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n            <b>Notes</b>\r\n          </Typography>\r\n        </Box>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\infrastructure\\utils\\axios.js",["630","631","632"],"import axios from \"axios\";\r\nimport { refreshToken } from \"../../application/reducers/authSlice\";\r\nimport { actions, ALERT_TYPES } from \"../../application/reducers/uiSlice\";\r\nimport store from \"../../application/store\";\r\n\r\nconst api = axios.create({\r\n  // baseURL: \"https://dental-world-api.herokuapp.com/api/v1\",\r\n  baseURL: \"https://dworld-back.herokuapp.com/api/v1\",\r\n  // baseURL: \"http://localhost:8000/api/v1\",\r\n});\r\n\r\napi.interceptors.request.use((request) => {\r\n  const auth = store.getState().auth;\r\n  if (auth.isAuth)\r\n    request.headers.Authorization = `Bearer ${auth.token.accessToken}`;\r\n  return request;\r\n});\r\n\r\n// api.interceptors.response.use(undefined, (error) => {\r\n//   // if there is an error and its status is 403 then logout user (till refresh token is unavailable)\r\n//   if (error.response?.status === 403) {\r\n//     store.dispatch(refreshToken()).catch((err) =>\r\n//       store.dispatch(\r\n//         actions.showAlert({\r\n//           type: ALERT_TYPES.INFO,\r\n//           message: \"You were inactive for a long time. Please signin again.\",\r\n//         })\r\n//       )\r\n//     );\r\n\r\n//     return Promise.reject(error);\r\n//   }\r\n\r\n//   console.log(error.response.data?.error);\r\n\r\n//   if (error.response?.status === 500) {\r\n//     error.message = \"Sorry, something went wrong in our server.\";\r\n//   } else {\r\n//     error.message = error.response\r\n//       ? error.response.data?.error?.message\r\n//       : \"Something went wrong. Try again.\";\r\n//   }\r\n\r\n//   if (axios.isCancel(error)) {\r\n//     return new Promise.reject(error);\r\n//   }\r\n\r\n//   store.dispatch(\r\n//     actions.showAlert({ type: ALERT_TYPES.ERROR, message: error.message })\r\n//   );\r\n\r\n//   error.code = error.response ? error.response.data.data : null;\r\n//   return Promise.reject(error);\r\n// });\r\n\r\nexport default api;\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\component\\QuestionProgress.js",["633"],"import { Box, Typography } from \"@mui/material\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setQuestionVisitCount } from \"../../application/reducers/testSlice\";\r\nimport Flag from \"../assets/markFlag.svg\";\r\nimport FlagDark from \"../assets/markFlagDark.svg\";\r\n\r\nfunction Circles({ visited, number, marked }) {\r\n  const style = {\r\n    container: {\r\n      backgroundColor: visited ? \"#F23A5E\" : \"#FCC9C9\",\r\n      height: \"2.2rem\",\r\n      width: \"2.2rem\",\r\n      borderRadius: \"1.1rem\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      <Box sx={style.container}>\r\n        <Typography sx={{ color: visited ? \"white\" : \"#F23A5E\" }}>\r\n          {number}\r\n        </Typography>\r\n      </Box>\r\n      <img src={marked ? FlagDark : Flag} alt=\"\" />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function QuestionProgress() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    testQuestion,\r\n    questionVisitCount,\r\n    testResult: { questions_details },\r\n    totalQuestion,\r\n  } = useSelector((state) => state.test);\r\n\r\n  const style = {\r\n    container: {\r\n      width: \"100%\",\r\n      height: \"15%\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-around\",\r\n      alignItems: \"center\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Box sx={style.container}>\r\n      {[...Array(totalQuestion ? totalQuestion : 0).keys()].map((index) => {\r\n        const data = questions_details[index]\r\n          ? questions_details[index]\r\n          : false;\r\n        const isMarked = data ? data[\"isMarked\"] : false;\r\n\r\n        return (\r\n          <div\r\n            key={index}\r\n            onClick={() => dispatch(setQuestionVisitCount(index + 1))}\r\n          >\r\n            <Circles\r\n              number={index + 1}\r\n              visited={index + 1 <= questionVisitCount ? true : false}\r\n              marked={isMarked}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\component\\DoughnutChart.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\dental\\src\\view\\component\\ProgressBar.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\index.js",[],["634","635"],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\App.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\reportWebVitals.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\application\\store\\index.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\theme\\index.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\routes\\index.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\application\\reducers\\index.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\infrastructure\\services\\index.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\routes\\ProtectedRoutes.js",["636","637","638"],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\Time.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\About.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\Contact.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\Login.js",["639","640","641"],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\Home.js",["642"],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\Signup.js",["643"],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\User\\Practice.js",["644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666"],"import React, { useEffect, useMemo, useState, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Box,\r\n  Typography,\r\n  Checkbox,\r\n  Collapse,\r\n  FormControlLabel,\r\n  Button,\r\n  RadioGroup,\r\n  Radio,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport UserNavigation from \"../../component/UserNavigation\";\r\n\r\nimport UserFooter from \"../../component/UserFooter\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getQuestionMetaData,\r\n  questionActions,\r\n  questionSelectors,\r\n} from \"../../../application/reducers/questionSlice\";\r\nimport {\r\n  getSubTopics,\r\n  fetchQuestions,\r\n  setQuestionFilter,\r\n  getSubmitAnswer,\r\n  getsubmitUserdata,\r\n  setSubmittedTestResultEmpty,\r\n} from \"../../../application/reducers/testSlice\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Add as AddIcon, Remove as RemoveIcon } from \"@mui/icons-material\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport api, { headers } from \"../../../infrastructure/utils/axios\";\r\nimport PackageBox from \"../../component/PackageBox\";\r\nimport axios from \"axios\";\r\nimport {\r\n  BACKEND_URL,\r\n  CURRENT_QUESTION,\r\n  CURRENT_SELECTED_PACKAGE,\r\n  GENERATED_TEST_ID,\r\n  TOTAL_SELECTED_QUESTION,\r\n} from \"../../Constant\";\r\n// import { UserContext } from \"../../../UserContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    border: \"2px solid gray\",\r\n    display: \"flex\",\r\n    margin: \"3rem 0\",\r\n  },\r\n  subjectsCont: {\r\n    margin: \"1rem 0\",\r\n    width: \"30%\",\r\n    maxWidth: 300,\r\n  },\r\n  checkbox: {\r\n    display: \"flex\",\r\n    columnGap: \"0.5rem\",\r\n    alignItems: \"center\",\r\n    background: \"#EFF5F8\",\r\n    color: \"#525252 !important\",\r\n    \"& p\": {\r\n      fontWeight: 600,\r\n    },\r\n  },\r\n  topicCont: {\r\n    background: \"#EFF5F8\",\r\n    flex: 1,\r\n    padding: \"1rem\",\r\n  },\r\n  subTopicCont: {\r\n    marginLeft: \"2rem\",\r\n  },\r\n}));\r\n\r\nconst ShowSelectionContainer = ({ data }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [currentSubject, setCurrentSubject] = useState(null);\r\n  const [currentTopic, setCurrentTopic] = useState(null);\r\n  const [currentSubTopic, setCurrentSubTopic] = useState(null);\r\n  const [subjectDatas, setSubjectDatas] = useState([]);\r\n\r\n  const [subjectsId, setSubjectsId] = useState();\r\n\r\n  //when click on back , removes selected option\r\n  useEffect(() => {\r\n    dispatch(questionActions.removeSelectedAllSubject());\r\n    dispatch(questionActions.removeSelectedAllTopic());\r\n    dispatch(questionActions.removeSelectedAllSubTopic());\r\n  }, []);\r\n\r\n  // const userContext = useContext(UserContext);\r\n\r\n  console.log(\"getvdata  :: \", data);\r\n\r\n  const handleCurrentSubject = (id) => {\r\n    setCurrentSubject(id);\r\n  };\r\n  const handleCurrentTopic = (id) => {\r\n    setCurrentTopic(id);\r\n  };\r\n\r\n  const handleCurrentSubTopic = (id) => {\r\n    setCurrentSubTopic(id);\r\n  };\r\n\r\n  const { selectedSubjects, selectedTopics, selectedSubTopics } = useSelector(\r\n    questionSelectors.getQuestionMetaData\r\n  );\r\n\r\n  const handleSubjectChange = (id, checked) => {\r\n    checked\r\n      ? dispatch(questionActions.setSelectedSubject(id))\r\n      : dispatch(questionActions.removeSelectedSubject(id));\r\n  };\r\n  const handleTopicChange = (id, checked) => {\r\n    checked\r\n      ? dispatch(questionActions.setSelectedTopic(id))\r\n      : dispatch(questionActions.removeSelectedTopic(id));\r\n  };\r\n  const handleSubTopicChange = (id, checked) => {\r\n    checked\r\n      ? dispatch(questionActions.setSelectedSubTopic(id))\r\n      : dispatch(questionActions.removeSelectedSubTopic(id));\r\n  };\r\n\r\n  let subjectData = [];\r\n  const topics = useMemo(() => {\r\n    if (subjectDatas.length !== 0) {\r\n      subjectData.push(...subjectDatas);\r\n    }\r\n    if (!selectedSubjects || !data) return null;\r\n\r\n    const [subject] = data.filter((subject) => subject.id === currentSubject);\r\n    const [isSubjectExist] = subjectDatas.filter(\r\n      (subject) => subject.id === currentSubject\r\n    );\r\n\r\n    // pusdata.push(subject)\r\n    if (!subject) return null;\r\n    if (isSubjectExist) {\r\n      subjectData = [];\r\n      const [newSubject] = subjectDatas.map((subject) => {\r\n        return subjectDatas.filter((subject) => subject.id !== currentSubject);\r\n      });\r\n      subjectData.push(...newSubject);\r\n    } else {\r\n      subjectData.push(subject);\r\n    }\r\n    setSubjectDatas(subjectData);\r\n    // return subject.topics;\r\n  }, [data, currentSubject, selectedSubjects]);\r\n\r\n  // const getstate = state.map(data=> data\r\n\r\n  useDispatch(() => {\r\n    if (selectedSubjects && selectedSubjects) {\r\n      setSubjectsId(selectedSubjects);\r\n    }\r\n  }, [selectedSubjects]);\r\n\r\n  const subTopics = useMemo(() => {\r\n    if (!selectedSubjects || !selectedTopics || !data) return null;\r\n\r\n    const [subject] = data.filter((subject) => subject.id === currentSubject);\r\n    if (!subject) return null;\r\n\r\n    // console.log(\"subject :: \",subject);\r\n\r\n    const [topic] = subject.topics.filter((topic) => topic.id === currentTopic);\r\n    if (!topic) return null;\r\n\r\n    return topic.subTopics;\r\n  }, [data, selectedSubjects, selectedTopics, currentSubject, currentTopic]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.subjectsCont}>\r\n        {data.map((subject) => {\r\n          console.log(subject, \"<<<<item\");\r\n          return (\r\n            <div\r\n              className={classes.checkbox}\r\n              style={{\r\n                background: selectedSubjects.includes(subject.id)\r\n                  ? \"#EFF5F8\"\r\n                  : \"white\",\r\n              }}\r\n              key={subject.id}\r\n            >\r\n              <Checkbox\r\n                checked={selectedSubjects.includes(subject.id) ? true : false}\r\n                onChange={(e) => {\r\n                  handleSubjectChange(subject.id, e.target.checked);\r\n                  handleCurrentSubject(subject.id);\r\n                }}\r\n                name={subject.id}\r\n              />\r\n              <Typography>\r\n                {/* {subject.title} {subject.title == \"Bhushan\" ? \"   (1)\" : \"\"} */}\r\n                {subject.title} {`(${subject.topics.length})`}\r\n              </Typography>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className={classes.topicCont}>\r\n        {subjectDatas?.map((topics) =>\r\n          topics?.topics.map((topic) => (\r\n            <div key={topic.id}>\r\n              <div className={classes.checkbox} key={topic.id}>\r\n                <Checkbox\r\n                  checked={selectedTopics.includes(topic.id) ? true : false}\r\n                  onChange={(e) => {\r\n                    handleTopicChange(topic.id, e.target.checked);\r\n                    handleCurrentTopic(topic.id);\r\n                  }}\r\n                  name={topic}\r\n                />\r\n                <Typography>\r\n                  {topic.title} ({topic?.subTopics?.length})\r\n                </Typography>\r\n                <div style={{ flex: 1 }} />\r\n\r\n                {currentTopic !== topic.id ? (\r\n                  <AddIcon style={{ color: \"#BFBFBF\" }} />\r\n                ) : (\r\n                  <RemoveIcon style={{ color: \"#F23A5E\" }} />\r\n                )}\r\n              </div>\r\n              <Collapse\r\n                in={currentTopic === topic.id}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n              >\r\n                <div className={classes.subTopicCont}>\r\n                  {topic.subTopics?.map((subTopic) => (\r\n                    <div className={classes.checkbox} key={subTopic.id}>\r\n                      <Checkbox\r\n                        checked={\r\n                          selectedSubTopics.includes(subTopic.id) ? true : false\r\n                        }\r\n                        onChange={(e) => {\r\n                          handleSubTopicChange(subTopic.id, e.target.checked);\r\n                          handleCurrentSubTopic(subTopic.id);\r\n                        }}\r\n                        name={subTopic.id}\r\n                      />\r\n                      <Typography>{subTopic.title}</Typography>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Collapse>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Practice = () => {\r\n  const packageData = [\r\n    {\r\n      name: \"Package 1\",\r\n      totalQuestions: 40,\r\n    },\r\n    {\r\n      name: \"Package 1\",\r\n      totalQuestions: 40,\r\n    },\r\n    {\r\n      name: \"Package 1\",\r\n      totalQuestions: 40,\r\n    },\r\n    {\r\n      name: \"Package 1\",\r\n      totalQuestions: 40,\r\n    },\r\n    {\r\n      name: \"Package 1\",\r\n      totalQuestions: 40,\r\n    },\r\n    {\r\n      name: \"Package 1\",\r\n      totalQuestions: 40,\r\n    },\r\n    {\r\n      name: \"Package 1\",\r\n      totalQuestions: 40,\r\n    },\r\n  ];\r\n\r\n  const UserData = useSelector((state) => state.auth);\r\n\r\n  console.log(UserData, \"<<<user Data\");\r\n\r\n  const [testExists, setTestExists] = useState(async () => {\r\n    const res = await api.get(\"question/testExists\");\r\n    const data = await res.data;\r\n    return data.exists;\r\n  });\r\n\r\n  const [checked, setChecked] = useState([0]);\r\n  const [selectedPackage, setSelectedPackage] = useState(null);\r\n  const history = useHistory();\r\n  const [mode, setMode] = useState(\"LEARNING\");\r\n  const [total, setTotal] = useState(null);\r\n  const [filters, setFilters] = useState({\r\n    unused: true,\r\n    incorrect: false,\r\n    marked: false,\r\n    all: !testExists ? true : false,\r\n  });\r\n  const { selectedSubTopics } = useSelector(\r\n    questionSelectors.getQuestionMetaData\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const filterChangeHandler = (e) => {\r\n    const { id, checked } = e.target;\r\n    if (id === \"all\" && checked)\r\n      setFilters({\r\n        unused: checked,\r\n        incorrect: checked,\r\n        marked: checked,\r\n        all: checked,\r\n      });\r\n    else if (id === \"unused\")\r\n      setFilters({\r\n        ...filters,\r\n        unused: checked,\r\n        all: checked && filters.incorrect && filters.marked ? true : false,\r\n      });\r\n    else if (id === \"incorrect\")\r\n      setFilters({\r\n        ...filters,\r\n        incorrect: checked,\r\n        all: checked && filters.unused && filters.marked ? true : false,\r\n      });\r\n    else if (id === \"marked\")\r\n      setFilters({\r\n        ...filters,\r\n        marked: checked,\r\n        all: checked && filters.unused && filters.incorrect ? true : false,\r\n      });\r\n  };\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const [questionSelectionData, setQuestionSelectionData] = useState([]);\r\n  useEffect(async () => {\r\n    const { data } = await axios.get(`${BACKEND_URL}/api/v1/package`);\r\n    setQuestionSelectionData(data.data);\r\n    // consoel.log(data)\r\n  }, [dispatch]);\r\n\r\n  const minMaxValue = (e) => {\r\n    setTotal(e.target.value);\r\n  };\r\n  const handleSubmit = async () => {\r\n    localStorage.setItem(TOTAL_SELECTED_QUESTION, total);\r\n    localStorage.setItem(CURRENT_QUESTION, 1);\r\n\r\n    const { id, questionCount, title } = questionSelectionData[selectedPackage];\r\n    console.log(title, \"<<<title\");\r\n    localStorage.setItem(CURRENT_SELECTED_PACKAGE, id);\r\n\r\n    if (questionCount >= total) {\r\n      const { data } = await axios.post(\r\n        `${BACKEND_URL}/api/v1/package-test-result/add`,\r\n        {\r\n          test_name: title,\r\n          package: id,\r\n          mode: mode,\r\n          questions_details: [],\r\n          totalQuestion: total,\r\n          totalIncorrect: 0,\r\n          totalCorrect: 0,\r\n          totalUnanswered: 0,\r\n          totalMarked: 0,\r\n          totalTimeSpend: 0,\r\n          endTime: Date.now() + 60000 * total * 0.9,\r\n        },\r\n        {\r\n          headers: headers(),\r\n        }\r\n      );\r\n      if (data.statusCode == 200) {\r\n        localStorage.setItem(GENERATED_TEST_ID, data.data._id);\r\n        history.push(\"/user/test\");\r\n      }\r\n    } else {\r\n      alert(\"You can select maximum:\" + questionCount);\r\n    }\r\n  };\r\n\r\n  console.log(\"questionSelectionData :: \", questionSelectionData);\r\n\r\n  return (\r\n    <>\r\n      <UserNavigation />\r\n      <Container\r\n        maxWidth=\"xl\"\r\n        sx={{ textAlign: \"center\", margin: \"70px auto\" }}\r\n      >\r\n        <Typography\r\n          variant=\"h2\"\r\n          sx={{ fontSize: \"38px\", color: \"#434343\", fontWeight: \"bold\" }}\r\n        >\r\n          Choose your practice\r\n        </Typography>\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            background: \"#F1F1F1\",\r\n            borderRadius: \"58px\",\r\n            width: \"30%\",\r\n            margin: \"30px auto\",\r\n            padding: \"10px\",\r\n          }}\r\n        >\r\n          <div>\r\n            <RadioGroup\r\n              aria-label=\"mode\"\r\n              value={mode}\r\n              name=\"controlled-radio-buttons-group\"\r\n              row\r\n              onChange={(e) => setMode(e.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value=\"LEARNING\"\r\n                control={<Radio />}\r\n                label=\"Practice\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"TEST\"\r\n                onChange={(e) => setMode(e.target.value)}\r\n                control={<Radio />}\r\n                label=\"Test\"\r\n              />\r\n            </RadioGroup>\r\n          </div>\r\n        </Box>\r\n        {testExists ? (\r\n          <Box\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-evenly\",\r\n              width: \"50%\",\r\n              margin: \"30px auto\",\r\n            }}\r\n          >\r\n            {/* <div>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={filters.unused}\r\n                    onChange={(e) => filterChangeHandler(e)}\r\n                    id=\"unused\"\r\n                  />\r\n                }\r\n                label=\"Unused\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={filters.incorrect}\r\n                    onChange={(e) => filterChangeHandler(e)}\r\n                    id=\"incorrect\"\r\n                  />\r\n                }\r\n                label=\"Incorrect\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={filters.marked}\r\n                    onChange={(e) => filterChangeHandler(e)}\r\n                    id=\"marked\"\r\n                  />\r\n                }\r\n                label=\"Marked\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={filters.all}\r\n                    id=\"all\"\r\n                    onChange={(e) => filterChangeHandler(e)}\r\n                  />\r\n                }\r\n                label=\"All\"\r\n              />\r\n            </div> */}\r\n          </Box>\r\n        ) : null}\r\n\r\n        <hr />\r\n        <br />\r\n        <br />\r\n        <Typography\r\n          variant=\"h2\"\r\n          sx={{ fontSize: \"38px\", color: \"#434343\", fontWeight: \"bold\" }}\r\n        >\r\n          Select Questions From Functional Knowledge and Topic\r\n        </Typography>\r\n\r\n        <div></div>\r\n\r\n        {/* ************************************* */}\r\n        {/* {questionSelectionData ? (\r\n          <ShowSelectionContainer data={questionSelectionData} />\r\n        ) : null} */}\r\n\r\n        {/* ---- show packages */}\r\n        <div className=\"package-outer\">\r\n          {questionSelectionData.map((item, index) => {\r\n            return (\r\n              <PackageBox\r\n                index={index}\r\n                item={item}\r\n                setSelectedPackage={setSelectedPackage}\r\n                selectedPackage={selectedPackage}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {/* --- */}\r\n\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography>\r\n            Enter number of questions\r\n            <span style={{ color: \"red\" }}> *</span>\r\n          </Typography>\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <TextField\r\n              type=\"number\"\r\n              onChange={(e) => minMaxValue(e)}\r\n              // onChange={(e) => setTotal(e.target.value)}\r\n              size=\"small\"\r\n              sx={{ paddingLeft: \"1em\" }}\r\n              required\r\n              value={total}\r\n            />\r\n            {/* <Typography style={{color:\"red\"}}>Please enter 10 to 100</Typography> */}\r\n          </div>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography style={{ visibility: \"hidden\" }}>\r\n            Enter number of questions\r\n            <span style={{ color: \"red\" }}> *</span>\r\n          </Typography>\r\n          <Typography style={{ color: \"red\", paddingLeft: \"1em\" }}>\r\n            Please enter valid number 10 to 200\r\n          </Typography>\r\n        </Box>\r\n        {/* {total > 0 && total < 100 && selectedSubTopics.length > 0 ? ( */}\r\n        {total > 0 && total < 100 ? (\r\n          // <NavLink to=\"/user/test\">\r\n          <Button\r\n            onClick={() => {\r\n              if (selectedPackage == null) {\r\n                alert(\"Select PAckage\");\r\n              }\r\n              handleSubmit();\r\n              // dispatch(setSubmittedTestResultEmpty());\r\n              // dispatch(setQuestionFilter({ filters, mode, total }));\r\n              // dispatch(fetchQuestions({ page: 1 }));\r\n            }}\r\n            sx={{ color: \"white\", \"&:hover\": { backgroundColor: \"#f23a5e\" } }}\r\n          >\r\n            Start\r\n          </Button>\r\n        ) : (\r\n          // </NavLink>\r\n          <Button disabled>Start</Button>\r\n        )}\r\n      </Container>\r\n      <UserFooter />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Practice;\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\TandC.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\Privacy-policy.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\User\\PreviousTest.js",["667","668"],"import { Container, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport UserNavigation from \"../../component/UserNavigation\";\r\nimport UserFooter from \"../../component/UserFooter\";\r\nimport api from \"../../../infrastructure/utils/axios\";\r\nimport { BACKEND_URL } from \"../../Constant\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  thead: {\r\n    fontWeight: 600,\r\n    fontSize: \"20px\",\r\n    lineHeight: \"24px\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n});\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"#F23A5E\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nfunction createData(score, testName, date, mode, testResult) {\r\n  return { score, testName, date, mode, testResult };\r\n}\r\n\r\nconst calculateScpre = (correct, question) => {\r\n  const score = (+correct * 100) / question;\r\n  console.log(score, \"<<<this is score\");\r\n  return `${score} %`;\r\n};\r\n\r\nexport default function PreviousTest() {\r\n  const [tests, setTests] = useState([]);\r\n  const classes = useStyles();\r\n  const UserData = useSelector((state) => state.auth);\r\n  const { userId } = UserData.user;\r\n  useEffect(() => {\r\n    console.log(UserData);\r\n    api\r\n      .get(`${BACKEND_URL}/api/v1/package-test-result/previous`, {\r\n        params: { user: userId },\r\n      })\r\n      .then((res) => setTests([...res.data.data].reverse()));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <UserNavigation />\r\n      {/* // <section style={{ margin: \"100px auto\" ,width:'80%'}}> */}\r\n      <Container maxWidth=\"xl\" style={{ margin: \"100px auto\" }}>\r\n        <Typography\r\n          variant=\"h4\"\r\n          style={{ color: \"#434343\", fontSize: \"27px\", margin: \"40px 0\" }}\r\n        >\r\n          Previous Tests\r\n        </Typography>\r\n        <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell sx={{ fontSize: \"20px\" }}>\r\n                  Score\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  Test\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  Date\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  Mode\r\n                </StyledTableCell>\r\n                {/* <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  Test Result\r\n                </StyledTableCell> */}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {tests.map((test) => (\r\n                <StyledTableRow key={test.score}>\r\n                  <StyledTableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className={classes.row}\r\n                    style={{ fontSize: \"16px\" }}\r\n                  >\r\n                    {calculateScpre(test.totalCorrect, test.totalQuestion)}\r\n                    {/* 55 */}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    <Link\r\n                      to={`/user/result/${test?._id}`}\r\n                      style={{ textDecoration: \"none\" }}\r\n                    >\r\n                      {test?.package?.title}\r\n                    </Link>\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test[\"createdAt\"].slice(0, 10)}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test.mode}\r\n                  </StyledTableCell>\r\n                  {/* <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test.totalScore < 10\r\n                      ? \"Poor\"\r\n                      : 10 < test.totalScore && test.totalScore <= 50\r\n                      ? \"Good\"\r\n                      : \"Excellent\"}\r\n                  </StyledTableCell> */}\r\n                  {/* </span> */}\r\n                </StyledTableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Container>\r\n      <UserFooter />\r\n    </>\r\n  );\r\n}\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\User\\Explanation.js",["669","670","671","672","673","674","675","676"],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\User\\FknTopics.js",["677","678","679"],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\User\\Test.js",["680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726"],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\User\\Result.js",["727","728","729","730","731","732","733","734","735","736","737","738","739","740"],"import { Box, Typography, styled, IconButton } from \"@mui/material\";\r\nimport { ArrowRight as ArrowIcon } from \"@mui/icons-material\";\r\nimport ProgressBar from \"../../component/ProgressBar\";\r\nimport UserNavigation from \"../../component/UserNavigation\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport api from \"../../../infrastructure/utils/axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setQuestionDetail } from \"../../../application/reducers/explanationSlice\";\r\nimport axios from \"axios\";\r\nimport { BACKEND_URL } from \"../../Constant\";\r\n\r\nconst styles = {\r\n  container: {\r\n    height: \"82vh\",\r\n    width: \"100vw\",\r\n    position: \"fixed\",\r\n    top: \"10vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  navbarContainer: {\r\n    backgroundColor: \"primary.main\",\r\n    width: \"100vw\",\r\n    height: \"10vh\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n};\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"#F23A5E\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <Box sx={styles.navbarContainer}>\r\n      <Box sx={styles.logoContainer}>\r\n        {/* <img src={Logo} alt=\"\" style={styles.logo} /> */}\r\n      </Box>\r\n      <Box sx={styles.navlinksContainer}></Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function Result() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [overallData, setOverallData] = useState({});\r\n  const [resultData, setResultData] = useState({});\r\n  const [packageResult, setpackageResult] = useState({});\r\n  const [results, setResults] = useState([]);\r\n  const { id } = useParams();\r\n  // useEffect(() => {\r\n  //   api\r\n  //     .get(`testResult/${id}`)\r\n  //     .then((res) => {\r\n  //       console.log(res.data.data, \"<<<<this is all data\");\r\n  //       setResultData(res.data.data);\r\n  //       return res.data.data;\r\n  //     })\r\n  //     .then((data) => {\r\n  //       setOverallData({ score: data.totalScore, mode: data.mode });\r\n  //       return data.questions_details;\r\n  //     })\r\n  //     .then((results) => {\r\n  //       // console.log(results, \"<<<<results\");\r\n  //       setResults([...results]);\r\n  //     });\r\n  // }, []);\r\n\r\n  useEffect(async () => {\r\n    const { data } = await axios.get(\r\n      `${BACKEND_URL}/api/v1/package-test-result/${id}`\r\n    );\r\n    console.log(data.data);\r\n    setpackageResult(data.data);\r\n  }, []);\r\n\r\n  const calculateScpre = () => {\r\n    const score =\r\n      (+packageResult.totalCorrect * 100) / packageResult.totalQuestion;\r\n    console.log(score, \"<<<this is score\");\r\n    return score;\r\n  };\r\n\r\n  console.log(\"results :: \", results);\r\n  return (\r\n    <div>\r\n      <UserNavigation />\r\n      <div style={styles.container}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            height: \"20vh\",\r\n            justifyContent: \"space-around\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div>\r\n            <Typography>Your Score</Typography>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              {/* <ProgressBar progress={packageResult.totalScore} /> */}\r\n              <ProgressBar progress={calculateScpre()} />\r\n              <Typography>{calculateScpre()}</Typography>\r\n              {/* <Typography>{`${Math.ceil(\r\n                packageResult[\"totalScore\"]\r\n              )} %`}</Typography> */}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <Typography fontWeight=\"bold\">Test Setting</Typography>\r\n            <Typography>Mode: {packageResult.mode}</Typography>\r\n          </div>\r\n        </div>\r\n\r\n        <Table sx={{ maxWidth: 1200 }} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell sx={{ fontSize: \"20px\" }}>\r\n                SL No.\r\n              </StyledTableCell>\r\n              <StyledTableCell sx={{ fontSize: \"20px\" }} align=\"left\">\r\n                Question\r\n              </StyledTableCell>\r\n              <StyledTableCell sx={{ fontSize: \"20px\" }} align=\"left\">\r\n                {/* Question */}\r\n                Answer\r\n              </StyledTableCell>\r\n              <StyledTableCell\r\n                sx={{ fontSize: \"20px\" }}\r\n                align=\"left\"\r\n              ></StyledTableCell>\r\n\r\n              {packageResult.mode === \"TEST\" ? (\r\n                <StyledTableCell sx={{ fontSize: \"20px\" }} align=\"left\">\r\n                  Time Spent\r\n                </StyledTableCell>\r\n              ) : null}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {packageResult?.questions_details?.map((result, idx) => (\r\n              <StyledTableRow key={result?.name}>\r\n                <StyledTableCell\r\n                  sx={{ fontSize: \"16px\" }}\r\n                  component=\"th\"\r\n                  scope=\"row\"\r\n                >\r\n                  {idx + 1}\r\n                </StyledTableCell>\r\n                <StyledTableCell sx={{ fontSize: \"16px\" }} align=\"left\">\r\n                  <div\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: result?.question?.questionTitle,\r\n                    }}\r\n                  />\r\n                </StyledTableCell>\r\n                <StyledTableCell sx={{ fontSize: \"16px\" }} align=\"left\">\r\n                  {!result.isMarked\r\n                    ? \"Unanswered\"\r\n                    : result?.isCorrect == true\r\n                    ? \"Correct\"\r\n                    : \"Incorrect\"}\r\n                </StyledTableCell>\r\n                <StyledTableCell sx={{ fontSize: \"16px\" }} align=\"left\">\r\n                  {!result?.timeSpend ? (\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        // dispatch(setQuestionDetail(result?.question));\r\n                        dispatch(\r\n                          setQuestionDetail({\r\n                            allData: packageResult.questions_details,\r\n                            currQuestion: idx,\r\n                          })\r\n                        );\r\n                        history.push(\"/user/explanation\");\r\n                      }}\r\n                    >\r\n                      <ArrowIcon color=\"primary\" />\r\n                    </IconButton>\r\n                  ) : null}\r\n                </StyledTableCell>\r\n                {result?.timeSpend ? (\r\n                  <StyledTableCell sx={{ fontSize: \"16px\" }} align=\"center\">\r\n                    {result?.timeSpend}s\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        // dispatch(setQuestionDetail(result?.question));\r\n\r\n                        dispatch(\r\n                          setQuestionDetail({\r\n                            allData: packageResult.questions_details,\r\n                            currQuestion: idx,\r\n                          })\r\n                        );\r\n                        history.push(\"/user/explanation\");\r\n                      }}\r\n                    >\r\n                      <ArrowIcon color=\"primary\" />\r\n                    </IconButton>\r\n                  </StyledTableCell>\r\n                ) : null}\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          {packageResult?.questions_details?.length == 0 &&\r\n            \"No Question answered\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\User\\TestPerfomance.js",["741","742","743"],"import { Container, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport UserNavigation from \"../../component/UserNavigation\";\r\nimport UserFooter from \"../../component/UserFooter\";\r\nimport api from \"../../../infrastructure/utils/axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { BACKEND_URL } from \"../../Constant\";\r\n\r\n// const useStyles = makeStyles({\r\n//   thead: {\r\n//     fontWeight: 600,\r\n//     fontSize: \"20px\",\r\n//     lineHeight: \"24px\",\r\n//     color: \"#FFFFFF\",\r\n//   },\r\n// });\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: \"#F23A5E\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nfunction createData(\r\n  ViewScore,\r\n  name,\r\n  created,\r\n  Correct,\r\n  Incorrect,\r\n  Unanswered,\r\n  Qlist\r\n) {\r\n  return { ViewScore, name, created, Correct, Incorrect, Unanswered, Qlist };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"View Result\", \"Some Test 1\", \"15th June, 2021\", 10, 5, 70, 33),\r\n  createData(\"View Result\", \"Some Test 1\", \"15th June, 2021\", 10, 5, 70, 33),\r\n  createData(\"View Result\", \"Some Test 1\", \"15th June, 2021\", 10, 5, 70, 33),\r\n  createData(\"View Result\", \"Some Test 1\", \"15th June, 2021\", 10, 5, 70, 33),\r\n  createData(\"View Result\", \"Some Test 1\", \"15th June, 2021\", 10, 5, 70, 33),\r\n  createData(\"View Result\", \"Some Test 1\", \"15th June, 2021\", 10, 5, 70, 33),\r\n  createData(\"View Result\", \"Some Test 1\", \"15th June, 2021\", 10, 5, 70, 33),\r\n];\r\n\r\nexport default function TestPerfomance() {\r\n  const [tests, setTests] = useState([]);\r\n  useEffect(async () => {\r\n    // api.get(\"testResult/all\").then((res) => setTests([...res.data.data]));\r\n    const { data } = await axios.get(\r\n      `${BACKEND_URL}/api/v1/package-test-result/all`\r\n    );\r\n    console.log(data.data);\r\n    setTests(data.data);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <UserNavigation />\r\n      <Container maxWidth=\"xl\" style={{ margin: \"100px auto\" }}>\r\n        <Typography\r\n          variant=\"h4\"\r\n          style={{ color: \"#434343\", fontSize: \"27px\", margin: \"40px 0\" }}\r\n        >\r\n          Test Performance\r\n        </Typography>\r\n        <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell sx={{ fontSize: \"20px\" }}>\r\n                  View\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  Name\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  created\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  Correct\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  In Correct\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  Unanswered\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\" sx={{ fontSize: \"20px\" }}>\r\n                  No of Que\r\n                </StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {tests?.map((test) => (\r\n                <StyledTableRow key={test.ViewScore}>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    <NavLink\r\n                      to={`/user/result/${test[\"_id\"]}`}\r\n                      style={{ color: \"#F23A5E\", fontSize: \"16px\" }}\r\n                    >\r\n                      View Result\r\n                    </NavLink>\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test.test_name}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test[\"createdAt\"].slice(0, 10)}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test.totalCorrect}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test.totalIncorrect}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test.totalUnanswered}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\" style={{ fontSize: \"16px\" }}>\r\n                    {test.totalQuestion}\r\n                  </StyledTableCell>\r\n                </StyledTableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Container>\r\n      <UserFooter />\r\n    </>\r\n  );\r\n}\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\subscriptions\\Subscriptions.js",["744"],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\pages\\User\\Dashboard.js",["745","746","747","748","749","750"],"import React from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { useSelector } from \"react-redux\";\r\n//import PieChart from \"../../component/PieChart\";\r\nimport DoughnutChart from \"../../component/DoughnutChart\";\r\nimport UserNavigation from \"../../component/UserNavigation\";\r\nimport UserFooter from \"../../component/UserFooter\";\r\nimport { useState, useEffect } from \"react\";\r\nimport api from \"../../../infrastructure/utils/axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    margin: \"50px auto\",\r\n    background: \"#EFF5F8\",\r\n    height: \"auto\",\r\n    borderRadius: \"16px\",\r\n    padding: \"50px 50px 0 50px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    width: \"80%\",\r\n    [theme.breakpoints.down(500)]: {\r\n      width: \"80%\",\r\n      padding: \"10px\",\r\n    },\r\n  },\r\n  Textcontainer: {\r\n    maxWidth: \"50%\",\r\n    [theme.breakpoints.down(500)]: {\r\n      maxWidth: \"100%\",\r\n      padding: \"30px 10px \",\r\n    },\r\n  },\r\n  QuestionCard: {\r\n    border: \"1px solid #BABABA\",\r\n    boxSizing: \"border-box\",\r\n    borderRadius: \"16px\",\r\n    width: \"300px\",\r\n    height: \"auto\",\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n    \"&:hover\": {\r\n      boxShadow: \"0px 14px 16px -8px rgba(208, 2, 27, 0.25)\",\r\n    },\r\n  },\r\n  QbankUsage: {\r\n    background: \"#FFFFFF\",\r\n    border: \"1px solid #BABABA\",\r\n    boxSizing: \"border-box\",\r\n    boxShadow: \"0px 0px 4px rgba(0, 0, 0, 0.25)\",\r\n    borderRadius: \"16px\",\r\n    padding: \"20px\",\r\n    height: \"auto\",\r\n    width: \"450px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    [theme.breakpoints.down(500)]: {\r\n      width: \"100%\",\r\n      flexWrap: \"wrap\",\r\n      margin: \"30px auto\",\r\n    },\r\n  },\r\n  span: {\r\n    color: \"#F23A5E\",\r\n    fontSize: \"16px\",\r\n    background: \"#FCC9C9\",\r\n    borderRadius: \"5px\",\r\n    padding: \"5px 10px\",\r\n    marginLeft: \"5px\",\r\n  },\r\n  TestCount: {\r\n    width: \"400px\",\r\n    [theme.breakpoints.down(500)]: {\r\n      width: \"100%\",\r\n      flexWrap: \"wrap\",\r\n      margin: \"auto\",\r\n    },\r\n  },\r\n  piechart: {\r\n    width: \"50%\",\r\n    [theme.breakpoints.down(500)]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  scoreContainer: {\r\n    width: \"80%\",\r\n    margin: \"0 auto\",\r\n  },\r\n}));\r\n\r\nconst QuestionCard = (props) => {\r\n  const classes = useStyles();\r\n  const [userData, setUserData] = useState(\"\");\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { userId } = user;\r\n\r\n  console.log(\"userData \", userData);\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      api\r\n        .get(`/dashboard/getusedinfo/${userId}`)\r\n        .then((res) => setUserData(res.data.data));\r\n    }\r\n  }, [userId, userData]);\r\n\r\n  const QuestionCardItem = [\r\n    {\r\n      heading: \"Count Questions \",\r\n      count: userData && userData.question_detail.count,\r\n      // reports: \"2.6% then last week \",\r\n    },\r\n    {\r\n      heading: \" used Questions\",\r\n      count: userData && userData.question_detail.used,\r\n      // reports: \"2.6% then last week \",\r\n    },\r\n    // {\r\n    //   // heading: \" Unused Questions \",\r\n    //   // count: userData && userData.question_detail.unused,\r\n    //   // count: 1,\r\n    //   // reports: \"2.6% then last week \",\r\n    // },\r\n  ];\r\n\r\n  console.log(\"QuestionCardItem :: \", QuestionCardItem);\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" justifyContent=\"space-evenly\" flexWrap=\"wrap\">\r\n        {/* {QuestionCardItem.map((item, i) => (\r\n          <div key={i}>\r\n            <Box className={classes.QuestionCard}>\r\n              <div>\r\n                <Typography style={{ color: \"#000000\", fontSize: \"18px\" }}>\r\n                  {item.heading}\r\n                </Typography>\r\n                <Typography style={{ color: \"#F23A5E\", fontSize: \"38px\" }}>\r\n                  <b>{item.count}</b>\r\n                </Typography>\r\n          \r\n              </div>\r\n              <div>\r\n             \r\n              </div>\r\n            </Box>\r\n          </div>\r\n        ))} */}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nconst QbankUsageItem = [\r\n  {\r\n    title: \"Used Questions\",\r\n    object: \"used\",\r\n  },\r\n  // {\r\n  //   title: \"Unused Questions\",\r\n  //   object: \"unused\",\r\n  // },\r\n  {\r\n    title: \"Total Questions\",\r\n    object: \"count\",\r\n  },\r\n];\r\nconst QbankUsage = ({ questionData }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Box className={classes.QbankUsage} style={{ visibility: \"hidden\" }}>\r\n        {/* <img src={require(\"../../assets/percent.png\").default} alt=\"\" /> */}\r\n        <div>\r\n          {/* <Typography style={{ color: \"#000\", fontSize: \"26px\" }}>\r\n            Q Bank Usage\r\n          </Typography> */}\r\n          <br />\r\n          {questionData &&\r\n            QbankUsageItem.map((item, i) => (\r\n              <div key={i}>\r\n                <Box\r\n                  display=\"flex\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"space-around\"\r\n                >\r\n                  <Typography\r\n                    style={{\r\n                      color: \"#000000\",\r\n                      fontSize: \"18px\",\r\n                      marginRight: \"10px\",\r\n                    }}\r\n                  >\r\n                    {item.title}\r\n                  </Typography>\r\n                  <Typography className={classes.span}>\r\n                    <b>{questionData[item.object]}</b>\r\n                  </Typography>\r\n                </Box>\r\n                <hr />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TestCountItem = [\r\n  {\r\n    title: \"Test Created \",\r\n    object: \"test_created\",\r\n  },\r\n  {\r\n    title: \" Test Completed\",\r\n    object: \"test_completed\",\r\n  },\r\n  // {\r\n  //   title: \"Suspended Test \",\r\n  //   score: \"86\",\r\n  // },\r\n];\r\nconst TestCount = ({ testData }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Box className={classes.QbankUsage} style={{ visibility: \"hidden\" }}>\r\n        <div>\r\n          <Typography style={{ color: \"#000\", fontSize: \"26px\" }}>\r\n            Test Count\r\n          </Typography>\r\n          <br />\r\n          {testData &&\r\n            TestCountItem.map((item, i) => (\r\n              <div key={i} className={classes.TestCount}>\r\n                <Box\r\n                  display=\"flex\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"space-between\"\r\n                  style={{}}\r\n                >\r\n                  <Typography className={classes.span}>\r\n                    <b>{testData[item.object]}</b>\r\n                  </Typography>\r\n                  <Typography style={{ color: \"#000000\", fontSize: \"18px\" }}>\r\n                    {item.title}\r\n                  </Typography>\r\n                  <Typography className={classes.span}>\r\n                    <b>{testData[item.object]}</b>\r\n                  </Typography>\r\n                </Box>\r\n                <hr />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UserDashboard = () => {\r\n  const [dashboardData, setDashboardData] = useState();\r\n  const classes = useStyles();\r\n  const {\r\n    user: { name },\r\n  } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"/dashboard/getusedinfo\")\r\n      .then((res) => setDashboardData(res.data.data));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <UserNavigation />\r\n      <section\r\n        className={classes.container}\r\n        style={{ display: \"flex\", flexWrap: \"wrap\" }}\r\n      >\r\n        <Box>\r\n          <img src={require(\"../../assets/mblgraph.png\").default} alt=\"\" />\r\n        </Box>\r\n        <Box className={classes.Textcontainer}>\r\n          <Typography\r\n            variant=\"h3\"\r\n            gutterBottom\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: \"35px\",\r\n              color: \"#000000\",\r\n            }}\r\n          >\r\n            Congratulation\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h3\"\r\n            gutterBottom\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: \"37px\",\r\n              color: \"#000000\",\r\n            }}\r\n          >\r\n            {name}\r\n          </Typography>\r\n          <br />\r\n          <Typography\r\n            variant=\"h5\"\r\n            gutterBottom\r\n            style={{\r\n              fontWeight: 500,\r\n              fontSize: \"26px\",\r\n              lineHeight: \"34px\",\r\n              color: \"#505050\",\r\n            }}\r\n          >\r\n            Your Courses Reached Our Target Milestone\r\n          </Typography>\r\n          <br />\r\n          <Typography\r\n            variant=\"h6\"\r\n            gutterBottom\r\n            style={{\r\n              fontSize: \"16px\",\r\n              color: \"#505050\",\r\n            }}\r\n          >\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Tempore aut\r\n            labore sequi vitae dolorem. Maiores expedita fugiat omnis suscipit\r\n            architecto.\r\n          </Typography>\r\n        </Box>\r\n      </section>\r\n      <section style={{ background: \"#F7F7F7\", padding: \"50px 0\" }}>\r\n        <QuestionCard />\r\n      </section>\r\n\r\n      {/* Score Pannel */}\r\n      {/* <section className={classes.scoreContainer}>\r\n        <br />\r\n        <br />\r\n        <Typography variant=\"h4\" style={{}}>\r\n          Your Score\r\n        </Typography>\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            flexWrap: \"wrap\",\r\n            padding: \"50px 0\",\r\n          }}\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            justifyContent=\"space-around\"\r\n          >\r\n            <QbankUsage questionData={dashboardData?.question_detail} />\r\n            <TestCount testData={dashboardData?.test_detail} />\r\n          </Box>\r\n          <Box className={classes.piechart}>\r\n            <PieChart /> \r\n            <DoughnutChart />\r\n          </Box>\r\n        </Box>\r\n      </section> */}\r\n      <UserFooter />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\UI\\UiAlert.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\application\\reducers\\uiSlice.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\application\\reducers\\questionSlice.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\application\\reducers\\explanationSlice.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\application\\reducers\\authSlice.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\application\\reducers\\testSlice.js",["751","752"],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\infrastructure\\services\\authService.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\infrastructure\\services\\questionService.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\ProgressBar.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\UserNavigation.js",["753","754"],"// import * as React from 'react';\r\n// import AppBar from '@mui/material/AppBar';\r\n// import Box from '@mui/material/Box';\r\n// import Toolbar from '@mui/material/Toolbar';\r\n// import Typography from '@mui/material/Typography';\r\n// import { makeStyles } from '@mui/styles';\r\n// import { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n\r\n// navLinks: {\r\n//     fontFamily: \"Montserrat\",\r\n//     fontStyle: \"normal\",\r\n//     fontWeight: \"bolder\",\r\n//     fontSize: \"20px\",\r\n//     lineHeight: \"24px\",\r\n//     color: \"#FFFFFF\",\r\n//     cursor: 'pointer',\r\n//     \"&:hover\": {\r\n//         color: \"#FFFFFF\",\r\n//         borderBottom: '5px solid #ffff',\r\n//     },\r\n\r\n// }\r\n// }));\r\n\r\n// const Navigation = () => {\r\n//     const classes = useStyles();\r\n\r\n//     return (\r\n// <Box sx={{ flexGrow: 1 }}>\r\n//     <AppBar position=\"static\" style={{\r\n//         background: \"#F23A5E\"\r\n//     }}>\r\n//         <Toolbar>\r\n//             <Box sx={{ flexGrow: 1 }}>\r\n//                 <img src={require(\"../Assets/dlogo.png\").default} alt=\"\" />\r\n//             </Box>\r\n//             <Typography className={classes.navLinks} sx={{ mr: 5 }}><b>Practice</b></Typography>\r\n//             <Typography className={classes.navLinks} sx={{ mr: 5 }}><b>Previous Tests</b></Typography>\r\n//             <Typography className={classes.navLinks} sx={{ mr: 5 }}><b>Test Performance</b></Typography>\r\n//             <Typography className={classes.navLinks} sx={{ mr: 5 }}><b>Topic Performance</b></Typography>\r\n//             <Typography className={classes.navLinks} sx={{ mr: 5 }}><b>Notes</b></Typography>\r\n//         </Toolbar>\r\n//     </AppBar>\r\n// </Box>\r\n\r\n//     )\r\n// }\r\n\r\n// export default Navigation\r\n\r\nimport * as React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Drawer,\r\n  useTheme,\r\n  useMediaQuery,\r\n  IconButton,\r\n  Box,\r\n  Typography,\r\n  styled,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useState } from \"react\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\r\n// import logo from \"../../assets/logo.png\";\r\n// import { Menu as MenuIcon } from \"@material-ui/icons\";\r\n//   import closeIcon from \"../../assets/closeIcon.png\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../application/reducers/authSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  hamburger: {\r\n    color: \"white\",\r\n    marginLeft: \"auto\",\r\n  },\r\n  sidedrawer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"center\",\r\n    rowGap: \"3rem\",\r\n    padding: \"2rem\",\r\n    width: \"90vw\",\r\n    height: \"100vh\",\r\n    background: \"#F23A5E\",\r\n    position: \"relative\",\r\n    padding: \"10px 0 0 3rem\",\r\n  },\r\n  closeIcon: {\r\n    width: \"3rem\",\r\n    height: \"3rem\",\r\n    marginLeft: \"auto\",\r\n    position: \"absolute\",\r\n    right: \"1rem\",\r\n    top: \"1rem\",\r\n    cursor: \"pointer\",\r\n    color: \"#fff\",\r\n  },\r\n  navLinks: {\r\n    fontFamily: \"Montserrat\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"bolder\",\r\n    fontSize: \"20px\",\r\n    lineHeight: \"24px\",\r\n    color: \"#FFFFFF\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"#FFFFFF\",\r\n      borderBottom: \"5px solid #ffff\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomNavLink = styled(NavLink)({\r\n  textDecoration: \"none\",\r\n});\r\n\r\nexport default function Navigation() {\r\n  const [loginAnchorEl, setLoginAnchorEl] = React.useState(null);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { name } = useSelector((state) => state.auth.user);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(1075));\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleDrawer = (bool) => () => {\r\n    setOpen(bool);\r\n  };\r\n\r\n  const handleMenuLogin = (event) => {\r\n    setLoginAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseLogin = () => {\r\n    setLoginAnchorEl(null);\r\n  };\r\n\r\n  const styles = {\r\n    navLinks: {\r\n      fontFamily: \"Montserrat\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: \"regular\",\r\n      fontSize: \"15.5px\",\r\n      lineHeight: \"24px\",\r\n      color: \"#FFFFFF\",\r\n      cursor: \"pointer\",\r\n      \"&:hover\": {\r\n        color: \"#FFFFFF\",\r\n        borderBottom: \"5px solid #ffff\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"static\"\r\n        component=\"header\"\r\n        style={{ background: \"#F23A5E\" }}\r\n      >\r\n        <Toolbar>\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <NavLink to=\"/\">\r\n              <img src={require(\"../assets/dlogo.png\").default} alt=\"\" />\r\n            </NavLink>\r\n          </Box>\r\n          {!isMobile && (\r\n            <Toolbar>\r\n              <CustomNavLink to=\"/user/dashboard\">\r\n                <Typography sx={{ mr: 5, ...styles.navLinks }}>\r\n                  <b>Dashboard</b>\r\n                </Typography>\r\n              </CustomNavLink>\r\n              <CustomNavLink to=\"/user/practice\">\r\n                <Typography sx={{ mr: 5, ...styles.navLinks }}>\r\n                  <b>Practice</b>\r\n                </Typography>\r\n              </CustomNavLink>\r\n              <CustomNavLink to=\"/user/previous-tests\">\r\n                <Typography sx={{ mr: 5, ...styles.navLinks }}>\r\n                  <b>Previous Tests</b>\r\n                </Typography>\r\n              </CustomNavLink>\r\n              {/* <CustomNavLink to=\"/user/test-performance\">\r\n                <Typography sx={{ mr: 5, ...styles.navLinks }}>\r\n                  <b>Test Performance</b>\r\n                </Typography>\r\n              </CustomNavLink> */}\r\n              {/* <CustomNavLink to=\"/user/topic-performance\">\r\n                <Typography sx={{ mr: 5, ...styles.navLinks }}>\r\n                  <b>Topic Performance</b>\r\n                </Typography>\r\n              </CustomNavLink> */}\r\n              {/* <CustomNavLink to=\"/user/notes\">\r\n                <Typography sx={{ mr: 5, ...styles.navLinks }}>\r\n                  <b>Notes</b>\r\n                </Typography>\r\n              </CustomNavLink> */}\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <Typography fontWeight=\"500\">{name}</Typography>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMenuLogin}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircleIcon />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={loginAnchorEl}\r\n                  anchorOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  open={Boolean(loginAnchorEl)}\r\n                  onClose={handleCloseLogin}\r\n                >\r\n                  {/* <MenuItem onClick={handleCloseLogin}>Profile</MenuItem> */}\r\n                  {/* <MenuItem onClick={() => history.push(\"/user/subscriptions\")}>\r\n                    Subscription\r\n                  </MenuItem> */}\r\n                  <MenuItem\r\n                    onClick={() => {\r\n                      handleCloseLogin();\r\n                      dispatch(logout());\r\n                    }}\r\n                  >\r\n                    Log out\r\n                  </MenuItem>\r\n                </Menu>\r\n              </div>\r\n            </Toolbar>\r\n          )}\r\n\r\n          {isMobile && (\r\n            <IconButton\r\n              className={classes.hamburger}\r\n              onClick={handleDrawer(true)}\r\n            >\r\n              <MenuIcon style={{ color: \"#fff\" }} />\r\n            </IconButton>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        anchor=\"right\"\r\n        onClose={handleDrawer(false)}\r\n        open={isMobile && open}\r\n      >\r\n        <Box className={classes.sidedrawer}>\r\n          <CloseIcon\r\n            className={classes.closeIcon}\r\n            onClick={handleDrawer(false)}\r\n          />\r\n          <Box>\r\n            <img src={require(\"../assets/dlogo.png\").default} alt=\"\" />\r\n          </Box>\r\n          <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n            <b>Practice</b>\r\n          </Typography>\r\n          <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n            <b>Previous Tests</b>\r\n          </Typography>\r\n          {/* <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n            <b>Test Performance</b>\r\n          </Typography>\r\n          <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n            <b>Topic Performance</b>\r\n          </Typography> */}\r\n          {/* <Typography className={classes.navLinks} sx={{ mr: 5 }}>\r\n            <b>Notes</b>\r\n          </Typography> */}\r\n        </Box>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\UserFooter.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\QuestionProgress.js",["755"],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\infrastructure\\utils\\axios.js",["756","757","758"],"import axios from \"axios\";\r\nimport { refreshToken } from \"../../application/reducers/authSlice\";\r\nimport { actions, ALERT_TYPES } from \"../../application/reducers/uiSlice\";\r\nimport store from \"../../application/store\";\r\nexport const headers = () => {\r\n  const auth = store.getState().auth;\r\n\r\n  return {\r\n    authorization: `Bearer ${auth.token.accessToken}`,\r\n  };\r\n};\r\n\r\nconst api = axios.create({\r\n  // baseURL: \"https://dental-world-api.herokuapp.com/api/v1\",\r\n  baseURL: \"https://dworld-back.herokuapp.com/api/v1\",\r\n  // baseURL: \"http://localhost:8000/api/v1\",\r\n});\r\n\r\napi.interceptors.request.use((request) => {\r\n  const auth = store.getState().auth;\r\n\r\n  if (auth.isAuth)\r\n    request.headers.Authorization = `Bearer ${auth.token.accessToken}`;\r\n  return request;\r\n});\r\n\r\n// api.interceptors.response.use(undefined, (error) => {\r\n//   // if there is an error and its status is 403 then logout user (till refresh token is unavailable)\r\n//   if (error.response?.status === 403) {\r\n//     store.dispatch(refreshToken()).catch((err) =>\r\n//       store.dispatch(\r\n//         actions.showAlert({\r\n//           type: ALERT_TYPES.INFO,\r\n//           message: \"You were inactive for a long time. Please signin again.\",\r\n//         })\r\n//       )\r\n//     );\r\n\r\n//     return Promise.reject(error);\r\n//   }\r\n\r\n//   console.log(error.response.data?.error);\r\n\r\n//   if (error.response?.status === 500) {\r\n//     error.message = \"Sorry, something went wrong in our server.\";\r\n//   } else {\r\n//     error.message = error.response\r\n//       ? error.response.data?.error?.message\r\n//       : \"Something went wrong. Try again.\";\r\n//   }\r\n\r\n//   if (axios.isCancel(error)) {\r\n//     return new Promise.reject(error);\r\n//   }\r\n\r\n//   store.dispatch(\r\n//     actions.showAlert({ type: ALERT_TYPES.ERROR, message: error.message })\r\n//   );\r\n\r\n//   error.code = error.response ? error.response.data.data : null;\r\n//   return Promise.reject(error);\r\n// });\r\n\r\nexport default api;\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\DoughnutChart.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\Navigations.js",["759"],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\Footer.js",["760","761","762","763"],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\Pricing.js",["764"],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\PackageBox.js",["765"],"import React from \"react\";\r\n\r\nfunction PackageBox({ item, selectedPackage, setSelectedPackage, index }) {\r\n  return (\r\n    <div\r\n      className={`package ${index == selectedPackage ? \"selected\" : \"\"}`}\r\n      onClick={() => setSelectedPackage(index)}\r\n    >\r\n      <div className=\"packageText\">{item.title}</div>\r\n      <div className=\"packageText\">Total Questions {item.questionCount}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PackageBox;\r\n","D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\Constant.js",[],"D:\\Lanc_Projects\\Cer3\\DEntal\\Dental clone1\\Dental\\src\\view\\component\\PracticeTime.js",["766","767","768","769","770"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\index.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\App.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\reportWebVitals.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\application\\store\\index.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\theme\\index.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\routes\\index.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\application\\reducers\\index.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\infrastructure\\services\\index.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\routes\\ProtectedRoutes.js",["771","772","773"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\Contact.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\Time.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\Home.js",["774"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\TandC.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\About.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\User\\Dashboard.js",["775","776","777","778","779","780"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\User\\TestPerfomance.js",["781","782","783"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\Login.js",["784","785","786"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\User\\Result.js",["787","788","789","790","791","792","793","794","795","796","797","798","799","800"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\Signup.js",["801"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\User\\Practice.js",["802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824"],"import React, { useEffect, useMemo, useState, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Box,\r\n  Typography,\r\n  Checkbox,\r\n  Collapse,\r\n  FormControlLabel,\r\n  Button,\r\n  RadioGroup,\r\n  Radio,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport UserNavigation from \"../../component/UserNavigation\";\r\n\r\nimport UserFooter from \"../../component/UserFooter\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getQuestionMetaData,\r\n  questionActions,\r\n  questionSelectors,\r\n} from \"../../../application/reducers/questionSlice\";\r\nimport {\r\n  getSubTopics,\r\n  fetchQuestions,\r\n  setQuestionFilter,\r\n  getSubmitAnswer,\r\n  getsubmitUserdata,\r\n  setSubmittedTestResultEmpty,\r\n} from \"../../../application/reducers/testSlice\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Add as AddIcon, Remove as RemoveIcon } from \"@mui/icons-material\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport api, { headers } from \"../../../infrastructure/utils/axios\";\r\nimport PackageBox from \"../../component/PackageBox\";\r\nimport axios from \"axios\";\r\nimport {\r\n  BACKEND_URL,\r\n  CURRENT_QUESTION,\r\n  CURRENT_SELECTED_PACKAGE,\r\n  GENERATED_TEST_ID,\r\n  TOTAL_SELECTED_QUESTION,\r\n} from \"../../Constant\";\r\n// import { UserContext } from \"../../../UserContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    border: \"2px solid gray\",\r\n    display: \"flex\",\r\n    margin: \"3rem 0\",\r\n  },\r\n  subjectsCont: {\r\n    margin: \"1rem 0\",\r\n    width: \"30%\",\r\n    maxWidth: 300,\r\n  },\r\n  checkbox: {\r\n    display: \"flex\",\r\n    columnGap: \"0.5rem\",\r\n    alignItems: \"center\",\r\n    background: \"#EFF5F8\",\r\n    color: \"#525252 !important\",\r\n    \"& p\": {\r\n      fontWeight: 600,\r\n    },\r\n  },\r\n  topicCont: {\r\n    background: \"#EFF5F8\",\r\n    flex: 1,\r\n    padding: \"1rem\",\r\n  },\r\n  subTopicCont: {\r\n    marginLeft: \"2rem\",\r\n  },\r\n}));\r\n\r\nconst ShowSelectionContainer = ({ data }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [currentSubject, setCurrentSubject] = useState(null);\r\n  const [currentTopic, setCurrentTopic] = useState(null);\r\n  const [currentSubTopic, setCurrentSubTopic] = useState(null);\r\n  const [subjectDatas, setSubjectDatas] = useState([]);\r\n\r\n  const [subjectsId, setSubjectsId] = useState();\r\n\r\n  //when click on back , removes selected option\r\n  useEffect(() => {\r\n    dispatch(questionActions.removeSelectedAllSubject());\r\n    dispatch(questionActions.removeSelectedAllTopic());\r\n    dispatch(questionActions.removeSelectedAllSubTopic());\r\n  }, []);\r\n\r\n  // const userContext = useContext(UserContext);\r\n\r\n  console.log(\"getvdata  :: \", data);\r\n\r\n  const handleCurrentSubject = (id) => {\r\n    setCurrentSubject(id);\r\n  };\r\n  const handleCurrentTopic = (id) => {\r\n    setCurrentTopic(id);\r\n  };\r\n\r\n  const handleCurrentSubTopic = (id) => {\r\n    setCurrentSubTopic(id);\r\n  };\r\n\r\n  const { selectedSubjects, selectedTopics, selectedSubTopics } = useSelector(\r\n    questionSelectors.getQuestionMetaData\r\n  );\r\n\r\n  const handleSubjectChange = (id, checked) => {\r\n    checked\r\n      ? dispatch(questionActions.setSelectedSubject(id))\r\n      : dispatch(questionActions.removeSelectedSubject(id));\r\n  };\r\n  const handleTopicChange = (id, checked) => {\r\n    checked\r\n      ? dispatch(questionActions.setSelectedTopic(id))\r\n      : dispatch(questionActions.removeSelectedTopic(id));\r\n  };\r\n  const handleSubTopicChange = (id, checked) => {\r\n    checked\r\n      ? dispatch(questionActions.setSelectedSubTopic(id))\r\n      : dispatch(questionActions.removeSelectedSubTopic(id));\r\n  };\r\n\r\n  let subjectData = [];\r\n  const topics = useMemo(() => {\r\n    if (subjectDatas.length !== 0) {\r\n      subjectData.push(...subjectDatas);\r\n    }\r\n    if (!selectedSubjects || !data) return null;\r\n\r\n    const [subject] = data.filter((subject) => subject.id === currentSubject);\r\n    const [isSubjectExist] = subjectDatas.filter(\r\n      (subject) => subject.id === currentSubject\r\n    );\r\n\r\n    // pusdata.push(subject)\r\n    if (!subject) return null;\r\n    if (isSubjectExist) {\r\n      subjectData = [];\r\n      const [newSubject] = subjectDatas.map((subject) => {\r\n        return subjectDatas.filter((subject) => subject.id !== currentSubject);\r\n      });\r\n      subjectData.push(...newSubject);\r\n    } else {\r\n      subjectData.push(subject);\r\n    }\r\n    setSubjectDatas(subjectData);\r\n    // return subject.topics;\r\n  }, [data, currentSubject, selectedSubjects]);\r\n\r\n  // const getstate = state.map(data=> data\r\n\r\n  useDispatch(() => {\r\n    if (selectedSubjects && selectedSubjects) {\r\n      setSubjectsId(selectedSubjects);\r\n    }\r\n  }, [selectedSubjects]);\r\n\r\n  const subTopics = useMemo(() => {\r\n    if (!selectedSubjects || !selectedTopics || !data) return null;\r\n\r\n    const [subject] = data.filter((subject) => subject.id === currentSubject);\r\n    if (!subject) return null;\r\n\r\n    // console.log(\"subject :: \",subject);\r\n\r\n    const [topic] = subject.topics.filter((topic) => topic.id === currentTopic);\r\n    if (!topic) return null;\r\n\r\n    return topic.subTopics;\r\n  }, [data, selectedSubjects, selectedTopics, currentSubject, currentTopic]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.subjectsCont}>\r\n        {data.map((subject) => {\r\n          console.log(subject, \"<<<<item\");\r\n          return (\r\n            <div\r\n              className={classes.checkbox}\r\n              style={{\r\n                background: selectedSubjects.includes(subject.id)\r\n                  ? \"#EFF5F8\"\r\n                  : \"white\",\r\n              }}\r\n              key={subject.id}\r\n            >\r\n              <Checkbox\r\n                checked={selectedSubjects.includes(subject.id) ? true : false}\r\n                onChange={(e) => {\r\n                  handleSubjectChange(subject.id, e.target.checked);\r\n                  handleCurrentSubject(subject.id);\r\n                }}\r\n                name={subject.id}\r\n              />\r\n              <Typography>\r\n                {/* {subject.title} {subject.title == \"Bhushan\" ? \"   (1)\" : \"\"} */}\r\n                {subject.title} {`(${subject.topics.length})`}\r\n              </Typography>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className={classes.topicCont}>\r\n        {subjectDatas?.map((topics) =>\r\n          topics?.topics.map((topic) => (\r\n            <div key={topic.id}>\r\n              <div className={classes.checkbox} key={topic.id}>\r\n                <Checkbox\r\n                  checked={selectedTopics.includes(topic.id) ? true : false}\r\n                  onChange={(e) => {\r\n                    handleTopicChange(topic.id, e.target.checked);\r\n                    handleCurrentTopic(topic.id);\r\n                  }}\r\n                  name={topic}\r\n                />\r\n                <Typography>\r\n                  {topic.title} ({topic?.subTopics?.length})\r\n                </Typography>\r\n                <div style={{ flex: 1 }} />\r\n\r\n                {currentTopic !== topic.id ? (\r\n                  <AddIcon style={{ color: \"#BFBFBF\" }} />\r\n                ) : (\r\n                  <RemoveIcon style={{ color: \"#F23A5E\" }} />\r\n                )}\r\n              </div>\r\n              <Collapse\r\n                in={currentTopic === topic.id}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n              >\r\n                <div className={classes.subTopicCont}>\r\n                  {topic.subTopics?.map((subTopic) => (\r\n                    <div className={classes.checkbox} key={subTopic.id}>\r\n                      <Checkbox\r\n                        checked={\r\n                          selectedSubTopics.includes(subTopic.id) ? true : false\r\n                        }\r\n                        onChange={(e) => {\r\n                          handleSubTopicChange(subTopic.id, e.target.checked);\r\n                          handleCurrentSubTopic(subTopic.id);\r\n                        }}\r\n                        name={subTopic.id}\r\n                      />\r\n                      <Typography>{subTopic.title}</Typography>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Collapse>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Practice = () => {\r\n  const packageData = [\r\n    {\r\n      name: \"Package 1\",\r\n      totalQuestions: 40,\r\n    },\r\n    {\r\n      name: \"Package 1\",\r\n      totalQuestions: 40,\r\n    },\r\n    {\r\n      name: \"Package 1\",\r\n      totalQuestions: 40,\r\n    },\r\n    {\r\n      name: \"Package 1\",\r\n      totalQuestions: 40,\r\n    },\r\n    {\r\n      name: \"Package 1\",\r\n      totalQuestions: 40,\r\n    },\r\n    {\r\n      name: \"Package 1\",\r\n      totalQuestions: 40,\r\n    },\r\n    {\r\n      name: \"Package 1\",\r\n      totalQuestions: 40,\r\n    },\r\n  ];\r\n\r\n  const UserData = useSelector((state) => state.auth);\r\n\r\n  console.log(UserData, \"<<<user Data\");\r\n\r\n  const [testExists, setTestExists] = useState(async () => {\r\n    const res = await api.get(\"question/testExists\");\r\n    const data = await res.data;\r\n    return data.exists;\r\n  });\r\n\r\n  const [checked, setChecked] = useState([0]);\r\n  const [selectedPackage, setSelectedPackage] = useState(null);\r\n  const history = useHistory();\r\n  const [mode, setMode] = useState(\"LEARNING\");\r\n  const [total, setTotal] = useState(null);\r\n  const [filters, setFilters] = useState({\r\n    unused: true,\r\n    incorrect: false,\r\n    marked: false,\r\n    all: !testExists ? true : false,\r\n  });\r\n  const { selectedSubTopics } = useSelector(\r\n    questionSelectors.getQuestionMetaData\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const filterChangeHandler = (e) => {\r\n    const { id, checked } = e.target;\r\n    if (id === \"all\" && checked)\r\n      setFilters({\r\n        unused: checked,\r\n        incorrect: checked,\r\n        marked: checked,\r\n        all: checked,\r\n      });\r\n    else if (id === \"unused\")\r\n      setFilters({\r\n        ...filters,\r\n        unused: checked,\r\n        all: checked && filters.incorrect && filters.marked ? true : false,\r\n      });\r\n    else if (id === \"incorrect\")\r\n      setFilters({\r\n        ...filters,\r\n        incorrect: checked,\r\n        all: checked && filters.unused && filters.marked ? true : false,\r\n      });\r\n    else if (id === \"marked\")\r\n      setFilters({\r\n        ...filters,\r\n        marked: checked,\r\n        all: checked && filters.unused && filters.incorrect ? true : false,\r\n      });\r\n  };\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const [questionSelectionData, setQuestionSelectionData] = useState([]);\r\n  useEffect(async () => {\r\n    const { data } = await axios.get(`${BACKEND_URL}/api/v1/package`);\r\n    setQuestionSelectionData(data.data);\r\n    // consoel.log(data)\r\n  }, [dispatch]);\r\n\r\n  const minMaxValue = (e) => {\r\n    setTotal(e.target.value);\r\n  };\r\n  const handleSubmit = async () => {\r\n    localStorage.setItem(TOTAL_SELECTED_QUESTION, total);\r\n    localStorage.setItem(CURRENT_QUESTION, 1);\r\n\r\n    const { id, questionCount, title } = questionSelectionData[selectedPackage];\r\n    console.log(title, \"<<<title\");\r\n    localStorage.setItem(CURRENT_SELECTED_PACKAGE, id);\r\n\r\n    if (questionCount >= total) {\r\n      const { data } = await axios.post(\r\n        `${BACKEND_URL}/api/v1/package-test-result/add`,\r\n        {\r\n          test_name: title,\r\n          package: id,\r\n          mode: mode,\r\n          questions_details: [],\r\n          totalQuestion: total,\r\n          totalIncorrect: 0,\r\n          totalCorrect: 0,\r\n          totalUnanswered: 0,\r\n          totalMarked: 0,\r\n          totalTimeSpend: 0,\r\n          endTime: Date.now() + 60000 * total * 0.9,\r\n        },\r\n        {\r\n          headers: headers(),\r\n        }\r\n      );\r\n      if (data.statusCode == 200) {\r\n        localStorage.setItem(GENERATED_TEST_ID, data.data._id);\r\n        history.push(\"/user/test\");\r\n      }\r\n    } else {\r\n      alert(\"You can select maximum:\" + questionCount);\r\n    }\r\n  };\r\n\r\n  console.log(\"questionSelectionData :: \", questionSelectionData);\r\n\r\n  return (\r\n    <>\r\n      <UserNavigation />\r\n      <Container\r\n        maxWidth=\"xl\"\r\n        sx={{ textAlign: \"center\", margin: \"70px auto\" }}\r\n      >\r\n        <Typography\r\n          variant=\"h2\"\r\n          sx={{ fontSize: \"38px\", color: \"#434343\", fontWeight: \"bold\" }}\r\n        >\r\n          Choose your practice\r\n        </Typography>\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            background: \"#F1F1F1\",\r\n            borderRadius: \"58px\",\r\n            width: \"30%\",\r\n            margin: \"30px auto\",\r\n            padding: \"10px\",\r\n          }}\r\n        >\r\n          <div>\r\n            <RadioGroup\r\n              aria-label=\"mode\"\r\n              value={mode}\r\n              name=\"controlled-radio-buttons-group\"\r\n              row\r\n              onChange={(e) => setMode(e.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value=\"LEARNING\"\r\n                control={<Radio />}\r\n                label=\"Practice\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"TEST\"\r\n                onChange={(e) => setMode(e.target.value)}\r\n                control={<Radio />}\r\n                label=\"Test\"\r\n              />\r\n            </RadioGroup>\r\n          </div>\r\n        </Box>\r\n        {testExists ? (\r\n          <Box\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-evenly\",\r\n              width: \"50%\",\r\n              margin: \"30px auto\",\r\n            }}\r\n          >\r\n            {/* <div>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={filters.unused}\r\n                    onChange={(e) => filterChangeHandler(e)}\r\n                    id=\"unused\"\r\n                  />\r\n                }\r\n                label=\"Unused\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={filters.incorrect}\r\n                    onChange={(e) => filterChangeHandler(e)}\r\n                    id=\"incorrect\"\r\n                  />\r\n                }\r\n                label=\"Incorrect\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={filters.marked}\r\n                    onChange={(e) => filterChangeHandler(e)}\r\n                    id=\"marked\"\r\n                  />\r\n                }\r\n                label=\"Marked\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={filters.all}\r\n                    id=\"all\"\r\n                    onChange={(e) => filterChangeHandler(e)}\r\n                  />\r\n                }\r\n                label=\"All\"\r\n              />\r\n            </div> */}\r\n          </Box>\r\n        ) : null}\r\n\r\n        <hr />\r\n        <br />\r\n        <br />\r\n        <Typography\r\n          variant=\"h2\"\r\n          sx={{ fontSize: \"38px\", color: \"#434343\", fontWeight: \"bold\" }}\r\n        >\r\n          Select Questions From Functional Knowledge and Topic\r\n        </Typography>\r\n\r\n        <div></div>\r\n\r\n        {/* ************************************* */}\r\n        {/* {questionSelectionData ? (\r\n          <ShowSelectionContainer data={questionSelectionData} />\r\n        ) : null} */}\r\n\r\n        {/* ---- show packages */}\r\n        <div className=\"package-outer\">\r\n          {questionSelectionData.map((item, index) => {\r\n            if (index > 1) return null;\r\n            return (\r\n              <PackageBox\r\n                index={index}\r\n                item={item}\r\n                setSelectedPackage={setSelectedPackage}\r\n                selectedPackage={selectedPackage}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {/* --- */}\r\n\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography>\r\n            Enter number of questions\r\n            <span style={{ color: \"red\" }}> *</span>\r\n          </Typography>\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <TextField\r\n              type=\"number\"\r\n              onChange={(e) => minMaxValue(e)}\r\n              // onChange={(e) => setTotal(e.target.value)}\r\n              size=\"small\"\r\n              sx={{ paddingLeft: \"1em\" }}\r\n              required\r\n              value={total}\r\n            />\r\n            {/* <Typography style={{color:\"red\"}}>Please enter 10 to 100</Typography> */}\r\n          </div>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography style={{ visibility: \"hidden\" }}>\r\n            Enter number of questions\r\n            <span style={{ color: \"red\" }}> *</span>\r\n          </Typography>\r\n          {/* <Typography style={{ color: \"red\", paddingLeft: \"1em\" }}>\r\n            Please enter valid number 10 to 200\r\n          </Typography> */}\r\n        </Box>\r\n        {/* {total > 0 && total < 100 && selectedSubTopics.length > 0 ? ( */}\r\n        {total > 0 && total < 100 ? (\r\n          // <NavLink to=\"/user/test\">\r\n          <Button\r\n            onClick={() => {\r\n              if (selectedPackage == null) {\r\n                alert(\"Select PAckage\");\r\n              }\r\n              handleSubmit();\r\n              // dispatch(setSubmittedTestResultEmpty());\r\n              // dispatch(setQuestionFilter({ filters, mode, total }));\r\n              // dispatch(fetchQuestions({ page: 1 }));\r\n            }}\r\n            sx={{ color: \"white\", \"&:hover\": { backgroundColor: \"#f23a5e\" } }}\r\n          >\r\n            Start\r\n          </Button>\r\n        ) : (\r\n          // </NavLink>\r\n          <Button disabled>Start</Button>\r\n        )}\r\n      </Container>\r\n      <UserFooter />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Practice;\r\n",["825","826"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\subscriptions\\Subscriptions.js",["827"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\Privacy-policy.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\User\\Explanation.js",["828","829","830","831","832","833","834","835"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\User\\PreviousTest.js",["836","837"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\User\\FknTopics.js",["838","839","840"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\pages\\User\\Test.js",["841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\UI\\UiAlert.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\application\\reducers\\explanationSlice.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\infrastructure\\services\\authService.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\infrastructure\\services\\questionService.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\application\\reducers\\uiSlice.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\application\\reducers\\testSlice.js",["887","888"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\application\\reducers\\questionSlice.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\application\\reducers\\authSlice.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\UserFooter.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\UserNavigation.js",["889","890"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\PracticeTime.js",["891","892","893","894","895"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\infrastructure\\utils\\axios.js",["896","897","898"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\Constant.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\QuestionProgress.js",["899"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\Footer.js",["900","901","902","903"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\Navigations.js",["904"],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\PackageBox.js",["905","906","907"],"import React from \"react\";\r\n\r\nfunction PackageBox({ item, selectedPackage, setSelectedPackage, index }) {\r\n  const name = () => {\r\n    if (index == 0) return \"General Test Package\";\r\n    if (index == 1) return \"Gate Test Package\";\r\n  };\r\n  return (\r\n    <div\r\n      className={`package ${index == selectedPackage ? \"selected\" : \"\"}`}\r\n      onClick={() => setSelectedPackage(index)}\r\n    >\r\n      <div className=\"packageText\">{name()}</div>\r\n      {/* <div className=\"packageText\">Total Questions {item.questionCount}</div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PackageBox;\r\n","D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\ProgressBar.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\DoughnutChart.js",[],"D:\\Lanc_Projects\\Cer3\\Bobprep\\dental user\\Dental-user\\src\\view\\component\\Pricing.js",["908"],{"ruleId":"909","replacedBy":"910"},{"ruleId":"911","replacedBy":"912"},{"ruleId":"913","severity":1,"message":"914","line":2,"column":10,"nodeType":"915","messageId":"916","endLine":2,"endColumn":21},{"ruleId":"913","severity":1,"message":"917","line":3,"column":19,"nodeType":"915","messageId":"916","endLine":3,"endColumn":28},{"ruleId":"913","severity":1,"message":"918","line":4,"column":10,"nodeType":"915","messageId":"916","endLine":4,"endColumn":26},{"ruleId":"913","severity":1,"message":"919","line":5,"column":8,"nodeType":"915","messageId":"916","endLine":5,"endColumn":22},{"ruleId":"913","severity":1,"message":"920","line":56,"column":7,"nodeType":"915","messageId":"916","endLine":56,"endColumn":11},{"ruleId":"913","severity":1,"message":"921","line":11,"column":3,"nodeType":"915","messageId":"916","endLine":11,"endColumn":12},{"ruleId":"913","severity":1,"message":"922","line":14,"column":10,"nodeType":"915","messageId":"916","endLine":14,"endColumn":16},{"ruleId":"923","severity":1,"message":"924","line":85,"column":6,"nodeType":"925","endLine":85,"endColumn":14,"suggestions":"926"},{"ruleId":"913","severity":1,"message":"927","line":44,"column":10,"nodeType":"915","messageId":"916","endLine":44,"endColumn":20},{"ruleId":"913","severity":1,"message":"928","line":9,"column":8,"nodeType":"915","messageId":"916","endLine":9,"endColumn":22},{"ruleId":"913","severity":1,"message":"929","line":15,"column":23,"nodeType":"915","messageId":"916","endLine":15,"endColumn":34},{"ruleId":"913","severity":1,"message":"930","line":62,"column":10,"nodeType":"915","messageId":"916","endLine":62,"endColumn":16},{"ruleId":"913","severity":1,"message":"920","line":77,"column":7,"nodeType":"915","messageId":"916","endLine":77,"endColumn":11},{"ruleId":"913","severity":1,"message":"931","line":89,"column":10,"nodeType":"915","messageId":"916","endLine":89,"endColumn":20},{"ruleId":"923","severity":1,"message":"932","line":108,"column":6,"nodeType":"925","endLine":108,"endColumn":8,"suggestions":"933"},{"ruleId":"913","severity":1,"message":"918","line":4,"column":8,"nodeType":"915","messageId":"916","endLine":4,"endColumn":24},{"ruleId":"913","severity":1,"message":"934","line":7,"column":8,"nodeType":"915","messageId":"916","endLine":7,"endColumn":21},{"ruleId":"913","severity":1,"message":"935","line":187,"column":7,"nodeType":"915","messageId":"916","endLine":187,"endColumn":17},{"ruleId":"913","severity":1,"message":"936","line":242,"column":7,"nodeType":"915","messageId":"916","endLine":242,"endColumn":16},{"ruleId":"913","severity":1,"message":"937","line":281,"column":10,"nodeType":"915","messageId":"916","endLine":281,"endColumn":23},{"ruleId":"913","severity":1,"message":"938","line":15,"column":14,"nodeType":"915","messageId":"916","endLine":15,"endColumn":23},{"ruleId":"923","severity":1,"message":"939","line":175,"column":6,"nodeType":"925","endLine":175,"endColumn":36,"suggestions":"940"},{"ruleId":"923","severity":1,"message":"941","line":185,"column":6,"nodeType":"925","endLine":185,"endColumn":21,"suggestions":"942"},{"ruleId":"913","severity":1,"message":"943","line":1,"column":47,"nodeType":"915","messageId":"916","endLine":1,"endColumn":57},{"ruleId":"913","severity":1,"message":"944","line":23,"column":3,"nodeType":"915","messageId":"916","endLine":23,"endColumn":15},{"ruleId":"913","severity":1,"message":"945","line":26,"column":3,"nodeType":"915","messageId":"916","endLine":26,"endColumn":18},{"ruleId":"913","severity":1,"message":"946","line":27,"column":3,"nodeType":"915","messageId":"916","endLine":27,"endColumn":20},{"ruleId":"913","severity":1,"message":"947","line":72,"column":10,"nodeType":"915","messageId":"916","endLine":72,"endColumn":25},{"ruleId":"913","severity":1,"message":"948","line":75,"column":10,"nodeType":"915","messageId":"916","endLine":75,"endColumn":20},{"ruleId":"923","severity":1,"message":"941","line":82,"column":6,"nodeType":"925","endLine":82,"endColumn":8,"suggestions":"949"},{"ruleId":"913","severity":1,"message":"950","line":122,"column":9,"nodeType":"915","messageId":"916","endLine":122,"endColumn":15},{"ruleId":"923","severity":1,"message":"951","line":136,"column":21,"nodeType":"925","endLine":136,"endColumn":23},{"ruleId":"913","severity":1,"message":"952","line":156,"column":9,"nodeType":"915","messageId":"916","endLine":156,"endColumn":18},{"ruleId":"913","severity":1,"message":"953","line":255,"column":22,"nodeType":"915","messageId":"916","endLine":255,"endColumn":35},{"ruleId":"913","severity":1,"message":"954","line":303,"column":9,"nodeType":"915","messageId":"916","endLine":303,"endColumn":21},{"ruleId":"913","severity":1,"message":"955","line":5,"column":3,"nodeType":"915","messageId":"916","endLine":5,"endColumn":14},{"ruleId":"913","severity":1,"message":"956","line":66,"column":9,"nodeType":"915","messageId":"916","endLine":66,"endColumn":17},{"ruleId":"913","severity":1,"message":"957","line":81,"column":20,"nodeType":"915","messageId":"916","endLine":81,"endColumn":31},{"ruleId":"913","severity":1,"message":"958","line":177,"column":10,"nodeType":"915","messageId":"916","endLine":177,"endColumn":14},{"ruleId":"913","severity":1,"message":"959","line":177,"column":16,"nodeType":"915","messageId":"916","endLine":177,"endColumn":23},{"ruleId":"913","severity":1,"message":"921","line":9,"column":3,"nodeType":"915","messageId":"916","endLine":9,"endColumn":12},{"ruleId":"913","severity":1,"message":"960","line":2,"column":8,"nodeType":"915","messageId":"916","endLine":2,"endColumn":22},{"ruleId":"961","severity":1,"message":"962","line":121,"column":36,"nodeType":"963","messageId":"964","endLine":121,"endColumn":38},{"ruleId":"961","severity":1,"message":"962","line":122,"column":31,"nodeType":"963","messageId":"964","endLine":122,"endColumn":33},{"ruleId":"965","severity":1,"message":"966","line":102,"column":15,"nodeType":"967","endLine":102,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":105,"column":15,"nodeType":"967","endLine":105,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":112,"column":15,"nodeType":"967","endLine":112,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":119,"column":15,"nodeType":"967","endLine":119,"endColumn":27},{"ruleId":"913","severity":1,"message":"968","line":168,"column":7,"nodeType":"915","messageId":"916","endLine":168,"endColumn":16},{"ruleId":"913","severity":1,"message":"969","line":66,"column":19,"nodeType":"915","messageId":"916","endLine":66,"endColumn":23},{"ruleId":"970","severity":1,"message":"971","line":95,"column":5,"nodeType":"972","messageId":"964","endLine":95,"endColumn":12},{"ruleId":"913","severity":1,"message":"973","line":2,"column":10,"nodeType":"915","messageId":"916","endLine":2,"endColumn":22},{"ruleId":"913","severity":1,"message":"974","line":3,"column":10,"nodeType":"915","messageId":"916","endLine":3,"endColumn":17},{"ruleId":"913","severity":1,"message":"975","line":3,"column":19,"nodeType":"915","messageId":"916","endLine":3,"endColumn":30},{"ruleId":"913","severity":1,"message":"976","line":39,"column":5,"nodeType":"915","messageId":"916","endLine":39,"endColumn":17},{"ruleId":"909","replacedBy":"977"},{"ruleId":"911","replacedBy":"978"},{"ruleId":"913","severity":1,"message":"914","line":2,"column":10,"nodeType":"915","messageId":"916","endLine":2,"endColumn":21},{"ruleId":"913","severity":1,"message":"917","line":3,"column":19,"nodeType":"915","messageId":"916","endLine":3,"endColumn":28},{"ruleId":"913","severity":1,"message":"918","line":4,"column":10,"nodeType":"915","messageId":"916","endLine":4,"endColumn":26},{"ruleId":"913","severity":1,"message":"921","line":11,"column":3,"nodeType":"915","messageId":"916","endLine":11,"endColumn":12},{"ruleId":"913","severity":1,"message":"922","line":14,"column":10,"nodeType":"915","messageId":"916","endLine":14,"endColumn":16},{"ruleId":"923","severity":1,"message":"924","line":85,"column":6,"nodeType":"925","endLine":85,"endColumn":14,"suggestions":"979"},{"ruleId":"913","severity":1,"message":"919","line":5,"column":8,"nodeType":"915","messageId":"916","endLine":5,"endColumn":22},{"ruleId":"913","severity":1,"message":"921","line":9,"column":3,"nodeType":"915","messageId":"916","endLine":9,"endColumn":12},{"ruleId":"913","severity":1,"message":"943","line":1,"column":47,"nodeType":"915","messageId":"916","endLine":1,"endColumn":57},{"ruleId":"913","severity":1,"message":"980","line":19,"column":3,"nodeType":"915","messageId":"916","endLine":19,"endColumn":22},{"ruleId":"913","severity":1,"message":"944","line":24,"column":3,"nodeType":"915","messageId":"916","endLine":24,"endColumn":15},{"ruleId":"913","severity":1,"message":"981","line":25,"column":3,"nodeType":"915","messageId":"916","endLine":25,"endColumn":17},{"ruleId":"913","severity":1,"message":"982","line":26,"column":3,"nodeType":"915","messageId":"916","endLine":26,"endColumn":20},{"ruleId":"913","severity":1,"message":"945","line":27,"column":3,"nodeType":"915","messageId":"916","endLine":27,"endColumn":18},{"ruleId":"913","severity":1,"message":"946","line":28,"column":3,"nodeType":"915","messageId":"916","endLine":28,"endColumn":20},{"ruleId":"913","severity":1,"message":"983","line":29,"column":3,"nodeType":"915","messageId":"916","endLine":29,"endColumn":30},{"ruleId":"913","severity":1,"message":"984","line":33,"column":10,"nodeType":"915","messageId":"916","endLine":33,"endColumn":17},{"ruleId":"913","severity":1,"message":"985","line":77,"column":7,"nodeType":"915","messageId":"916","endLine":77,"endColumn":29},{"ruleId":"913","severity":1,"message":"947","line":82,"column":10,"nodeType":"915","messageId":"916","endLine":82,"endColumn":25},{"ruleId":"913","severity":1,"message":"948","line":85,"column":10,"nodeType":"915","messageId":"916","endLine":85,"endColumn":20},{"ruleId":"923","severity":1,"message":"941","line":92,"column":6,"nodeType":"925","endLine":92,"endColumn":8,"suggestions":"986"},{"ruleId":"913","severity":1,"message":"950","line":130,"column":9,"nodeType":"915","messageId":"916","endLine":130,"endColumn":15},{"ruleId":"923","severity":1,"message":"951","line":144,"column":21,"nodeType":"925","endLine":144,"endColumn":23},{"ruleId":"913","severity":1,"message":"952","line":164,"column":9,"nodeType":"915","messageId":"916","endLine":164,"endColumn":18},{"ruleId":"913","severity":1,"message":"987","line":265,"column":9,"nodeType":"915","messageId":"916","endLine":265,"endColumn":20},{"ruleId":"913","severity":1,"message":"953","line":300,"column":22,"nodeType":"915","messageId":"916","endLine":300,"endColumn":35},{"ruleId":"913","severity":1,"message":"988","line":317,"column":11,"nodeType":"915","messageId":"916","endLine":317,"endColumn":28},{"ruleId":"913","severity":1,"message":"989","line":322,"column":9,"nodeType":"915","messageId":"916","endLine":322,"endColumn":28},{"ruleId":"913","severity":1,"message":"954","line":351,"column":9,"nodeType":"915","messageId":"916","endLine":351,"endColumn":21},{"ruleId":"923","severity":1,"message":"990","line":365,"column":13,"nodeType":"991","endLine":369,"endColumn":4},{"ruleId":"961","severity":1,"message":"962","line":402,"column":27,"nodeType":"963","messageId":"964","endLine":402,"endColumn":29},{"ruleId":"913","severity":1,"message":"927","line":47,"column":10,"nodeType":"915","messageId":"916","endLine":47,"endColumn":20},{"ruleId":"923","severity":1,"message":"992","line":69,"column":6,"nodeType":"925","endLine":69,"endColumn":8,"suggestions":"993"},{"ruleId":"913","severity":1,"message":"955","line":5,"column":3,"nodeType":"915","messageId":"916","endLine":5,"endColumn":14},{"ruleId":"913","severity":1,"message":"956","line":66,"column":9,"nodeType":"915","messageId":"916","endLine":66,"endColumn":17},{"ruleId":"923","severity":1,"message":"994","line":80,"column":6,"nodeType":"925","endLine":80,"endColumn":8,"suggestions":"995"},{"ruleId":"961","severity":1,"message":"962","line":83,"column":15,"nodeType":"963","messageId":"964","endLine":83,"endColumn":17},{"ruleId":"961","severity":1,"message":"962","line":90,"column":15,"nodeType":"963","messageId":"964","endLine":90,"endColumn":17},{"ruleId":"961","severity":1,"message":"996","line":114,"column":12,"nodeType":"963","messageId":"964","endLine":114,"endColumn":14},{"ruleId":"961","severity":1,"message":"996","line":123,"column":44,"nodeType":"963","messageId":"964","endLine":123,"endColumn":46},{"ruleId":"961","severity":1,"message":"996","line":187,"column":46,"nodeType":"963","messageId":"964","endLine":187,"endColumn":48},{"ruleId":"913","severity":1,"message":"957","line":81,"column":20,"nodeType":"915","messageId":"916","endLine":81,"endColumn":31},{"ruleId":"913","severity":1,"message":"958","line":177,"column":10,"nodeType":"915","messageId":"916","endLine":177,"endColumn":14},{"ruleId":"913","severity":1,"message":"959","line":177,"column":16,"nodeType":"915","messageId":"916","endLine":177,"endColumn":23},{"ruleId":"913","severity":1,"message":"997","line":5,"column":3,"nodeType":"915","messageId":"916","endLine":5,"endColumn":30},{"ruleId":"913","severity":1,"message":"998","line":6,"column":3,"nodeType":"915","messageId":"916","endLine":6,"endColumn":14},{"ruleId":"913","severity":1,"message":"999","line":7,"column":3,"nodeType":"915","messageId":"916","endLine":7,"endColumn":16},{"ruleId":"913","severity":1,"message":"981","line":8,"column":3,"nodeType":"915","messageId":"916","endLine":8,"endColumn":17},{"ruleId":"913","severity":1,"message":"974","line":14,"column":3,"nodeType":"915","messageId":"916","endLine":14,"endColumn":10},{"ruleId":"913","severity":1,"message":"938","line":15,"column":14,"nodeType":"915","messageId":"916","endLine":15,"endColumn":23},{"ruleId":"913","severity":1,"message":"975","line":16,"column":3,"nodeType":"915","messageId":"916","endLine":16,"endColumn":14},{"ruleId":"913","severity":1,"message":"1000","line":26,"column":10,"nodeType":"915","messageId":"916","endLine":26,"endColumn":17},{"ruleId":"913","severity":1,"message":"1001","line":124,"column":9,"nodeType":"915","messageId":"916","endLine":124,"endColumn":19},{"ruleId":"913","severity":1,"message":"1002","line":125,"column":9,"nodeType":"915","messageId":"916","endLine":125,"endColumn":22},{"ruleId":"913","severity":1,"message":"1003","line":126,"column":28,"nodeType":"915","messageId":"916","endLine":126,"endColumn":47},{"ruleId":"913","severity":1,"message":"1004","line":129,"column":10,"nodeType":"915","messageId":"916","endLine":129,"endColumn":18},{"ruleId":"913","severity":1,"message":"1005","line":136,"column":9,"nodeType":"915","messageId":"916","endLine":136,"endColumn":17},{"ruleId":"913","severity":1,"message":"1006","line":137,"column":9,"nodeType":"915","messageId":"916","endLine":137,"endColumn":25},{"ruleId":"913","severity":1,"message":"1007","line":139,"column":10,"nodeType":"915","messageId":"916","endLine":139,"endColumn":18},{"ruleId":"913","severity":1,"message":"1008","line":155,"column":10,"nodeType":"915","messageId":"916","endLine":155,"endColumn":17},{"ruleId":"913","severity":1,"message":"1009","line":155,"column":19,"nodeType":"915","messageId":"916","endLine":155,"endColumn":29},{"ruleId":"913","severity":1,"message":"1010","line":156,"column":20,"nodeType":"915","messageId":"916","endLine":156,"endColumn":31},{"ruleId":"923","severity":1,"message":"990","line":176,"column":13,"nodeType":"991","endLine":202,"endColumn":4},{"ruleId":"1011","severity":1,"message":"1012","line":178,"column":5,"nodeType":"1013","messageId":"1014","endLine":178,"endColumn":41},{"ruleId":"923","severity":1,"message":"1015","line":202,"column":6,"nodeType":"925","endLine":202,"endColumn":21,"suggestions":"1016"},{"ruleId":"923","severity":1,"message":"990","line":204,"column":13,"nodeType":"991","endLine":231,"endColumn":4},{"ruleId":"961","severity":1,"message":"962","line":207,"column":20,"nodeType":"963","messageId":"964","endLine":207,"endColumn":22},{"ruleId":"923","severity":1,"message":"1017","line":231,"column":6,"nodeType":"925","endLine":231,"endColumn":19,"suggestions":"1018"},{"ruleId":"961","severity":1,"message":"962","line":255,"column":38,"nodeType":"963","messageId":"964","endLine":255,"endColumn":40},{"ruleId":"913","severity":1,"message":"1019","line":258,"column":13,"nodeType":"915","messageId":"916","endLine":258,"endColumn":25},{"ruleId":"961","severity":1,"message":"996","line":267,"column":50,"nodeType":"963","messageId":"964","endLine":267,"endColumn":52},{"ruleId":"913","severity":1,"message":"958","line":288,"column":13,"nodeType":"915","messageId":"916","endLine":288,"endColumn":17},{"ruleId":"961","severity":1,"message":"962","line":302,"column":16,"nodeType":"963","messageId":"964","endLine":302,"endColumn":18},{"ruleId":"970","severity":1,"message":"1020","line":310,"column":9,"nodeType":"972","messageId":"964","endLine":310,"endColumn":17},{"ruleId":"961","severity":1,"message":"962","line":313,"column":37,"nodeType":"963","messageId":"964","endLine":313,"endColumn":39},{"ruleId":"970","severity":1,"message":"1020","line":328,"column":9,"nodeType":"972","messageId":"964","endLine":328,"endColumn":17},{"ruleId":"961","severity":1,"message":"962","line":332,"column":37,"nodeType":"963","messageId":"964","endLine":332,"endColumn":39},{"ruleId":"913","severity":1,"message":"1002","line":338,"column":11,"nodeType":"915","messageId":"916","endLine":338,"endColumn":24},{"ruleId":"913","severity":1,"message":"1021","line":339,"column":11,"nodeType":"915","messageId":"916","endLine":339,"endColumn":20},{"ruleId":"913","severity":1,"message":"1022","line":340,"column":11,"nodeType":"915","messageId":"916","endLine":340,"endColumn":25},{"ruleId":"913","severity":1,"message":"1023","line":346,"column":11,"nodeType":"915","messageId":"916","endLine":346,"endColumn":23},{"ruleId":"913","severity":1,"message":"1024","line":352,"column":11,"nodeType":"915","messageId":"916","endLine":352,"endColumn":26},{"ruleId":"913","severity":1,"message":"1025","line":356,"column":11,"nodeType":"915","messageId":"916","endLine":356,"endColumn":22},{"ruleId":"961","severity":1,"message":"962","line":381,"column":25,"nodeType":"963","messageId":"964","endLine":381,"endColumn":27},{"ruleId":"961","severity":1,"message":"962","line":382,"column":16,"nodeType":"963","messageId":"964","endLine":382,"endColumn":18},{"ruleId":"923","severity":1,"message":"941","line":420,"column":6,"nodeType":"925","endLine":420,"endColumn":21,"suggestions":"1026"},{"ruleId":"961","severity":1,"message":"962","line":453,"column":19,"nodeType":"963","messageId":"964","endLine":453,"endColumn":21},{"ruleId":"961","severity":1,"message":"996","line":453,"column":50,"nodeType":"963","messageId":"964","endLine":453,"endColumn":52},{"ruleId":"961","severity":1,"message":"962","line":455,"column":21,"nodeType":"963","messageId":"964","endLine":455,"endColumn":23},{"ruleId":"961","severity":1,"message":"996","line":477,"column":29,"nodeType":"963","messageId":"964","endLine":477,"endColumn":31},{"ruleId":"961","severity":1,"message":"962","line":523,"column":35,"nodeType":"963","messageId":"964","endLine":523,"endColumn":37},{"ruleId":"913","severity":1,"message":"928","line":9,"column":8,"nodeType":"915","messageId":"916","endLine":9,"endColumn":22},{"ruleId":"913","severity":1,"message":"1027","line":14,"column":8,"nodeType":"915","messageId":"916","endLine":14,"endColumn":11},{"ruleId":"913","severity":1,"message":"929","line":15,"column":23,"nodeType":"915","messageId":"916","endLine":15,"endColumn":34},{"ruleId":"913","severity":1,"message":"930","line":65,"column":10,"nodeType":"915","messageId":"916","endLine":65,"endColumn":16},{"ruleId":"913","severity":1,"message":"920","line":80,"column":7,"nodeType":"915","messageId":"916","endLine":80,"endColumn":11},{"ruleId":"913","severity":1,"message":"1028","line":91,"column":10,"nodeType":"915","messageId":"916","endLine":91,"endColumn":21},{"ruleId":"913","severity":1,"message":"1029","line":91,"column":23,"nodeType":"915","messageId":"916","endLine":91,"endColumn":37},{"ruleId":"913","severity":1,"message":"931","line":92,"column":10,"nodeType":"915","messageId":"916","endLine":92,"endColumn":20},{"ruleId":"913","severity":1,"message":"1030","line":92,"column":22,"nodeType":"915","messageId":"916","endLine":92,"endColumn":35},{"ruleId":"913","severity":1,"message":"1031","line":94,"column":19,"nodeType":"915","messageId":"916","endLine":94,"endColumn":29},{"ruleId":"923","severity":1,"message":"990","line":114,"column":13,"nodeType":"991","endLine":120,"endColumn":4},{"ruleId":"923","severity":1,"message":"932","line":120,"column":6,"nodeType":"925","endLine":120,"endColumn":8,"suggestions":"1032"},{"ruleId":"961","severity":1,"message":"962","line":206,"column":41,"nodeType":"963","messageId":"964","endLine":206,"endColumn":43},{"ruleId":"961","severity":1,"message":"962","line":259,"column":53,"nodeType":"963","messageId":"964","endLine":259,"endColumn":55},{"ruleId":"913","severity":1,"message":"1027","line":13,"column":8,"nodeType":"915","messageId":"916","endLine":13,"endColumn":11},{"ruleId":"913","severity":1,"message":"920","line":58,"column":7,"nodeType":"915","messageId":"916","endLine":58,"endColumn":11},{"ruleId":"923","severity":1,"message":"990","line":70,"column":13,"nodeType":"991","endLine":77,"endColumn":4},{"ruleId":"913","severity":1,"message":"960","line":2,"column":8,"nodeType":"915","messageId":"916","endLine":2,"endColumn":22},{"ruleId":"913","severity":1,"message":"918","line":4,"column":8,"nodeType":"915","messageId":"916","endLine":4,"endColumn":24},{"ruleId":"913","severity":1,"message":"934","line":7,"column":8,"nodeType":"915","messageId":"916","endLine":7,"endColumn":21},{"ruleId":"913","severity":1,"message":"1033","line":98,"column":9,"nodeType":"915","messageId":"916","endLine":98,"endColumn":16},{"ruleId":"913","severity":1,"message":"935","line":174,"column":7,"nodeType":"915","messageId":"916","endLine":174,"endColumn":17},{"ruleId":"913","severity":1,"message":"936","line":229,"column":7,"nodeType":"915","messageId":"916","endLine":229,"endColumn":16},{"ruleId":"913","severity":1,"message":"937","line":268,"column":10,"nodeType":"915","messageId":"916","endLine":268,"endColumn":23},{"ruleId":"961","severity":1,"message":"962","line":121,"column":36,"nodeType":"963","messageId":"964","endLine":121,"endColumn":38},{"ruleId":"961","severity":1,"message":"962","line":122,"column":31,"nodeType":"963","messageId":"964","endLine":122,"endColumn":33},{"ruleId":"970","severity":1,"message":"971","line":95,"column":5,"nodeType":"972","messageId":"964","endLine":95,"endColumn":12},{"ruleId":"913","severity":1,"message":"1034","line":132,"column":9,"nodeType":"915","messageId":"916","endLine":132,"endColumn":16},{"ruleId":"913","severity":1,"message":"976","line":39,"column":5,"nodeType":"915","messageId":"916","endLine":39,"endColumn":17},{"ruleId":"913","severity":1,"message":"973","line":2,"column":10,"nodeType":"915","messageId":"916","endLine":2,"endColumn":22},{"ruleId":"913","severity":1,"message":"974","line":3,"column":10,"nodeType":"915","messageId":"916","endLine":3,"endColumn":17},{"ruleId":"913","severity":1,"message":"975","line":3,"column":19,"nodeType":"915","messageId":"916","endLine":3,"endColumn":30},{"ruleId":"913","severity":1,"message":"969","line":66,"column":19,"nodeType":"915","messageId":"916","endLine":66,"endColumn":23},{"ruleId":"965","severity":1,"message":"966","line":102,"column":15,"nodeType":"967","endLine":102,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":105,"column":15,"nodeType":"967","endLine":105,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":112,"column":15,"nodeType":"967","endLine":112,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":119,"column":15,"nodeType":"967","endLine":119,"endColumn":27},{"ruleId":"913","severity":1,"message":"968","line":168,"column":7,"nodeType":"915","messageId":"916","endLine":168,"endColumn":16},{"ruleId":"961","severity":1,"message":"962","line":6,"column":35,"nodeType":"963","messageId":"964","endLine":6,"endColumn":37},{"ruleId":"913","severity":1,"message":"1035","line":7,"column":10,"nodeType":"915","messageId":"916","endLine":7,"endColumn":15},{"ruleId":"913","severity":1,"message":"1036","line":7,"column":17,"nodeType":"915","messageId":"916","endLine":7,"endColumn":25},{"ruleId":"923","severity":1,"message":"1037","line":12,"column":15,"nodeType":"963","endLine":12,"endColumn":22},{"ruleId":"923","severity":1,"message":"1038","line":18,"column":17,"nodeType":"963","endLine":18,"endColumn":24},{"ruleId":"923","severity":1,"message":"1039","line":23,"column":17,"nodeType":"963","endLine":23,"endColumn":24},{"ruleId":"913","severity":1,"message":"914","line":2,"column":10,"nodeType":"915","messageId":"916","endLine":2,"endColumn":21},{"ruleId":"913","severity":1,"message":"917","line":3,"column":19,"nodeType":"915","messageId":"916","endLine":3,"endColumn":28},{"ruleId":"913","severity":1,"message":"918","line":4,"column":10,"nodeType":"915","messageId":"916","endLine":4,"endColumn":26},{"ruleId":"913","severity":1,"message":"919","line":5,"column":8,"nodeType":"915","messageId":"916","endLine":5,"endColumn":22},{"ruleId":"913","severity":1,"message":"918","line":4,"column":8,"nodeType":"915","messageId":"916","endLine":4,"endColumn":24},{"ruleId":"913","severity":1,"message":"934","line":7,"column":8,"nodeType":"915","messageId":"916","endLine":7,"endColumn":21},{"ruleId":"913","severity":1,"message":"1033","line":98,"column":9,"nodeType":"915","messageId":"916","endLine":98,"endColumn":16},{"ruleId":"913","severity":1,"message":"935","line":174,"column":7,"nodeType":"915","messageId":"916","endLine":174,"endColumn":17},{"ruleId":"913","severity":1,"message":"936","line":229,"column":7,"nodeType":"915","messageId":"916","endLine":229,"endColumn":16},{"ruleId":"913","severity":1,"message":"937","line":268,"column":10,"nodeType":"915","messageId":"916","endLine":268,"endColumn":23},{"ruleId":"913","severity":1,"message":"1027","line":13,"column":8,"nodeType":"915","messageId":"916","endLine":13,"endColumn":11},{"ruleId":"913","severity":1,"message":"920","line":58,"column":7,"nodeType":"915","messageId":"916","endLine":58,"endColumn":11},{"ruleId":"923","severity":1,"message":"990","line":70,"column":13,"nodeType":"991","endLine":77,"endColumn":4},{"ruleId":"913","severity":1,"message":"921","line":11,"column":3,"nodeType":"915","messageId":"916","endLine":11,"endColumn":12},{"ruleId":"913","severity":1,"message":"922","line":14,"column":10,"nodeType":"915","messageId":"916","endLine":14,"endColumn":16},{"ruleId":"923","severity":1,"message":"924","line":85,"column":6,"nodeType":"925","endLine":85,"endColumn":14,"suggestions":"1040"},{"ruleId":"913","severity":1,"message":"928","line":9,"column":8,"nodeType":"915","messageId":"916","endLine":9,"endColumn":22},{"ruleId":"913","severity":1,"message":"1027","line":14,"column":8,"nodeType":"915","messageId":"916","endLine":14,"endColumn":11},{"ruleId":"913","severity":1,"message":"929","line":15,"column":23,"nodeType":"915","messageId":"916","endLine":15,"endColumn":34},{"ruleId":"913","severity":1,"message":"930","line":65,"column":10,"nodeType":"915","messageId":"916","endLine":65,"endColumn":16},{"ruleId":"913","severity":1,"message":"920","line":80,"column":7,"nodeType":"915","messageId":"916","endLine":80,"endColumn":11},{"ruleId":"913","severity":1,"message":"1028","line":91,"column":10,"nodeType":"915","messageId":"916","endLine":91,"endColumn":21},{"ruleId":"913","severity":1,"message":"1029","line":91,"column":23,"nodeType":"915","messageId":"916","endLine":91,"endColumn":37},{"ruleId":"913","severity":1,"message":"931","line":92,"column":10,"nodeType":"915","messageId":"916","endLine":92,"endColumn":20},{"ruleId":"913","severity":1,"message":"1030","line":92,"column":22,"nodeType":"915","messageId":"916","endLine":92,"endColumn":35},{"ruleId":"913","severity":1,"message":"1031","line":94,"column":19,"nodeType":"915","messageId":"916","endLine":94,"endColumn":29},{"ruleId":"923","severity":1,"message":"990","line":114,"column":13,"nodeType":"991","endLine":120,"endColumn":4},{"ruleId":"923","severity":1,"message":"932","line":120,"column":6,"nodeType":"925","endLine":120,"endColumn":8,"suggestions":"1041"},{"ruleId":"961","severity":1,"message":"962","line":206,"column":41,"nodeType":"963","messageId":"964","endLine":206,"endColumn":43},{"ruleId":"961","severity":1,"message":"962","line":259,"column":53,"nodeType":"963","messageId":"964","endLine":259,"endColumn":55},{"ruleId":"913","severity":1,"message":"921","line":9,"column":3,"nodeType":"915","messageId":"916","endLine":9,"endColumn":12},{"ruleId":"913","severity":1,"message":"943","line":1,"column":47,"nodeType":"915","messageId":"916","endLine":1,"endColumn":57},{"ruleId":"913","severity":1,"message":"980","line":19,"column":3,"nodeType":"915","messageId":"916","endLine":19,"endColumn":22},{"ruleId":"913","severity":1,"message":"944","line":24,"column":3,"nodeType":"915","messageId":"916","endLine":24,"endColumn":15},{"ruleId":"913","severity":1,"message":"981","line":25,"column":3,"nodeType":"915","messageId":"916","endLine":25,"endColumn":17},{"ruleId":"913","severity":1,"message":"982","line":26,"column":3,"nodeType":"915","messageId":"916","endLine":26,"endColumn":20},{"ruleId":"913","severity":1,"message":"945","line":27,"column":3,"nodeType":"915","messageId":"916","endLine":27,"endColumn":18},{"ruleId":"913","severity":1,"message":"946","line":28,"column":3,"nodeType":"915","messageId":"916","endLine":28,"endColumn":20},{"ruleId":"913","severity":1,"message":"983","line":29,"column":3,"nodeType":"915","messageId":"916","endLine":29,"endColumn":30},{"ruleId":"913","severity":1,"message":"984","line":33,"column":10,"nodeType":"915","messageId":"916","endLine":33,"endColumn":17},{"ruleId":"913","severity":1,"message":"985","line":77,"column":7,"nodeType":"915","messageId":"916","endLine":77,"endColumn":29},{"ruleId":"913","severity":1,"message":"947","line":82,"column":10,"nodeType":"915","messageId":"916","endLine":82,"endColumn":25},{"ruleId":"913","severity":1,"message":"948","line":85,"column":10,"nodeType":"915","messageId":"916","endLine":85,"endColumn":20},{"ruleId":"923","severity":1,"message":"941","line":92,"column":6,"nodeType":"925","endLine":92,"endColumn":8,"suggestions":"1042"},{"ruleId":"913","severity":1,"message":"950","line":130,"column":9,"nodeType":"915","messageId":"916","endLine":130,"endColumn":15},{"ruleId":"923","severity":1,"message":"951","line":144,"column":21,"nodeType":"925","endLine":144,"endColumn":23},{"ruleId":"913","severity":1,"message":"952","line":164,"column":9,"nodeType":"915","messageId":"916","endLine":164,"endColumn":18},{"ruleId":"913","severity":1,"message":"987","line":265,"column":9,"nodeType":"915","messageId":"916","endLine":265,"endColumn":20},{"ruleId":"913","severity":1,"message":"953","line":300,"column":22,"nodeType":"915","messageId":"916","endLine":300,"endColumn":35},{"ruleId":"913","severity":1,"message":"988","line":317,"column":11,"nodeType":"915","messageId":"916","endLine":317,"endColumn":28},{"ruleId":"913","severity":1,"message":"989","line":322,"column":9,"nodeType":"915","messageId":"916","endLine":322,"endColumn":28},{"ruleId":"913","severity":1,"message":"954","line":351,"column":9,"nodeType":"915","messageId":"916","endLine":351,"endColumn":21},{"ruleId":"923","severity":1,"message":"990","line":365,"column":13,"nodeType":"991","endLine":369,"endColumn":4},{"ruleId":"961","severity":1,"message":"962","line":402,"column":27,"nodeType":"963","messageId":"964","endLine":402,"endColumn":29},{"ruleId":"909","replacedBy":"1043"},{"ruleId":"911","replacedBy":"1044"},{"ruleId":"913","severity":1,"message":"960","line":2,"column":8,"nodeType":"915","messageId":"916","endLine":2,"endColumn":22},{"ruleId":"913","severity":1,"message":"955","line":5,"column":3,"nodeType":"915","messageId":"916","endLine":5,"endColumn":14},{"ruleId":"913","severity":1,"message":"956","line":66,"column":9,"nodeType":"915","messageId":"916","endLine":66,"endColumn":17},{"ruleId":"923","severity":1,"message":"994","line":80,"column":6,"nodeType":"925","endLine":80,"endColumn":8,"suggestions":"1045"},{"ruleId":"961","severity":1,"message":"962","line":83,"column":15,"nodeType":"963","messageId":"964","endLine":83,"endColumn":17},{"ruleId":"961","severity":1,"message":"962","line":90,"column":15,"nodeType":"963","messageId":"964","endLine":90,"endColumn":17},{"ruleId":"961","severity":1,"message":"996","line":114,"column":12,"nodeType":"963","messageId":"964","endLine":114,"endColumn":14},{"ruleId":"961","severity":1,"message":"996","line":123,"column":44,"nodeType":"963","messageId":"964","endLine":123,"endColumn":46},{"ruleId":"961","severity":1,"message":"996","line":187,"column":46,"nodeType":"963","messageId":"964","endLine":187,"endColumn":48},{"ruleId":"913","severity":1,"message":"927","line":47,"column":10,"nodeType":"915","messageId":"916","endLine":47,"endColumn":20},{"ruleId":"923","severity":1,"message":"992","line":69,"column":6,"nodeType":"925","endLine":69,"endColumn":8,"suggestions":"1046"},{"ruleId":"913","severity":1,"message":"957","line":81,"column":20,"nodeType":"915","messageId":"916","endLine":81,"endColumn":31},{"ruleId":"913","severity":1,"message":"958","line":177,"column":10,"nodeType":"915","messageId":"916","endLine":177,"endColumn":14},{"ruleId":"913","severity":1,"message":"959","line":177,"column":16,"nodeType":"915","messageId":"916","endLine":177,"endColumn":23},{"ruleId":"913","severity":1,"message":"997","line":5,"column":3,"nodeType":"915","messageId":"916","endLine":5,"endColumn":30},{"ruleId":"913","severity":1,"message":"998","line":6,"column":3,"nodeType":"915","messageId":"916","endLine":6,"endColumn":14},{"ruleId":"913","severity":1,"message":"999","line":7,"column":3,"nodeType":"915","messageId":"916","endLine":7,"endColumn":16},{"ruleId":"913","severity":1,"message":"981","line":8,"column":3,"nodeType":"915","messageId":"916","endLine":8,"endColumn":17},{"ruleId":"913","severity":1,"message":"974","line":14,"column":3,"nodeType":"915","messageId":"916","endLine":14,"endColumn":10},{"ruleId":"913","severity":1,"message":"938","line":15,"column":14,"nodeType":"915","messageId":"916","endLine":15,"endColumn":23},{"ruleId":"913","severity":1,"message":"975","line":16,"column":3,"nodeType":"915","messageId":"916","endLine":16,"endColumn":14},{"ruleId":"913","severity":1,"message":"1000","line":26,"column":10,"nodeType":"915","messageId":"916","endLine":26,"endColumn":17},{"ruleId":"913","severity":1,"message":"1001","line":125,"column":9,"nodeType":"915","messageId":"916","endLine":125,"endColumn":19},{"ruleId":"913","severity":1,"message":"1002","line":126,"column":9,"nodeType":"915","messageId":"916","endLine":126,"endColumn":22},{"ruleId":"913","severity":1,"message":"1003","line":127,"column":28,"nodeType":"915","messageId":"916","endLine":127,"endColumn":47},{"ruleId":"913","severity":1,"message":"1004","line":130,"column":10,"nodeType":"915","messageId":"916","endLine":130,"endColumn":18},{"ruleId":"913","severity":1,"message":"1005","line":137,"column":9,"nodeType":"915","messageId":"916","endLine":137,"endColumn":17},{"ruleId":"913","severity":1,"message":"1006","line":138,"column":9,"nodeType":"915","messageId":"916","endLine":138,"endColumn":25},{"ruleId":"913","severity":1,"message":"1007","line":140,"column":10,"nodeType":"915","messageId":"916","endLine":140,"endColumn":18},{"ruleId":"913","severity":1,"message":"1008","line":156,"column":10,"nodeType":"915","messageId":"916","endLine":156,"endColumn":17},{"ruleId":"913","severity":1,"message":"1009","line":156,"column":19,"nodeType":"915","messageId":"916","endLine":156,"endColumn":29},{"ruleId":"913","severity":1,"message":"1010","line":157,"column":20,"nodeType":"915","messageId":"916","endLine":157,"endColumn":31},{"ruleId":"923","severity":1,"message":"990","line":177,"column":13,"nodeType":"991","endLine":203,"endColumn":4},{"ruleId":"923","severity":1,"message":"1015","line":203,"column":6,"nodeType":"925","endLine":203,"endColumn":21,"suggestions":"1047"},{"ruleId":"923","severity":1,"message":"990","line":205,"column":13,"nodeType":"991","endLine":232,"endColumn":4},{"ruleId":"961","severity":1,"message":"962","line":208,"column":20,"nodeType":"963","messageId":"964","endLine":208,"endColumn":22},{"ruleId":"923","severity":1,"message":"1017","line":232,"column":6,"nodeType":"925","endLine":232,"endColumn":19,"suggestions":"1048"},{"ruleId":"961","severity":1,"message":"962","line":256,"column":38,"nodeType":"963","messageId":"964","endLine":256,"endColumn":40},{"ruleId":"913","severity":1,"message":"1019","line":259,"column":13,"nodeType":"915","messageId":"916","endLine":259,"endColumn":25},{"ruleId":"961","severity":1,"message":"996","line":268,"column":50,"nodeType":"963","messageId":"964","endLine":268,"endColumn":52},{"ruleId":"913","severity":1,"message":"958","line":289,"column":13,"nodeType":"915","messageId":"916","endLine":289,"endColumn":17},{"ruleId":"961","severity":1,"message":"962","line":303,"column":16,"nodeType":"963","messageId":"964","endLine":303,"endColumn":18},{"ruleId":"970","severity":1,"message":"1020","line":311,"column":9,"nodeType":"972","messageId":"964","endLine":311,"endColumn":17},{"ruleId":"961","severity":1,"message":"962","line":314,"column":37,"nodeType":"963","messageId":"964","endLine":314,"endColumn":39},{"ruleId":"970","severity":1,"message":"1020","line":329,"column":9,"nodeType":"972","messageId":"964","endLine":329,"endColumn":17},{"ruleId":"961","severity":1,"message":"962","line":333,"column":37,"nodeType":"963","messageId":"964","endLine":333,"endColumn":39},{"ruleId":"913","severity":1,"message":"1002","line":339,"column":11,"nodeType":"915","messageId":"916","endLine":339,"endColumn":24},{"ruleId":"913","severity":1,"message":"1021","line":340,"column":11,"nodeType":"915","messageId":"916","endLine":340,"endColumn":20},{"ruleId":"913","severity":1,"message":"1022","line":341,"column":11,"nodeType":"915","messageId":"916","endLine":341,"endColumn":25},{"ruleId":"913","severity":1,"message":"1023","line":347,"column":11,"nodeType":"915","messageId":"916","endLine":347,"endColumn":23},{"ruleId":"913","severity":1,"message":"1024","line":353,"column":11,"nodeType":"915","messageId":"916","endLine":353,"endColumn":26},{"ruleId":"913","severity":1,"message":"1025","line":357,"column":11,"nodeType":"915","messageId":"916","endLine":357,"endColumn":22},{"ruleId":"961","severity":1,"message":"962","line":382,"column":25,"nodeType":"963","messageId":"964","endLine":382,"endColumn":27},{"ruleId":"961","severity":1,"message":"962","line":383,"column":16,"nodeType":"963","messageId":"964","endLine":383,"endColumn":18},{"ruleId":"923","severity":1,"message":"941","line":422,"column":6,"nodeType":"925","endLine":422,"endColumn":21,"suggestions":"1049"},{"ruleId":"961","severity":1,"message":"962","line":468,"column":19,"nodeType":"963","messageId":"964","endLine":468,"endColumn":21},{"ruleId":"961","severity":1,"message":"996","line":468,"column":50,"nodeType":"963","messageId":"964","endLine":468,"endColumn":52},{"ruleId":"961","severity":1,"message":"962","line":470,"column":21,"nodeType":"963","messageId":"964","endLine":470,"endColumn":23},{"ruleId":"961","severity":1,"message":"996","line":493,"column":29,"nodeType":"963","messageId":"964","endLine":493,"endColumn":31},{"ruleId":"961","severity":1,"message":"962","line":539,"column":35,"nodeType":"963","messageId":"964","endLine":539,"endColumn":37},{"ruleId":"961","severity":1,"message":"962","line":121,"column":36,"nodeType":"963","messageId":"964","endLine":121,"endColumn":38},{"ruleId":"961","severity":1,"message":"962","line":122,"column":31,"nodeType":"963","messageId":"964","endLine":122,"endColumn":33},{"ruleId":"970","severity":1,"message":"971","line":95,"column":5,"nodeType":"972","messageId":"964","endLine":95,"endColumn":12},{"ruleId":"913","severity":1,"message":"1034","line":132,"column":9,"nodeType":"915","messageId":"916","endLine":132,"endColumn":16},{"ruleId":"913","severity":1,"message":"1035","line":7,"column":10,"nodeType":"915","messageId":"916","endLine":7,"endColumn":15},{"ruleId":"913","severity":1,"message":"1036","line":7,"column":17,"nodeType":"915","messageId":"916","endLine":7,"endColumn":25},{"ruleId":"923","severity":1,"message":"1037","line":12,"column":15,"nodeType":"963","endLine":12,"endColumn":22},{"ruleId":"923","severity":1,"message":"1038","line":18,"column":17,"nodeType":"963","endLine":18,"endColumn":24},{"ruleId":"923","severity":1,"message":"1039","line":23,"column":17,"nodeType":"963","endLine":23,"endColumn":24},{"ruleId":"913","severity":1,"message":"973","line":2,"column":10,"nodeType":"915","messageId":"916","endLine":2,"endColumn":22},{"ruleId":"913","severity":1,"message":"974","line":3,"column":10,"nodeType":"915","messageId":"916","endLine":3,"endColumn":17},{"ruleId":"913","severity":1,"message":"975","line":3,"column":19,"nodeType":"915","messageId":"916","endLine":3,"endColumn":30},{"ruleId":"913","severity":1,"message":"976","line":39,"column":5,"nodeType":"915","messageId":"916","endLine":39,"endColumn":17},{"ruleId":"965","severity":1,"message":"966","line":102,"column":15,"nodeType":"967","endLine":102,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":105,"column":15,"nodeType":"967","endLine":105,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":112,"column":15,"nodeType":"967","endLine":112,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":119,"column":15,"nodeType":"967","endLine":119,"endColumn":27},{"ruleId":"913","severity":1,"message":"969","line":66,"column":19,"nodeType":"915","messageId":"916","endLine":66,"endColumn":23},{"ruleId":"961","severity":1,"message":"962","line":5,"column":15,"nodeType":"963","messageId":"964","endLine":5,"endColumn":17},{"ruleId":"961","severity":1,"message":"962","line":6,"column":15,"nodeType":"963","messageId":"964","endLine":6,"endColumn":17},{"ruleId":"961","severity":1,"message":"962","line":10,"column":35,"nodeType":"963","messageId":"964","endLine":10,"endColumn":37},{"ruleId":"913","severity":1,"message":"968","line":168,"column":7,"nodeType":"915","messageId":"916","endLine":168,"endColumn":16},"no-native-reassign",["1050"],"no-negated-in-lhs",["1051"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'getAuthUI' is defined but never used.","'CircularProgress' is defined but never used.","'PlayCircleIcon' is defined but never used.","'rows' is assigned a value but never used.","'Container' is defined but never used.","'Formik' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["1052"],"'createData' is defined but never used.","'TableContainer' is defined but never used.","'useSelector' is defined but never used.","'NavBar' is defined but never used.","'resultData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1053"],"'DoughnutChart' is defined but never used.","'QbankUsage' is assigned a value but never used.","'TestCount' is assigned a value but never used.","'dashboardData' is assigned a value but never used.","'uiActions' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["1054"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1055"],"'useContext' is defined but never used.","'getSubTopics' is defined but never used.","'getSubmitAnswer' is defined but never used.","'getsubmitUserdata' is defined but never used.","'currentSubTopic' is assigned a value but never used.","'subjectsId' is assigned a value but never used.",["1056"],"'topics' is assigned a value but never used.","Assignments to the 'subjectData' variable from inside React Hook useMemo will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useMemo.","'subTopics' is assigned a value but never used.","'setTestExists' is assigned a value but never used.","'handleToggle' is assigned a value but never used.","'CheckCircle' is defined but never used.","'dispatch' is assigned a value but never used.","'setProgress' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'UserNavigation' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'PayButton' is assigned a value but never used.","'user' is assigned a value but never used.","no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","'refreshToken' is defined but never used.","'actions' is defined but never used.","'ALERT_TYPES' is defined but never used.","'testQuestion' is assigned a value but never used.",["1050"],["1051"],["1057"],"'getQuestionMetaData' is defined but never used.","'fetchQuestions' is defined but never used.","'setQuestionFilter' is defined but never used.","'setSubmittedTestResultEmpty' is defined but never used.","'NavLink' is defined but never used.","'ShowSelectionContainer' is assigned a value but never used.",["1058"],"'packageData' is assigned a value but never used.","'selectedSubTopics' is assigned a value but never used.","'filterChangeHandler' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'UserData' and 'userId'. Either include them or remove the dependency array.",["1059"],"React Hook useEffect has a missing dependency: 'questionDetail'. Either include it or remove the dependency array.",["1060"],"Expected '!==' and instead saw '!='.","'incrementQuestionVisitCount' is defined but never used.","'addToResult' is defined but never used.","'submitAnswers' is defined but never used.","'headers' is defined but never used.","'stateValue' is assigned a value but never used.","'totalQuestion' is assigned a value but never used.","'setAnsweredQuestion' is assigned a value but never used.","'testTime' is assigned a value but never used.","'question' is assigned a value but never used.","'isReadyForSubmit' is assigned a value but never used.","'lastQues' is assigned a value but never used.","'runTime' is assigned a value but never used.","'setRunTime' is assigned a value but never used.","'setFormData' is assigned a value but never used.","no-implied-eval","Implied eval. Consider passing a function instead of a string.","CallExpression","impliedEval","React Hook useEffect has missing dependencies: 'getCompleteTestData', 'selectedPackage', and 'totalSelecteQuestion'. Either include them or remove the dependency array.",["1061"],"React Hook useEffect has a missing dependency: 'startTimer'. Either include it or remove the dependency array.",["1062"],"'prevQuestion' is assigned a value but never used.","Duplicate key 'isMarked'.","'timeSpent' is assigned a value but never used.","'totalIncorrect' is assigned a value but never used.","'totalCorrect' is assigned a value but never used.","'totalUnanswered' is assigned a value but never used.","'totalMarked' is assigned a value but never used.",["1063"],"'api' is defined but never used.","'overallData' is assigned a value but never used.","'setOverallData' is assigned a value but never used.","'setResultData' is assigned a value but never used.","'setResults' is assigned a value but never used.",["1064"],"'classes' is assigned a value but never used.","'history' is assigned a value but never used.","'timer' is assigned a value but never used.","'setTimer' is assigned a value but never used.","Assignments to the 'sec' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'min' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'hrs' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.",["1065"],["1066"],["1067"],["1050"],["1051"],["1068"],["1069"],["1070"],["1071"],["1072"],"no-global-assign","no-unsafe-negation",{"desc":"1073","fix":"1074"},{"desc":"1075","fix":"1076"},{"desc":"1077","fix":"1078"},{"desc":"1079","fix":"1080"},{"desc":"1081","fix":"1082"},{"desc":"1073","fix":"1083"},{"desc":"1081","fix":"1084"},{"desc":"1085","fix":"1086"},{"desc":"1087","fix":"1088"},{"desc":"1089","fix":"1090"},{"desc":"1091","fix":"1092"},{"desc":"1079","fix":"1093"},{"desc":"1075","fix":"1094"},{"desc":"1073","fix":"1095"},{"desc":"1075","fix":"1096"},{"desc":"1081","fix":"1097"},{"desc":"1087","fix":"1098"},{"desc":"1085","fix":"1099"},{"desc":"1089","fix":"1100"},{"desc":"1091","fix":"1101"},{"desc":"1079","fix":"1102"},"Update the dependencies array to be: [history, isAuth]",{"range":"1103","text":"1104"},"Update the dependencies array to be: [id]",{"range":"1105","text":"1106"},"Update the dependencies array to be: [dispatch, history, questionCount, totalQuestion]",{"range":"1107","text":"1108"},"Update the dependencies array to be: [dispatch, questionCount]",{"range":"1109","text":"1110"},"Update the dependencies array to be: [dispatch]",{"range":"1111","text":"1112"},{"range":"1113","text":"1104"},{"range":"1114","text":"1112"},"Update the dependencies array to be: [UserData, userId]",{"range":"1115","text":"1116"},"Update the dependencies array to be: [questionDetail]",{"range":"1117","text":"1118"},"Update the dependencies array to be: [countQuestion, getCompleteTestData, selectedPackage, totalSelecteQuestion]",{"range":"1119","text":"1120"},"Update the dependencies array to be: [endTestTime, startTimer]",{"range":"1121","text":"1122"},{"range":"1123","text":"1110"},{"range":"1124","text":"1106"},{"range":"1125","text":"1104"},{"range":"1126","text":"1106"},{"range":"1127","text":"1112"},{"range":"1128","text":"1118"},{"range":"1129","text":"1116"},{"range":"1130","text":"1120"},{"range":"1131","text":"1122"},{"range":"1132","text":"1110"},[2341,2349],"[history, isAuth]",[3324,3326],"[id]",[5029,5059],"[dispatch, history, questionCount, totalQuestion]",[5287,5302],"[dispatch, questionCount]",[2263,2265],"[dispatch]",[2341,2349],[2524,2526],[2236,2238],"[UserData, userId]",[1978,1980],"[questionDetail]",[6192,6207],"[countQuestion, getCompleteTestData, selectedPackage, totalSelecteQuestion]",[6941,6954],"[endTestTime, startTimer]",[13203,13218],[3742,3744],[2341,2349],[3742,3744],[2524,2526],[1978,1980],[2236,2238],[6253,6268],[7002,7015],[13304,13319]]